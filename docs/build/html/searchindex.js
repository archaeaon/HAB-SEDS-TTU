Search.setIndex({"docnames": ["API", "Config", "HAB-SEDS-TTU", "ProjectConfig", "index", "src/Drivers/APRS/APRS_cpp", "src/Drivers/APRS/APRS_hpp", "src/Drivers/APRS/afsk_cpp", "src/Drivers/APRS/afsk_h", "src/Drivers/APRS/ax25_cpp", "src/Drivers/APRS/ax25_h", "src/Drivers/APRS/dir", "src/Drivers/AnalogPin/AnalogPin_cpp", "src/Drivers/AnalogPin/AnalogPin_hpp", "src/Drivers/AnalogPin/dir", "src/Drivers/BMP/Adafruit_BMP085_U_cpp", "src/Drivers/BMP/Adafruit_BMP085_U_h", "src/Drivers/BMP/Adafruit_Sensor_h", "src/Drivers/BMP/BMP_cpp", "src/Drivers/BMP/BMP_hpp", "src/Drivers/BMP/dir", "src/Drivers/Drivers", "src/Drivers/GPS/GPS_cpp", "src/Drivers/GPS/GPS_hpp", "src/Drivers/GPS/TinyGPS++_cpp", "src/Drivers/GPS/TinyGPS++_h", "src/Drivers/GPS/dir", "src/Drivers/PWM/PWM_cpp", "src/Drivers/PWM/PWM_hpp", "src/Drivers/PWM/dir", "src/Drivers/Pushbutton/Pushbutton_cpp", "src/Drivers/Pushbutton/Pushbutton_hpp", "src/Drivers/Pushbutton/dir", "src/Drivers/SD_Card/SD_card_cpp", "src/Drivers/SD_Card/SD_card_hpp", "src/Drivers/SD_Card/dir", "src/Drivers/SERVO/Servo_cpp", "src/Drivers/SERVO/Servo_hpp", "src/Drivers/SERVO/dir", "src/Hardware_Configuration/HAB_ESP32", "src/Hardware_Configuration/HAB_Nano", "src/Hardware_Configuration/HAB_STM32", "src/Hardware_Configuration/HAB_Teensy", "src/Hardware_Configuration/HardwareConfig", "src/Hardware_Configuration/dir", "src/Utilities/DebugUtilities", "src/Utilities/HardwareUtilities", "src/Utilities/RandNumUtilities", "src/Utilities/TimerUtilities", "src/Utilities/Utilities", "src/Utilities/dir", "src/src"], "filenames": ["API.rst", "Config.rst", "HAB-SEDS-TTU.rst", "ProjectConfig.rst", "index.rst", "src/Drivers/APRS/APRS_cpp.rst", "src/Drivers/APRS/APRS_hpp.rst", "src/Drivers/APRS/afsk_cpp.rst", "src/Drivers/APRS/afsk_h.rst", "src/Drivers/APRS/ax25_cpp.rst", "src/Drivers/APRS/ax25_h.rst", "src/Drivers/APRS/dir.rst", "src/Drivers/AnalogPin/AnalogPin_cpp.rst", "src/Drivers/AnalogPin/AnalogPin_hpp.rst", "src/Drivers/AnalogPin/dir.rst", "src/Drivers/BMP/Adafruit_BMP085_U_cpp.rst", "src/Drivers/BMP/Adafruit_BMP085_U_h.rst", "src/Drivers/BMP/Adafruit_Sensor_h.rst", "src/Drivers/BMP/BMP_cpp.rst", "src/Drivers/BMP/BMP_hpp.rst", "src/Drivers/BMP/dir.rst", "src/Drivers/Drivers.rst", "src/Drivers/GPS/GPS_cpp.rst", "src/Drivers/GPS/GPS_hpp.rst", "src/Drivers/GPS/TinyGPS++_cpp.rst", "src/Drivers/GPS/TinyGPS++_h.rst", "src/Drivers/GPS/dir.rst", "src/Drivers/PWM/PWM_cpp.rst", "src/Drivers/PWM/PWM_hpp.rst", "src/Drivers/PWM/dir.rst", "src/Drivers/Pushbutton/Pushbutton_cpp.rst", "src/Drivers/Pushbutton/Pushbutton_hpp.rst", "src/Drivers/Pushbutton/dir.rst", "src/Drivers/SD_Card/SD_card_cpp.rst", "src/Drivers/SD_Card/SD_card_hpp.rst", "src/Drivers/SD_Card/dir.rst", "src/Drivers/SERVO/Servo_cpp.rst", "src/Drivers/SERVO/Servo_hpp.rst", "src/Drivers/SERVO/dir.rst", "src/Hardware_Configuration/HAB_ESP32.rst", "src/Hardware_Configuration/HAB_Nano.rst", "src/Hardware_Configuration/HAB_STM32.rst", "src/Hardware_Configuration/HAB_Teensy.rst", "src/Hardware_Configuration/HardwareConfig.rst", "src/Hardware_Configuration/dir.rst", "src/Utilities/DebugUtilities.rst", "src/Utilities/HardwareUtilities.rst", "src/Utilities/RandNumUtilities.rst", "src/Utilities/TimerUtilities.rst", "src/Utilities/Utilities.rst", "src/Utilities/dir.rst", "src/src.rst"], "titles": ["API", "Config.h", "HAB-SEDS-TTU.ino", "ProjectConfig.hpp", "Welcome to HAB-SEDS-TTU\u2019s documentation!", "APRS.cpp", "APRS.hpp", "afsk.cpp", "afsk.h", "ax25.cpp", "ax25.h", "APRS", "AnalogPin.cpp", "AnalogPin.hpp", "AnalogPin", "Adafruit_BMP085_U.cpp", "Adafruit_BMP085_U.h", "Adafruit_Sensor.h", "BMP.cpp", "BMP.hpp", "BMP", "Drivers", "GPS.cpp", "GPS.hpp", "TinyGPS++.cpp", "TinyGPS++.h", "GPS", "PWM.cpp", "PWM.hpp", "PWM", "Pushbutton.cpp", "Pushbutton.hpp", "Pushbutton", "SD_Card.cpp", "SD_Card.hpp", "SD_Card", "Servo.cpp", "Servo.hpp", "SERVO", "HAB_ESP32.hpp", "HAB_Nano.hpp", "HAB_STM32.hpp", "HAB_Teensy.hpp", "HardwareConfig.h", "Hardware_Configuration", "DebugUtilities.h", "HardwareUtilities.h", "RandNumUtilities.h", "TimerUtilities.h", "Utilities.h", "Utilities", "src"], "terms": {"hab": 0, "sed": 0, "ttu": 0, "ino": 0, "config": 0, "h": [0, 11, 20, 26, 44, 50], "projectconfig": 0, "hpp": [0, 11, 14, 20, 26, 29, 32, 35, 38, 44], "src": 0, "did": [1, 47], "thi": [1, 2, 16, 17, 27, 47, 49], "work": [1, 47], "test": 2, "function": [2, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 19, 23, 25, 27, 28, 31, 34, 37, 48], "void": [2, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 19, 23, 25, 27, 28, 31, 34, 37], "setup": [2, 16], "The": [2, 16, 17, 27], "initi": 2, "arduino": 2, "onli": 2, "run": 2, "onc": 2, "start": 2, "program": 2, "loop": 2, "variabl": [2, 3, 5, 6, 7, 9, 13, 15, 19, 23, 28, 31, 34, 37], "gp": [2, 21, 25], "gps_tx1_pin": 2, "gps_rx1_pin": 2, "gps2": [2, 23], "gps_tx2_pin": 2, "gps_rx2_pin": 2, "servo": [2, 21], "cutservo": [2, 37], "statu": [2, 17, 37], "apr": [2, 21], "sd_card": [2, 21], "defin": [3, 5, 7, 15, 16, 17, 24, 25, 46], "embedded__arduino": 3, "debug__en": 3, "debug__fprintf": 3, "debug__seri": 3, "teensy_en": 3, "esp32_en": 3, "stm32_enabl": 3, "nano_en": 3, "gps_enabl": 3, "aprs_en": 3, "bmp_enabl": 3, "led_en": 3, "sd_enabl": 3, "status_en": 3, "servo_en": 3, "pushbutton_en": 3, "analogpin_en": 3, "en_print_debug": 3, "s_callsign": 3, "d_callsign": 3, "symbol_t": 3, "symbol_char": 3, "const": [3, 5, 6, 7, 8, 9, 10, 13, 23, 25, 31, 34], "uint16_t": [3, 5, 6, 7, 8, 9, 10, 15, 16, 25], "servo_cut_alt": 3, "28000": 3, "uint32_t": [3, 6, 7, 8, 17, 23, 25], "servo_cut_timeout": 3, "5400": 3, "uint8_t": [3, 6, 7, 8, 9, 10, 13, 15, 17, 23, 25, 37], "servo_start_po": 3, "0": [3, 5, 7, 13, 17, 23, 27, 31, 34, 37], "servo_end_po": 3, "10": [3, 34], "servo_period": 3, "1": [3, 16, 25, 27], "s_callsign_id": 3, "11": [3, 34], "d_callsign_id": 3, "char": [3, 5, 6, 9, 10, 17, 25], "comment": [3, 6], "aprs_slot": 3, "gps_valid_pos_timeout": 3, "50": [3, 31], "gps_baudrat": 3, "9600": 3, "api": 4, "index": [4, 25], "modul": 4, "search": 4, "page": 4, "class": [6, 13, 16, 17, 19, 23, 25, 28, 31, 34, 37], "includ": [6, 13, 16, 17, 19, 23, 25, 28, 31, 34, 37, 48], "public": [6, 13, 16, 17, 19, 23, 25, 28, 31, 34, 37, 48], "inlin": [6, 7, 13, 17, 19, 23, 25, 28, 31, 34, 37, 48], "analogpin_setup": [13, 27, 28], "analogpin_upd": [13, 27, 28], "int": [5, 6, 7, 8, 9, 10, 13, 23, 25, 27, 28, 31, 34, 37], "getanalogvalu": 13, "privat": [6, 13, 16, 17, 19, 23, 25, 28, 31, 34, 37], "member": [6, 13, 16, 17, 19, 23, 25, 28, 31, 34, 37, 48], "a1": 13, "analogvalu": 13, "cpp": [11, 14, 20, 26, 29, 32, 35, 38], "analogpin": 21, "true": 46, "fals": [7, 23, 46], "ON": 46, "off": [27, 28, 46], "also": 47, "struct": [6, 9, 10, 16, 17, 25, 48], "softtimer_struct": 48, "bool": [6, 7, 16, 17, 19, 23, 25, 27, 28, 31, 34, 37, 48], "checktim": 48, "unsign": [5, 9, 10, 25, 28, 31, 48], "long": [5, 25, 31, 48], "lastmilli": 48, "waitmilli": 48, "isrepeat": 48, "isen": 48, "what": 49, "doe": 49, "look": 49, "like": 49, "debugutil": 50, "hardwareutil": 50, "randnumutil": 50, "timerutil": 50, "driver": [17, 51], "util": 51, "maxsendbuff": 5, "lattostr": 5, "": [5, 17], "size": 5, "float": [5, 6, 16, 17, 19, 23, 27, 28, 31], "lat": [5, 6, 25], "lontostr": 5, "lon": [5, 6], "static": [5, 7, 9, 15, 25, 28], "transmission_tim": 5, "preambleflag": [5, 9], "pathaddress": [6, 9, 10], "callsign": 6, "ssid": 6, "aprs_setup": 6, "p_preambleflag": 6, "pttpin": [6, 7, 8], "pttdelai": [6, 7, 8], "tonelength": [6, 7, 8], "silencelength": [6, 7], "aprs_upd": 6, "isvalidapr": 6, "aprs_transmit": 6, "aprs_send_with_str": 6, "path": [6, 9, 10], "npath": [6, 9, 10], "dayofmonth": 6, "hour": [6, 25], "min": [6, 17], "altitud": [6, 16, 19, 25], "head": [6, 17], "speed": [6, 25], "symboltableind": 6, "symbol": 6, "logbuff": 6, "buf": [6, 9, 10], "bitssent": 6, "validapr": 6, "aprs_period": 6, "300": 6, "bmp_setup": 19, "bmp_updat": 19, "isvalidbmp": 19, "getbaselinepressur": 19, "getpressur": [16, 19], "gettemperatur": [16, 19], "getaltitud": [19, 23], "getmaxaltitud": [19, 23], "adafruit_bmp085_unifi": [16, 17, 19], "bmpmodul": 19, "10085": 19, "validbmp": 19, "baselinepressur": 19, "pressur": [15, 16, 17, 19], "temperatur": [15, 16, 17, 19], "maxaltitud": [19, 23], "bmp": 21, "gps_setup": 23, "gps_updat": 23, "validloc": 23, "ageloc": 23, "doubl": [23, 25], "getcours": 23, "getspe": 23, "getlatitud": 23, "getlongitud": 23, "getfull_latitud": 23, "getfull_longitud": 23, "getdat": 23, "getsatellit": 23, "getdai": 23, "gethour": 23, "getminut": 23, "getsecond": 23, "gps_debug": 23, "tinygpsplu": [23, 25], "tinygp": [23, 26], "softwareseri": 23, "gpsmodul": 23, "valid_po": 23, "samples_per_cycl": 7, "interrupt_r": 7, "playback_r": 7, "baud_rat": 7, "mark_frequ": 7, "space_frequ": 7, "tone_frequ": 7, "sample_counter_scal": 7, "samples_per_bit_sc": 7, "fixed_pnt_bit": 7, "fixed_pnt_scal": 7, "sample_stride_tone_float": 7, "sample_stride_tone_fixed_pnt": 7, "sample_stride_mark_float": 7, "sample_stride_mark_fixed_pnt": 7, "sample_stride_space_float": 7, "sample_stride_space_fixed_pnt": 7, "table2_scal": 7, "sinscal": 7, "x": [7, 17], "sin_table_mark": 7, "sin_table_spac": 7, "afsk_read_sampl": 7, "sine_t": 7, "phase": 7, "afsk_output_sampl": 7, "b": [7, 17], "afsk_timer_stop": 7, "interrupt": 7, "afsk_timer_start": 7, "afsk_setup": [7, 8], "p_pttpin": 7, "p_pttdelai": 7, "p_tonelength": 7, "p_silencelength": [7, 8], "afsk_set_buff": [7, 8], "buffer": [7, 8, 25], "len": [7, 8], "afsk_busi": [7, 8], "afsk_start": [7, 8], "afsk_sine_table1": 7, "129": 7, "2047": 7, "2072": 7, "2097": 7, "2122": 7, "2147": 7, "2173": 7, "2198": 7, "2223": 7, "2248": 7, "2273": 7, "2298": 7, "2323": 7, "2348": 7, "2372": 7, "2397": 7, "2422": 7, "2447": 7, "2471": 7, "2496": 7, "2520": 7, "2545": 7, "2569": 7, "2593": 7, "2617": 7, "2642": 7, "2666": 7, "2689": 7, "2713": 7, "2737": 7, "2761": 7, "2784": 7, "2807": 7, "2831": 7, "2854": 7, "2877": 7, "2900": 7, "2923": 7, "2945": 7, "2968": 7, "2990": 7, "3012": 7, "3035": 7, "3056": 7, "3078": 7, "3100": 7, "3121": 7, "3143": 7, "3164": 7, "3185": 7, "3206": 7, "3226": 7, "3247": 7, "3267": 7, "3287": 7, "3307": 7, "3327": 7, "3346": 7, "3366": 7, "3385": 7, "3404": 7, "3422": 7, "3441": 7, "3459": 7, "3477": 7, "3495": 7, "3513": 7, "3530": 7, "3547": 7, "3564": 7, "3581": 7, "3598": 7, "3614": 7, "3630": 7, "3646": 7, "3662": 7, "3677": 7, "3692": 7, "3707": 7, "3721": 7, "3736": 7, "3750": 7, "3764": 7, "3777": 7, "3791": 7, "3804": 7, "3816": 7, "3829": 7, "3841": 7, "3853": 7, "3865": 7, "3876": 7, "3887": 7, "3898": 7, "3909": 7, "3919": 7, "3929": 7, "3939": 7, "3949": 7, "3958": 7, "3967": 7, "3975": 7, "3984": 7, "3992": 7, "3999": 7, "4007": 7, "4014": 7, "4021": 7, "4027": 7, "4034": 7, "4040": 7, "4045": 7, "4051": 7, "4056": 7, "4060": 7, "4065": 7, "4069": 7, "4073": 7, "4076": 7, "4080": 7, "4083": 7, "4085": 7, "4087": 7, "4089": 7, "4091": 7, "4093": 7, "4094": 7, "4095": 7, "afsk_sine_table2": 7, "volatil": 7, "busi": 7, "afsk_sine_t": 7, "sine_table_switch": 7, "currentsamplecount": 7, "currentstrid": 7, "currentsampl": 7, "totalsampless": 7, "current_byt": 7, "afsk_packet": 7, "afsk_packet_s": 7, "packet_po": 7, "fdoton": 7, "tonestop": 7, "silencestop": 7, "doxygenfil": [], "cannot": [], "find": [], "file": 34, "update_crc": 9, "a_bit": 9, "ax25_send_bit": 9, "bitstuff": 9, "ax25_send_byt": [9, 10], "a_byt": [9, 10], "ax25_send_flag": 9, "ax25_getpackets": [9, 10], "ax25_send_str": [9, 10], "string": [9, 10], "ax25_initbuff": [9, 10], "bufsiz": [9, 10], "ax25_send_head": [9, 10], "ax25_send_foot": [9, 10], "crc": 9, "ones_in_a_row": 9, "packet_s": 9, "packet": 9, "maxpackets": 9, "afsk": 11, "ax25": 11, "afsk_gettxdelai": 8, "txdelai": 10, "bmp085_use_datasheet_v": 15, "writecommand": 15, "byte": 15, "reg": 15, "valu": [15, 16, 17, 25, 27], "write": [15, 27], "an": 15, "8": 15, "bit": [15, 17], "over": 15, "i2c": 15, "read8": 15, "read": [15, 16], "read16": 15, "16": 15, "reads16": 15, "int16_t": [15, 16], "sign": 15, "readcoeffici": 15, "factori": 15, "set": [15, 25, 27], "coeffici": [15, 16], "readrawtemperatur": 15, "int32_t": [15, 16, 17, 25], "readrawpressur": 15, "bmp085_calib_data": [15, 16], "_bmp085_coeff": 15, "_bmp085mode": 15, "adafruit_bmp085_u": 20, "adafruit_sensor": [16, 20], "bmp085_address": 16, "enum": [16, 17, 25], "anonym": [16, 17, 25], "enumer": [16, 17, 25], "bmp085_register_cal_ac1": 16, "bmp085_register_cal_ac2": 16, "bmp085_register_cal_ac3": 16, "bmp085_register_cal_ac4": 16, "bmp085_register_cal_ac5": 16, "bmp085_register_cal_ac6": 16, "bmp085_register_cal_b1": 16, "bmp085_register_cal_b2": 16, "bmp085_register_cal_mb": 16, "bmp085_register_cal_mc": 16, "bmp085_register_cal_md": 16, "bmp085_register_chipid": 16, "bmp085_register_vers": 16, "bmp085_register_softreset": 16, "bmp085_register_control": 16, "bmp085_register_tempdata": 16, "bmp085_register_pressuredata": 16, "bmp085_register_readtempcmd": 16, "bmp085_register_readpressurecmd": 16, "bmp085_mode_t": 16, "bmp085_mode_ultralowpow": 16, "bmp085_mode_standard": 16, "bmp085_mode_highr": 16, "bmp085_mode_ultrahighr": 16, "ac1": 16, "ac2": 16, "ac3": 16, "ac4": 16, "ac5": 16, "ac6": 16, "b1": 16, "b2": 16, "mb": 16, "mc": 16, "md": 16, "sensorid": 16, "instanti": 16, "new": 16, "begin": [16, 25], "mode": 16, "hw": 16, "temp": 16, "degre": [16, 17], "celsiu": [16, 17], "get": 16, "compens": 16, "level": [16, 17], "kpa": 16, "pressuretoaltitud": 16, "sealevel": 16, "atmospher": 16, "calcul": 16, "meter": [16, 17, 25], "from": [16, 17], "specifi": 16, "hpa": [16, 17], "sea": [16, 17], "paramet": 16, "sealevelforaltitud": 16, "note": 16, "just": 16, "call": 16, "overload": 16, "which": 16, "take": 16, "8212": 16, "i": [16, 17], "ignor": 16, "origin": 16, "implement": 16, "wa": 16, "base": 16, "wikipedia": 16, "ar": [16, 17], "accur": 16, "higher": 16, "To": 16, "keep": 16, "compat": 16, "old": 16, "code": 16, "remain": 16, "same": 16, "interfac": 16, "more": 16, "virtual": [16, 17], "getev": [16, 17], "sensors_event_t": [16, 17], "sensor": [16, 17], "return": [16, 17, 27], "data": [16, 17], "getsensor": [16, 17], "sensor_t": [16, 17], "provid": [16, 17], "computeb5": 16, "ut": [16, 17], "comput": 16, "b5": 16, "us": [16, 17], "calc": 16, "_sensorid": 16, "sensors_gravity_earth": 17, "earth": 17, "graviti": 17, "m": 17, "2": 17, "sensors_gravity_moon": 17, "moon": 17, "sensors_gravity_sun": 17, "sun": 17, "sensors_gravity_standard": 17, "sensors_magfield_earth_max": 17, "maximum": 17, "magnet": 17, "field": 17, "surfac": 17, "sensors_magfield_earth_min": 17, "minimum": 17, "sensors_pressure_sealevelhpa": 17, "averag": 17, "1013": 17, "25": 17, "sensors_dps_to_rad": 17, "rad": 17, "multipli": 17, "sensors_gauss_to_microtesla": 17, "gauss": 17, "micro": 17, "tesla": 17, "sensors_type_t": 17, "type": [17, 25], "sensor_type_acceleromet": 17, "linear": 17, "acceler": 17, "sensor_type_magnetic_field": 17, "sensor_type_orient": 17, "sensor_type_gyroscop": 17, "sensor_type_light": 17, "sensor_type_pressur": 17, "sensor_type_proxim": 17, "sensor_type_grav": 17, "sensor_type_linear_acceler": 17, "sensor_type_rotation_vector": 17, "sensor_type_relative_humid": 17, "sensor_type_ambient_temperatur": 17, "sensor_type_voltag": 17, "sensor_type_curr": 17, "sensor_type_color": 17, "sensors_vec_t": 17, "sensors_vec_": 17, "vector": 17, "common": 17, "format": 17, "v": 17, "3": 17, "y": 17, "z": 17, "roll": 17, "rotat": 17, "around": 17, "longitudin": 17, "axi": 17, "plane": 17, "bodi": 17, "posit": [17, 37], "increas": 17, "when": 17, "move": 17, "downward": 17, "90": [17, 27], "pitch": 17, "later": 17, "wing": 17, "span": 17, "upward": 17, "180": 17, "angl": 17, "between": [17, 27], "north": 17, "measur": [17, 27], "clockwis": 17, "view": 17, "top": 17, "devic": 17, "359": 17, "union": 17, "int8_t": 17, "reserv": 17, "sensors_color_t": 17, "sensors_color_": 17, "color": 17, "c": [17, 25, 34], "r": 17, "red": 17, "compon": 17, "g": 17, "green": 17, "blue": 17, "rgba": 17, "24": 17, "sensor_event_": 17, "singl": 17, "event": 17, "version": 17, "must": 17, "sizeof": 17, "sensor_id": 17, "uniqu": 17, "identifi": 17, "reserved0": 17, "timestamp": 17, "time": [17, 25], "millisecond": 17, "4": 17, "per": 17, "second": [17, 25], "orient": 17, "gyro": 17, "gyroscop": 17, "centigrad": 17, "distanc": 17, "centimet": 17, "light": 17, "si": 17, "lux": 17, "unit": 17, "hectopasc": 17, "relative_humid": 17, "rel": 17, "humid": 17, "percent": 17, "current": [17, 27], "milliamp": 17, "ma": 17, "voltag": [17, 31], "volt": 17, "rgb": 17, "sensor_": 17, "describ": 17, "basic": 17, "inform": 17, "about": 17, "specif": 17, "name": 17, "12": [17, 34], "hardwar": 17, "ex": 17, "max_valu": 17, "min_valu": 17, "resolut": [17, 28], "smallest": 17, "differ": 17, "two": 17, "report": 17, "min_delai": 17, "delai": 17, "microsecond": 17, "zero": 17, "constant": 17, "rate": 17, "subclass": [17, 25], "enableautorang": 17, "enabl": 17, "_autorang": 17, "_gprmcterm": 24, "_gpggaterm": 24, "_gnrmcterm": 24, "_gnggaterm": 24, "combin": 24, "sentence_typ": 24, "term_numb": 24, "_gps_version": 25, "_gps_mph_per_knot": 25, "_gps_mps_per_knot": 25, "_gps_kmph_per_knot": 25, "_gps_miles_per_met": 25, "_gps_km_per_met": 25, "_gps_feet_per_met": 25, "_gps_max_field_s": 25, "rawdegre": 25, "deg": 25, "billionth": 25, "neg": 25, "tinygpsloc": 25, "isvalid": 25, "isupd": 25, "ag": 25, "rawlat": 25, "rawlng": 25, "lng": 25, "commit": 25, "setlatitud": 25, "term": 25, "setlongitud": 25, "valid": 25, "updat": 25, "rawlatdata": 25, "rawlngdata": 25, "rawnewlatdata": 25, "rawnewlngdata": 25, "lastcommittim": 25, "friend": 25, "tinygpsd": 25, "year": 25, "month": 25, "dai": 25, "setdat": 25, "date": 25, "newdat": 25, "tinygpstim": 25, "minut": 25, "centisecond": 25, "settim": 25, "newtim": 25, "tinygpsdecim": 25, "tinygpsaltitud": 25, "tinygpscours": 25, "tinygpshdop": 25, "tinygpsspe": 25, "val": 25, "newval": 25, "tinygpsinteg": 25, "knot": 25, "mph": 25, "mp": 25, "kmph": 25, "mile": 25, "kilomet": 25, "feet": 25, "hdop": 25, "tinygpscustom": 25, "sentencenam": 25, "termnumb": 25, "_sentencenam": 25, "_termnumb": 25, "stagingbuff": 25, "next": 25, "encod": 25, "oper": 25, "charsprocess": 25, "sentenceswithfix": 25, "failedchecksum": 25, "passedchecksum": 25, "locat": 25, "cours": 25, "satellit": 25, "libraryvers": 25, "distancebetween": 25, "lat1": 25, "long1": 25, "lat2": 25, "long2": 25, "courseto": 25, "cardin": 25, "parsedecim": 25, "parsedegre": 25, "gps_sentence_gpgga": 25, "gps_sentence_gprmc": 25, "gps_sentence_oth": 25, "insertcustom": 25, "pelt": 25, "fromhex": 25, "endoftermhandl": 25, "pariti": 25, "ischecksumterm": 25, "cursentencetyp": 25, "curtermnumb": 25, "curtermoffset": 25, "sentencehasfix": 25, "customelt": 25, "customcandid": 25, "encodedcharcount": 25, "sentenceswithfixcount": 25, "failedchecksumcount": 25, "passedchecksumcount": 25, "pushbutton": 21, "pushbutton_setup": 31, "pushbutton_upd": 31, "isvalidpushbutton": 31, "getvoltag": 31, "getbuttonst": 31, "getlastbuttonst": 31, "validpushbutton": 31, "buttonst": 31, "lastbuttonst": 31, "low": 31, "lastdebouncetim": 31, "debouncedelai": 31, "buttonpin": 31, "9": 31, "pwm": 21, "pin": [27, 28], "state": [27, 28], "setstat": [27, 28], "togglest": [27, 28], "getstat": [27, 28], "setdutycycl": [27, 28], "cycler": [27, 28], "getdutycycl": [27, 28], "output": 27, "duti": 27, "cycl": 27, "percentag": 27, "83": 27, "84": 27, "mai": 27, "match": 27, "exactli": 27, "previou": 27, "91": 27, "85": 27, "A": 27, "point": 27, "repres": 27, "being": 27, "86": 27, "lie": 27, "87": 27, "0f": 27, "100": 27, "88": 27, "89": 27, "setperiod": [27, 28], "_us_": [27, 28], "getperiod": [27, 28], "setpulsewidth": [27, 28], "u": [27, 28], "getpulsewidth": [27, 28], "outputpin": 28, "dutycycl": 28, "period_us_": 28, "pulsewidth_us_": 28, "attribut": 28, "chipselectpin": 34, "clk": 34, "13": 34, "do": 34, "di": 34, "sd": 34, "sd_setup": 34, "order": 34, "sd_record": 34, "sd_arraypass": 34, "isvalidsd": 34, "datafil": 34, "validsd": 34, "servo_setup": 37, "servo_statu": 37, "servo_mov": 37, "servo_upd": 37, "servostatu": 37, "currposit": 37, "hab_esp32": 44, "hab_nano": 44, "hab_stm32": 44, "hab_teensi": 44, "hardwareconfig": 44, "hardware_configur": 51}, "objects": {"": [[3, 0, 1, "c.ANALOGPIN_ENABLE", "ANALOGPIN_ENABLE"], [3, 0, 1, "c.APRS_ENABLE", "APRS_ENABLE"], [7, 0, 1, "c.BAUD_RATE", "BAUD_RATE"], [16, 0, 1, "c.BMP085_ADDRESS", "BMP085_ADDRESS"], [15, 0, 1, "c.BMP085_USE_DATASHEET_VALS", "BMP085_USE_DATASHEET_VALS"], [3, 0, 1, "c.BMP_ENABLE", "BMP_ENABLE"], [24, 0, 1, "c.COMBINE", "COMBINE"], [3, 0, 1, "c.DEBUG__ENABLE", "DEBUG__ENABLE"], [3, 0, 1, "c.DEBUG__FPRINTF", "DEBUG__FPRINTF"], [3, 0, 1, "c.DEBUG__SERIAL", "DEBUG__SERIAL"], [3, 0, 1, "c.D_CALLSIGN", "D_CALLSIGN"], [3, 0, 1, "c.EMBEDDED__ARDUINO", "EMBEDDED__ARDUINO"], [3, 0, 1, "c.EN_PRINT_DEBUG", "EN_PRINT_DEBUG"], [3, 0, 1, "c.ESP32_ENABLE", "ESP32_ENABLE"], [46, 0, 1, "c.FALSE", "FALSE"], [7, 0, 1, "c.FIXED_PNT_BITS", "FIXED_PNT_BITS"], [7, 0, 1, "c.FIXED_PNT_SCALE", "FIXED_PNT_SCALE"], [3, 0, 1, "c.GPS_ENABLE", "GPS_ENABLE"], [7, 0, 1, "c.INTERRUPT_RATE", "INTERRUPT_RATE"], [3, 0, 1, "c.LED_ENABLE", "LED_ENABLE"], [7, 0, 1, "c.MARK_FREQUENCY", "MARK_FREQUENCY"], [5, 0, 1, "c.MAXSENDBUFFER", "MAXSENDBUFFER"], [3, 0, 1, "c.NANO_ENABLE", "NANO_ENABLE"], [46, 0, 1, "c.OFF", "OFF"], [46, 0, 1, "c.ON", "ON"], [7, 0, 1, "c.PLAYBACK_RATE", "PLAYBACK_RATE"], [3, 0, 1, "c.PUSHBUTTON_ENABLE", "PUSHBUTTON_ENABLE"], [7, 0, 1, "c.SAMPLES_PER_BIT_SCALED", "SAMPLES_PER_BIT_SCALED"], [7, 0, 1, "c.SAMPLES_PER_CYCLE", "SAMPLES_PER_CYCLE"], [7, 0, 1, "c.SAMPLE_COUNTER_SCALE", "SAMPLE_COUNTER_SCALE"], [7, 0, 1, "c.SAMPLE_STRIDE_MARK_FIXED_PNT", "SAMPLE_STRIDE_MARK_FIXED_PNT"], [7, 0, 1, "c.SAMPLE_STRIDE_MARK_FLOAT", "SAMPLE_STRIDE_MARK_FLOAT"], [7, 0, 1, "c.SAMPLE_STRIDE_SPACE_FIXED_PNT", "SAMPLE_STRIDE_SPACE_FIXED_PNT"], [7, 0, 1, "c.SAMPLE_STRIDE_SPACE_FLOAT", "SAMPLE_STRIDE_SPACE_FLOAT"], [7, 0, 1, "c.SAMPLE_STRIDE_TONE_FIXED_PNT", "SAMPLE_STRIDE_TONE_FIXED_PNT"], [7, 0, 1, "c.SAMPLE_STRIDE_TONE_FLOAT", "SAMPLE_STRIDE_TONE_FLOAT"], [3, 0, 1, "c.SD_ENABLE", "SD_ENABLE"], [17, 0, 1, "c.SENSORS_DPS_TO_RADS", "SENSORS_DPS_TO_RADS"], [17, 0, 1, "c.SENSORS_GAUSS_TO_MICROTESLA", "SENSORS_GAUSS_TO_MICROTESLA"], [17, 0, 1, "c.SENSORS_GRAVITY_EARTH", "SENSORS_GRAVITY_EARTH"], [17, 0, 1, "c.SENSORS_GRAVITY_MOON", "SENSORS_GRAVITY_MOON"], [17, 0, 1, "c.SENSORS_GRAVITY_STANDARD", "SENSORS_GRAVITY_STANDARD"], [17, 0, 1, "c.SENSORS_GRAVITY_SUN", "SENSORS_GRAVITY_SUN"], [17, 0, 1, "c.SENSORS_MAGFIELD_EARTH_MAX", "SENSORS_MAGFIELD_EARTH_MAX"], [17, 0, 1, "c.SENSORS_MAGFIELD_EARTH_MIN", "SENSORS_MAGFIELD_EARTH_MIN"], [17, 0, 1, "c.SENSORS_PRESSURE_SEALEVELHPA", "SENSORS_PRESSURE_SEALEVELHPA"], [3, 0, 1, "c.SERVO_ENABLE", "SERVO_ENABLE"], [7, 0, 1, "c.SINSCALE", "SINSCALE"], [7, 0, 1, "c.SIN_TABLE_MARK", "SIN_TABLE_MARK"], [7, 0, 1, "c.SIN_TABLE_SPACE", "SIN_TABLE_SPACE"], [7, 0, 1, "c.SPACE_FREQUENCY", "SPACE_FREQUENCY"], [3, 0, 1, "c.STATUS_ENABLE", "STATUS_ENABLE"], [3, 0, 1, "c.STM32_ENABLE", "STM32_ENABLE"], [3, 0, 1, "c.SYMBOL_CHAR", "SYMBOL_CHAR"], [3, 0, 1, "c.SYMBOL_TABLE", "SYMBOL_TABLE"], [3, 0, 1, "c.S_CALLSIGN", "S_CALLSIGN"], [7, 0, 1, "c.TABLE2_SCALE", "TABLE2_SCALE"], [3, 0, 1, "c.TEENSY_ENABLE", "TEENSY_ENABLE"], [7, 0, 1, "c.TONE_FREQUENCY", "TONE_FREQUENCY"], [46, 0, 1, "c.TRUE", "TRUE"], [24, 0, 1, "c._GNGGAterm", "_GNGGAterm"], [24, 0, 1, "c._GNRMCterm", "_GNRMCterm"], [24, 0, 1, "c._GPGGAterm", "_GPGGAterm"], [24, 0, 1, "c._GPRMCterm", "_GPRMCterm"], [25, 0, 1, "c._GPS_FEET_PER_METER", "_GPS_FEET_PER_METER"], [25, 0, 1, "c._GPS_KMPH_PER_KNOT", "_GPS_KMPH_PER_KNOT"], [25, 0, 1, "c._GPS_KM_PER_METER", "_GPS_KM_PER_METER"], [25, 0, 1, "c._GPS_MAX_FIELD_SIZE", "_GPS_MAX_FIELD_SIZE"], [25, 0, 1, "c._GPS_MILES_PER_METER", "_GPS_MILES_PER_METER"], [25, 0, 1, "c._GPS_MPH_PER_KNOT", "_GPS_MPH_PER_KNOT"], [25, 0, 1, "c._GPS_MPS_PER_KNOT", "_GPS_MPS_PER_KNOT"], [25, 0, 1, "c._GPS_VERSION", "_GPS_VERSION"], [16, 1, 1, "_CPPv4Ut1_0", "[anonymous]"], [16, 2, 1, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC1E", "[anonymous]::BMP085_REGISTER_CAL_AC1"], [16, 2, 1, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC2E", "[anonymous]::BMP085_REGISTER_CAL_AC2"], [16, 2, 1, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC3E", "[anonymous]::BMP085_REGISTER_CAL_AC3"], [16, 2, 1, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC4E", "[anonymous]::BMP085_REGISTER_CAL_AC4"], [16, 2, 1, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC5E", "[anonymous]::BMP085_REGISTER_CAL_AC5"], [16, 2, 1, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC6E", "[anonymous]::BMP085_REGISTER_CAL_AC6"], [16, 2, 1, "_CPPv4NUt1_022BMP085_REGISTER_CAL_B1E", "[anonymous]::BMP085_REGISTER_CAL_B1"], [16, 2, 1, "_CPPv4NUt1_022BMP085_REGISTER_CAL_B2E", "[anonymous]::BMP085_REGISTER_CAL_B2"], [16, 2, 1, "_CPPv4NUt1_022BMP085_REGISTER_CAL_MBE", "[anonymous]::BMP085_REGISTER_CAL_MB"], [16, 2, 1, "_CPPv4NUt1_022BMP085_REGISTER_CAL_MCE", "[anonymous]::BMP085_REGISTER_CAL_MC"], [16, 2, 1, "_CPPv4NUt1_022BMP085_REGISTER_CAL_MDE", "[anonymous]::BMP085_REGISTER_CAL_MD"], [16, 2, 1, "_CPPv4NUt1_022BMP085_REGISTER_CHIPIDE", "[anonymous]::BMP085_REGISTER_CHIPID"], [16, 2, 1, "_CPPv4NUt1_023BMP085_REGISTER_CONTROLE", "[anonymous]::BMP085_REGISTER_CONTROL"], [16, 2, 1, "_CPPv4NUt1_028BMP085_REGISTER_PRESSUREDATAE", "[anonymous]::BMP085_REGISTER_PRESSUREDATA"], [16, 2, 1, "_CPPv4NUt1_031BMP085_REGISTER_READPRESSURECMDE", "[anonymous]::BMP085_REGISTER_READPRESSURECMD"], [16, 2, 1, "_CPPv4NUt1_027BMP085_REGISTER_READTEMPCMDE", "[anonymous]::BMP085_REGISTER_READTEMPCMD"], [16, 2, 1, "_CPPv4NUt1_025BMP085_REGISTER_SOFTRESETE", "[anonymous]::BMP085_REGISTER_SOFTRESET"], [16, 2, 1, "_CPPv4NUt1_024BMP085_REGISTER_TEMPDATAE", "[anonymous]::BMP085_REGISTER_TEMPDATA"], [16, 2, 1, "_CPPv4NUt1_023BMP085_REGISTER_VERSIONE", "[anonymous]::BMP085_REGISTER_VERSION"], [13, 3, 1, "_CPPv49ANALOGPIN", "ANALOGPIN"], [13, 4, 1, "_CPPv4N9ANALOGPIN9ANALOGPINEv", "ANALOGPIN::ANALOGPIN"], [13, 4, 1, "_CPPv4N9ANALOGPIN15ANALOGPIN_SetupEv", "ANALOGPIN::ANALOGPIN_Setup"], [13, 4, 1, "_CPPv4N9ANALOGPIN16ANALOGPIN_UpdateEv", "ANALOGPIN::ANALOGPIN_Update"], [13, 5, 1, "_CPPv4N9ANALOGPIN9analogPinE", "ANALOGPIN::analogPin"], [13, 5, 1, "_CPPv4N9ANALOGPIN11analogValueE", "ANALOGPIN::analogValue"], [13, 4, 1, "_CPPv4N9ANALOGPIN14getAnalogValueEv", "ANALOGPIN::getAnalogValue"], [13, 4, 1, "_CPPv4N9ANALOGPIND0Ev", "ANALOGPIN::~ANALOGPIN"], [27, 4, 1, "_CPPv415ANALOGPIN_Setupib", "ANALOGPIN_Setup"], [27, 6, 1, "_CPPv415ANALOGPIN_Setupib", "ANALOGPIN_Setup::Pin"], [27, 6, 1, "_CPPv415ANALOGPIN_Setupib", "ANALOGPIN_Setup::state"], [27, 4, 1, "_CPPv416ANALOGPIN_Updatev", "ANALOGPIN_Update"], [6, 3, 1, "_CPPv44APRS", "APRS"], [6, 4, 1, "_CPPv4N4APRS4APRSEv", "APRS::APRS"], [6, 5, 1, "_CPPv4N4APRS11APRS_PERIODE", "APRS::APRS_PERIOD"], [6, 4, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::altitude"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::comment"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::dayOfMonth"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::heading"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::hour"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::lat"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::lon"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::min"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::nPaths"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::paths"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::speed"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::symbol"], [6, 6, 1, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc", "APRS::APRS_Send_with_String::symbolTableIndicator"], [6, 4, 1, "_CPPv4N4APRS10APRS_SetupEK8uint16_tK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "APRS::APRS_Setup"], [6, 6, 1, "_CPPv4N4APRS10APRS_SetupEK8uint16_tK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "APRS::APRS_Setup::p_preambleFlags"], [6, 6, 1, "_CPPv4N4APRS10APRS_SetupEK8uint16_tK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "APRS::APRS_Setup::pttDelay"], [6, 6, 1, "_CPPv4N4APRS10APRS_SetupEK8uint16_tK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "APRS::APRS_Setup::pttPin"], [6, 6, 1, "_CPPv4N4APRS10APRS_SetupEK8uint16_tK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "APRS::APRS_Setup::silenceLength"], [6, 6, 1, "_CPPv4N4APRS10APRS_SetupEK8uint16_tK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "APRS::APRS_Setup::toneLength"], [6, 4, 1, "_CPPv4N4APRS13APRS_TransmitEv", "APRS::APRS_Transmit"], [6, 4, 1, "_CPPv4N4APRS11APRS_UpdateEv", "APRS::APRS_Update"], [6, 4, 1, "_CPPv4N4APRS11IsValidAPRSEv", "APRS::IsValidAPRS"], [6, 5, 1, "_CPPv4N4APRS9ValidAPRSE", "APRS::ValidAPRS"], [6, 4, 1, "_CPPv4N4APRS9logBufferEPCK7uint8_tKiK7uint8_tK7uint8_tK7uint8_t", "APRS::logBuffer"], [6, 6, 1, "_CPPv4N4APRS9logBufferEPCK7uint8_tKiK7uint8_tK7uint8_tK7uint8_t", "APRS::logBuffer::bitsSent"], [6, 6, 1, "_CPPv4N4APRS9logBufferEPCK7uint8_tKiK7uint8_tK7uint8_tK7uint8_t", "APRS::logBuffer::buf"], [6, 6, 1, "_CPPv4N4APRS9logBufferEPCK7uint8_tKiK7uint8_tK7uint8_tK7uint8_t", "APRS::logBuffer::dayOfMonth"], [6, 6, 1, "_CPPv4N4APRS9logBufferEPCK7uint8_tKiK7uint8_tK7uint8_tK7uint8_t", "APRS::logBuffer::hour"], [6, 6, 1, "_CPPv4N4APRS9logBufferEPCK7uint8_tKiK7uint8_tK7uint8_tK7uint8_t", "APRS::logBuffer::min"], [6, 4, 1, "_CPPv4N4APRSD0Ev", "APRS::~APRS"], [3, 5, 1, "_CPPv49APRS_SLOT", "APRS_SLOT"], [16, 3, 1, "_CPPv423Adafruit_BMP085_Unified", "Adafruit_BMP085_Unified"], [16, 4, 1, "_CPPv4N23Adafruit_BMP085_Unified23Adafruit_BMP085_UnifiedE7int32_t", "Adafruit_BMP085_Unified::Adafruit_BMP085_Unified"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified23Adafruit_BMP085_UnifiedE7int32_t", "Adafruit_BMP085_Unified::Adafruit_BMP085_Unified::sensorID"], [16, 5, 1, "_CPPv4N23Adafruit_BMP085_Unified9_sensorIDE", "Adafruit_BMP085_Unified::_sensorID"], [16, 4, 1, "_CPPv4N23Adafruit_BMP085_Unified5beginE13bmp085_mode_t", "Adafruit_BMP085_Unified::begin"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified5beginE13bmp085_mode_t", "Adafruit_BMP085_Unified::begin::mode"], [16, 4, 1, "_CPPv4N23Adafruit_BMP085_Unified9computeB5E7int32_t", "Adafruit_BMP085_Unified::computeB5"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified9computeB5E7int32_t", "Adafruit_BMP085_Unified::computeB5::ut"], [16, 4, 1, "_CPPv4N23Adafruit_BMP085_Unified8getEventEP15sensors_event_t", "Adafruit_BMP085_Unified::getEvent"], [16, 4, 1, "_CPPv4N23Adafruit_BMP085_Unified11getPressureEPf", "Adafruit_BMP085_Unified::getPressure"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified11getPressureEPf", "Adafruit_BMP085_Unified::getPressure::pressure"], [16, 4, 1, "_CPPv4N23Adafruit_BMP085_Unified9getSensorEP8sensor_t", "Adafruit_BMP085_Unified::getSensor"], [16, 4, 1, "_CPPv4N23Adafruit_BMP085_Unified14getTemperatureEPf", "Adafruit_BMP085_Unified::getTemperature"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified14getTemperatureEPf", "Adafruit_BMP085_Unified::getTemperature::temp"], [16, 4, 1, "_CPPv4N23Adafruit_BMP085_Unified18pressureToAltitudeEff", "Adafruit_BMP085_Unified::pressureToAltitude"], [16, 4, 1, "_CPPv4N23Adafruit_BMP085_Unified18pressureToAltitudeEfff", "Adafruit_BMP085_Unified::pressureToAltitude"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified18pressureToAltitudeEff", "Adafruit_BMP085_Unified::pressureToAltitude::atmospheric"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified18pressureToAltitudeEfff", "Adafruit_BMP085_Unified::pressureToAltitude::atmospheric"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified18pressureToAltitudeEff", "Adafruit_BMP085_Unified::pressureToAltitude::seaLevel"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified18pressureToAltitudeEfff", "Adafruit_BMP085_Unified::pressureToAltitude::seaLevel"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified18pressureToAltitudeEfff", "Adafruit_BMP085_Unified::pressureToAltitude::temp"], [16, 4, 1, "_CPPv4N23Adafruit_BMP085_Unified19seaLevelForAltitudeEff", "Adafruit_BMP085_Unified::seaLevelForAltitude"], [16, 4, 1, "_CPPv4N23Adafruit_BMP085_Unified19seaLevelForAltitudeEfff", "Adafruit_BMP085_Unified::seaLevelForAltitude"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified19seaLevelForAltitudeEff", "Adafruit_BMP085_Unified::seaLevelForAltitude::altitude"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified19seaLevelForAltitudeEfff", "Adafruit_BMP085_Unified::seaLevelForAltitude::altitude"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified19seaLevelForAltitudeEff", "Adafruit_BMP085_Unified::seaLevelForAltitude::atmospheric"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified19seaLevelForAltitudeEfff", "Adafruit_BMP085_Unified::seaLevelForAltitude::atmospheric"], [16, 6, 1, "_CPPv4N23Adafruit_BMP085_Unified19seaLevelForAltitudeEfff", "Adafruit_BMP085_Unified::seaLevelForAltitude::temp"], [17, 3, 1, "_CPPv415Adafruit_Sensor", "Adafruit_Sensor"], [17, 4, 1, "_CPPv4N15Adafruit_Sensor15Adafruit_SensorEv", "Adafruit_Sensor::Adafruit_Sensor"], [17, 5, 1, "_CPPv4N15Adafruit_Sensor10_autoRangeE", "Adafruit_Sensor::_autoRange"], [17, 4, 1, "_CPPv4N15Adafruit_Sensor15enableAutoRangeEb", "Adafruit_Sensor::enableAutoRange"], [17, 6, 1, "_CPPv4N15Adafruit_Sensor15enableAutoRangeEb", "Adafruit_Sensor::enableAutoRange::enabled"], [17, 4, 1, "_CPPv4N15Adafruit_Sensor8getEventEP15sensors_event_t", "Adafruit_Sensor::getEvent"], [17, 4, 1, "_CPPv4N15Adafruit_Sensor9getSensorEP8sensor_t", "Adafruit_Sensor::getSensor"], [17, 4, 1, "_CPPv4N15Adafruit_SensorD0Ev", "Adafruit_Sensor::~Adafruit_Sensor"], [19, 3, 1, "_CPPv43BMP", "BMP"], [19, 5, 1, "_CPPv4N3BMP8AltitudeE", "BMP::Altitude"], [19, 4, 1, "_CPPv4N3BMP3BMPEv", "BMP::BMP"], [19, 5, 1, "_CPPv4N3BMP9BMPModuleE", "BMP::BMPModule"], [19, 4, 1, "_CPPv4N3BMP9BMP_SetupEv", "BMP::BMP_Setup"], [19, 4, 1, "_CPPv4N3BMP10BMP_UpdateEv", "BMP::BMP_Update"], [19, 5, 1, "_CPPv4N3BMP16BaselinePressureE", "BMP::BaselinePressure"], [19, 4, 1, "_CPPv4N3BMP11GetAltitudeEv", "BMP::GetAltitude"], [19, 4, 1, "_CPPv4N3BMP19GetBaselinePressureEv", "BMP::GetBaselinePressure"], [19, 4, 1, "_CPPv4N3BMP14GetMaxAltitudeEv", "BMP::GetMaxAltitude"], [19, 4, 1, "_CPPv4N3BMP11GetPressureEv", "BMP::GetPressure"], [19, 4, 1, "_CPPv4N3BMP14GetTemperatureEv", "BMP::GetTemperature"], [19, 4, 1, "_CPPv4N3BMP10IsValidBMPEv", "BMP::IsValidBMP"], [19, 5, 1, "_CPPv4N3BMP11MaxAltitudeE", "BMP::MaxAltitude"], [19, 5, 1, "_CPPv4N3BMP8PressureE", "BMP::Pressure"], [19, 5, 1, "_CPPv4N3BMP11TemperatureE", "BMP::Temperature"], [19, 5, 1, "_CPPv4N3BMP8ValidBMPE", "BMP::ValidBMP"], [19, 4, 1, "_CPPv4N3BMPD0Ev", "BMP::~BMP"], [34, 5, 1, "_CPPv43CLK", "CLK"], [34, 5, 1, "_CPPv42CS", "CS"], [34, 5, 1, "_CPPv413ChipSelectPin", "ChipSelectPin"], [2, 5, 1, "_CPPv48CutServo", "CutServo"], [37, 5, 1, "_CPPv48CutServo", "CutServo"], [34, 5, 1, "_CPPv42DI", "DI"], [34, 5, 1, "_CPPv42DO", "DO"], [3, 5, 1, "_CPPv413D_CALLSIGN_ID", "D_CALLSIGN_ID"], [23, 3, 1, "_CPPv43GPS", "GPS"], [23, 4, 1, "_CPPv4N3GPS11AgeLocationEv", "GPS::AgeLocation"], [23, 4, 1, "_CPPv4N3GPS3GPSEK7uint8_tK7uint8_t", "GPS::GPS"], [23, 5, 1, "_CPPv4N3GPS9GPSModuleE", "GPS::GPSModule"], [23, 4, 1, "_CPPv4N3GPS9GPS_DebugEv", "GPS::GPS_Debug"], [23, 4, 1, "_CPPv4N3GPS9GPS_SetupEv", "GPS::GPS_Setup"], [23, 4, 1, "_CPPv4N3GPS10GPS_UpdateEv", "GPS::GPS_Update"], [23, 4, 1, "_CPPv4N3GPS11GetAltitudeEv", "GPS::GetAltitude"], [23, 4, 1, "_CPPv4N3GPS9GetCourseEv", "GPS::GetCourse"], [23, 4, 1, "_CPPv4N3GPS7GetDateEv", "GPS::GetDate"], [23, 4, 1, "_CPPv4N3GPS6GetDayEv", "GPS::GetDay"], [23, 4, 1, "_CPPv4N3GPS16GetFull_LatitudeEv", "GPS::GetFull_Latitude"], [23, 4, 1, "_CPPv4N3GPS17GetFull_LongitudeEv", "GPS::GetFull_Longitude"], [23, 4, 1, "_CPPv4N3GPS7GetHourEv", "GPS::GetHour"], [23, 4, 1, "_CPPv4N3GPS11GetLatitudeEv", "GPS::GetLatitude"], [23, 4, 1, "_CPPv4N3GPS12GetLongitudeEv", "GPS::GetLongitude"], [23, 4, 1, "_CPPv4N3GPS14GetMaxAltitudeEv", "GPS::GetMaxAltitude"], [23, 4, 1, "_CPPv4N3GPS9GetMinuteEv", "GPS::GetMinute"], [23, 4, 1, "_CPPv4N3GPS13GetSatellitesEv", "GPS::GetSatellites"], [23, 4, 1, "_CPPv4N3GPS9GetSecondEv", "GPS::GetSecond"], [23, 4, 1, "_CPPv4N3GPS8GetSpeedEv", "GPS::GetSpeed"], [23, 5, 1, "_CPPv4N3GPS11MaxAltitudeE", "GPS::MaxAltitude"], [23, 4, 1, "_CPPv4N3GPS13ValidLocationEv", "GPS::ValidLocation"], [23, 5, 1, "_CPPv4N3GPS7tinyGPSE", "GPS::tinyGPS"], [23, 5, 1, "_CPPv4N3GPS9valid_posE", "GPS::valid_pos"], [23, 4, 1, "_CPPv4N3GPSD0Ev", "GPS::~GPS"], [3, 5, 1, "_CPPv412GPS_BAUDRATE", "GPS_BAUDRATE"], [3, 5, 1, "_CPPv421GPS_VALID_POS_TIMEOUT", "GPS_VALID_POS_TIMEOUT"], [31, 3, 1, "_CPPv410PUSHBUTTON", "PUSHBUTTON"], [31, 4, 1, "_CPPv4N10PUSHBUTTON10GetVoltageEv", "PUSHBUTTON::GetVoltage"], [31, 4, 1, "_CPPv4N10PUSHBUTTON14GetbuttonStateEv", "PUSHBUTTON::GetbuttonState"], [31, 4, 1, "_CPPv4N10PUSHBUTTON18GetlastButtonStateEv", "PUSHBUTTON::GetlastButtonState"], [31, 4, 1, "_CPPv4N10PUSHBUTTON17IsValidPUSHBUTTONEv", "PUSHBUTTON::IsValidPUSHBUTTON"], [31, 4, 1, "_CPPv4N10PUSHBUTTON10PUSHBUTTONEv", "PUSHBUTTON::PUSHBUTTON"], [31, 4, 1, "_CPPv4N10PUSHBUTTON16PUSHBUTTON_SetupEv", "PUSHBUTTON::PUSHBUTTON_Setup"], [31, 4, 1, "_CPPv4N10PUSHBUTTON17PUSHBUTTON_UpdateEv", "PUSHBUTTON::PUSHBUTTON_Update"], [31, 5, 1, "_CPPv4N10PUSHBUTTON15ValidPUSHBUTTONE", "PUSHBUTTON::ValidPUSHBUTTON"], [31, 5, 1, "_CPPv4N10PUSHBUTTON9buttonPinE", "PUSHBUTTON::buttonPin"], [31, 5, 1, "_CPPv4N10PUSHBUTTON11buttonStateE", "PUSHBUTTON::buttonState"], [31, 5, 1, "_CPPv4N10PUSHBUTTON13debounceDelayE", "PUSHBUTTON::debounceDelay"], [31, 5, 1, "_CPPv4N10PUSHBUTTON15lastButtonStateE", "PUSHBUTTON::lastButtonState"], [31, 5, 1, "_CPPv4N10PUSHBUTTON16lastDebounceTimeE", "PUSHBUTTON::lastDebounceTime"], [31, 5, 1, "_CPPv4N10PUSHBUTTON7voltageE", "PUSHBUTTON::voltage"], [31, 4, 1, "_CPPv4N10PUSHBUTTOND0Ev", "PUSHBUTTON::~PUSHBUTTON"], [28, 3, 1, "_CPPv43PWM", "PWM"], [28, 4, 1, "_CPPv4N3PWM15ANALOGPIN_SetupEib", "PWM::ANALOGPIN_Setup"], [28, 6, 1, "_CPPv4N3PWM15ANALOGPIN_SetupEib", "PWM::ANALOGPIN_Setup::Pin"], [28, 6, 1, "_CPPv4N3PWM15ANALOGPIN_SetupEib", "PWM::ANALOGPIN_Setup::state"], [28, 4, 1, "_CPPv4N3PWM16ANALOGPIN_UpdateEv", "PWM::ANALOGPIN_Update"], [28, 5, 1, "_CPPv4N3PWM9DutyCycleE", "PWM::DutyCycle"], [28, 5, 1, "_CPPv4N3PWM9OutputPinE", "PWM::OutputPin"], [28, 4, 1, "_CPPv4N3PWM3PWMEv", "PWM::PWM"], [28, 5, 1, "_CPPv4N3PWM10Period_us_E", "PWM::Period_us_"], [28, 5, 1, "_CPPv4N3PWM14PulseWidth_us_E", "PWM::PulseWidth_us_"], [28, 5, 1, "_CPPv4N3PWM10ResolutionE", "PWM::Resolution"], [28, 5, 1, "_CPPv4N3PWM5StateE", "PWM::State"], [28, 4, 1, "_CPPv4N3PWM12getDutyCycleEv", "PWM::getDutyCycle"], [28, 4, 1, "_CPPv4N3PWM9getPeriodEv", "PWM::getPeriod"], [28, 4, 1, "_CPPv4N3PWM13getPulseWidthEv", "PWM::getPulseWidth"], [28, 4, 1, "_CPPv4N3PWM8getStateEv", "PWM::getState"], [28, 4, 1, "_CPPv4N3PWM12setDutyCycleEf", "PWM::setDutyCycle"], [28, 6, 1, "_CPPv4N3PWM12setDutyCycleEf", "PWM::setDutyCycle::CycleRate"], [28, 4, 1, "_CPPv4N3PWM9setPeriodEf", "PWM::setPeriod"], [28, 6, 1, "_CPPv4N3PWM9setPeriodEf", "PWM::setPeriod::_us_"], [28, 4, 1, "_CPPv4N3PWM13setPulseWidthEf", "PWM::setPulseWidth"], [28, 6, 1, "_CPPv4N3PWM13setPulseWidthEf", "PWM::setPulseWidth::us"], [28, 4, 1, "_CPPv4N3PWM8setStateEb", "PWM::setState"], [28, 6, 1, "_CPPv4N3PWM8setStateEb", "PWM::setState::state"], [28, 4, 1, "_CPPv4N3PWM11toggleStateEv", "PWM::toggleState"], [28, 4, 1, "_CPPv4N3PWMD0Ev", "PWM::~PWM"], [6, 3, 1, "_CPPv411PathAddress", "PathAddress"], [6, 5, 1, "_CPPv4N11PathAddress8callsignE", "PathAddress::callsign"], [6, 5, 1, "_CPPv4N11PathAddress4ssidE", "PathAddress::ssid"], [25, 3, 1, "_CPPv410RawDegrees", "RawDegrees"], [25, 4, 1, "_CPPv4N10RawDegrees10RawDegreesEv", "RawDegrees::RawDegrees"], [25, 5, 1, "_CPPv4N10RawDegrees10billionthsE", "RawDegrees::billionths"], [25, 5, 1, "_CPPv4N10RawDegrees3degE", "RawDegrees::deg"], [25, 5, 1, "_CPPv4N10RawDegrees8negativeE", "RawDegrees::negative"], [34, 3, 1, "_CPPv47SD_card", "SD_card"], [34, 4, 1, "_CPPv4N7SD_card9IsValidSDEv", "SD_card::IsValidSD"], [34, 4, 1, "_CPPv4N7SD_card9SD_RecordEv", "SD_card::SD_Record"], [34, 4, 1, "_CPPv4N7SD_card8SD_SetupEv", "SD_card::SD_Setup"], [34, 4, 1, "_CPPv4N7SD_card12SD_arrayPassEv", "SD_card::SD_arrayPass"], [34, 4, 1, "_CPPv4N7SD_card7SD_cardEv", "SD_card::SD_card"], [34, 5, 1, "_CPPv4N7SD_card7ValidSDE", "SD_card::ValidSD"], [34, 5, 1, "_CPPv4N7SD_card8dataFileE", "SD_card::dataFile"], [34, 4, 1, "_CPPv4N7SD_cardD0Ev", "SD_card::~SD_card"], [3, 5, 1, "_CPPv413SERVO_CUT_ALT", "SERVO_CUT_ALT"], [3, 5, 1, "_CPPv417SERVO_CUT_TIMEOUT", "SERVO_CUT_TIMEOUT"], [3, 5, 1, "_CPPv413SERVO_END_POS", "SERVO_END_POS"], [3, 5, 1, "_CPPv412SERVO_PERIOD", "SERVO_PERIOD"], [3, 5, 1, "_CPPv415SERVO_START_POS", "SERVO_START_POS"], [3, 5, 1, "_CPPv413S_CALLSIGN_ID", "S_CALLSIGN_ID"], [37, 3, 1, "_CPPv45Servo", "Servo"], [37, 5, 1, "_CPPv4N5Servo12CurrPositionE", "Servo::CurrPosition"], [37, 4, 1, "_CPPv4N5Servo5ServoEv", "Servo::Servo"], [37, 5, 1, "_CPPv4N5Servo11ServoStatusE", "Servo::ServoStatus"], [37, 4, 1, "_CPPv4N5Servo10Servo_MoveE7uint8_t", "Servo::Servo_Move"], [37, 6, 1, "_CPPv4N5Servo10Servo_MoveE7uint8_t", "Servo::Servo_Move::Position"], [37, 4, 1, "_CPPv4N5Servo11Servo_SetupEv", "Servo::Servo_Setup"], [37, 4, 1, "_CPPv4N5Servo12Servo_StatusEb", "Servo::Servo_Status"], [37, 6, 1, "_CPPv4N5Servo12Servo_StatusEb", "Servo::Servo_Status::Status"], [37, 4, 1, "_CPPv4N5Servo12Servo_UpdateEv", "Servo::Servo_Update"], [37, 4, 1, "_CPPv4N5ServoD0Ev", "Servo::~Servo"], [48, 3, 1, "_CPPv416SoftTimer_Struct", "SoftTimer_Struct"], [48, 4, 1, "_CPPv4N16SoftTimer_Struct9CheckTimeEv", "SoftTimer_Struct::CheckTime"], [48, 5, 1, "_CPPv4N16SoftTimer_Struct9IsEnabledE", "SoftTimer_Struct::IsEnabled"], [48, 5, 1, "_CPPv4N16SoftTimer_Struct12IsRepeatableE", "SoftTimer_Struct::IsRepeatable"], [48, 5, 1, "_CPPv4N16SoftTimer_Struct10lastMillisE", "SoftTimer_Struct::lastMillis"], [48, 5, 1, "_CPPv4N16SoftTimer_Struct10waitMillisE", "SoftTimer_Struct::waitMillis"], [25, 3, 1, "_CPPv415TinyGPSAltitude", "TinyGPSAltitude"], [25, 4, 1, "_CPPv4N15TinyGPSAltitude4feetEv", "TinyGPSAltitude::feet"], [25, 4, 1, "_CPPv4N15TinyGPSAltitude10kilometersEv", "TinyGPSAltitude::kilometers"], [25, 4, 1, "_CPPv4N15TinyGPSAltitude6metersEv", "TinyGPSAltitude::meters"], [25, 4, 1, "_CPPv4N15TinyGPSAltitude5milesEv", "TinyGPSAltitude::miles"], [25, 3, 1, "_CPPv413TinyGPSCourse", "TinyGPSCourse"], [25, 4, 1, "_CPPv4N13TinyGPSCourse3degEv", "TinyGPSCourse::deg"], [25, 3, 1, "_CPPv413TinyGPSCustom", "TinyGPSCustom"], [25, 4, 1, "_CPPv4N13TinyGPSCustom13TinyGPSCustomER11TinyGPSPlusPKci", "TinyGPSCustom::TinyGPSCustom"], [25, 4, 1, "_CPPv4N13TinyGPSCustom13TinyGPSCustomEv", "TinyGPSCustom::TinyGPSCustom"], [25, 6, 1, "_CPPv4N13TinyGPSCustom13TinyGPSCustomER11TinyGPSPlusPKci", "TinyGPSCustom::TinyGPSCustom::gps"], [25, 6, 1, "_CPPv4N13TinyGPSCustom13TinyGPSCustomER11TinyGPSPlusPKci", "TinyGPSCustom::TinyGPSCustom::sentenceName"], [25, 6, 1, "_CPPv4N13TinyGPSCustom13TinyGPSCustomER11TinyGPSPlusPKci", "TinyGPSCustom::TinyGPSCustom::termNumber"], [25, 4, 1, "_CPPv4NK13TinyGPSCustom3ageEv", "TinyGPSCustom::age"], [25, 4, 1, "_CPPv4N13TinyGPSCustom5beginER11TinyGPSPlusPKci", "TinyGPSCustom::begin"], [25, 6, 1, "_CPPv4N13TinyGPSCustom5beginER11TinyGPSPlusPKci", "TinyGPSCustom::begin::_sentenceName"], [25, 6, 1, "_CPPv4N13TinyGPSCustom5beginER11TinyGPSPlusPKci", "TinyGPSCustom::begin::_termNumber"], [25, 6, 1, "_CPPv4N13TinyGPSCustom5beginER11TinyGPSPlusPKci", "TinyGPSCustom::begin::gps"], [25, 5, 1, "_CPPv4N13TinyGPSCustom6bufferE", "TinyGPSCustom::buffer"], [25, 4, 1, "_CPPv4N13TinyGPSCustom6commitEv", "TinyGPSCustom::commit"], [25, 4, 1, "_CPPv4NK13TinyGPSCustom9isUpdatedEv", "TinyGPSCustom::isUpdated"], [25, 4, 1, "_CPPv4NK13TinyGPSCustom7isValidEv", "TinyGPSCustom::isValid"], [25, 5, 1, "_CPPv4N13TinyGPSCustom14lastCommitTimeE", "TinyGPSCustom::lastCommitTime"], [25, 5, 1, "_CPPv4N13TinyGPSCustom4nextE", "TinyGPSCustom::next"], [25, 5, 1, "_CPPv4N13TinyGPSCustom12sentenceNameE", "TinyGPSCustom::sentenceName"], [25, 4, 1, "_CPPv4N13TinyGPSCustom3setEPKc", "TinyGPSCustom::set"], [25, 6, 1, "_CPPv4N13TinyGPSCustom3setEPKc", "TinyGPSCustom::set::term"], [25, 5, 1, "_CPPv4N13TinyGPSCustom13stagingBufferE", "TinyGPSCustom::stagingBuffer"], [25, 5, 1, "_CPPv4N13TinyGPSCustom10termNumberE", "TinyGPSCustom::termNumber"], [25, 5, 1, "_CPPv4N13TinyGPSCustom7updatedE", "TinyGPSCustom::updated"], [25, 5, 1, "_CPPv4N13TinyGPSCustom5validE", "TinyGPSCustom::valid"], [25, 4, 1, "_CPPv4N13TinyGPSCustom5valueEv", "TinyGPSCustom::value"], [25, 3, 1, "_CPPv411TinyGPSDate", "TinyGPSDate"], [25, 4, 1, "_CPPv4N11TinyGPSDate11TinyGPSDateEv", "TinyGPSDate::TinyGPSDate"], [25, 4, 1, "_CPPv4NK11TinyGPSDate3ageEv", "TinyGPSDate::age"], [25, 4, 1, "_CPPv4N11TinyGPSDate6commitEv", "TinyGPSDate::commit"], [25, 5, 1, "_CPPv4N11TinyGPSDate4dateE", "TinyGPSDate::date"], [25, 4, 1, "_CPPv4N11TinyGPSDate3dayEv", "TinyGPSDate::day"], [25, 4, 1, "_CPPv4NK11TinyGPSDate9isUpdatedEv", "TinyGPSDate::isUpdated"], [25, 4, 1, "_CPPv4NK11TinyGPSDate7isValidEv", "TinyGPSDate::isValid"], [25, 5, 1, "_CPPv4N11TinyGPSDate14lastCommitTimeE", "TinyGPSDate::lastCommitTime"], [25, 4, 1, "_CPPv4N11TinyGPSDate5monthEv", "TinyGPSDate::month"], [25, 5, 1, "_CPPv4N11TinyGPSDate7newDateE", "TinyGPSDate::newDate"], [25, 4, 1, "_CPPv4N11TinyGPSDate7setDateEPKc", "TinyGPSDate::setDate"], [25, 6, 1, "_CPPv4N11TinyGPSDate7setDateEPKc", "TinyGPSDate::setDate::term"], [25, 5, 1, "_CPPv4N11TinyGPSDate7updatedE", "TinyGPSDate::updated"], [25, 5, 1, "_CPPv4N11TinyGPSDate5validE", "TinyGPSDate::valid"], [25, 4, 1, "_CPPv4N11TinyGPSDate5valueEv", "TinyGPSDate::value"], [25, 4, 1, "_CPPv4N11TinyGPSDate4yearEv", "TinyGPSDate::year"], [25, 3, 1, "_CPPv414TinyGPSDecimal", "TinyGPSDecimal"], [25, 4, 1, "_CPPv4N14TinyGPSDecimal14TinyGPSDecimalEv", "TinyGPSDecimal::TinyGPSDecimal"], [25, 4, 1, "_CPPv4NK14TinyGPSDecimal3ageEv", "TinyGPSDecimal::age"], [25, 4, 1, "_CPPv4N14TinyGPSDecimal6commitEv", "TinyGPSDecimal::commit"], [25, 4, 1, "_CPPv4NK14TinyGPSDecimal9isUpdatedEv", "TinyGPSDecimal::isUpdated"], [25, 4, 1, "_CPPv4NK14TinyGPSDecimal7isValidEv", "TinyGPSDecimal::isValid"], [25, 5, 1, "_CPPv4N14TinyGPSDecimal14lastCommitTimeE", "TinyGPSDecimal::lastCommitTime"], [25, 5, 1, "_CPPv4N14TinyGPSDecimal6newvalE", "TinyGPSDecimal::newval"], [25, 4, 1, "_CPPv4N14TinyGPSDecimal3setEPKc", "TinyGPSDecimal::set"], [25, 6, 1, "_CPPv4N14TinyGPSDecimal3setEPKc", "TinyGPSDecimal::set::term"], [25, 5, 1, "_CPPv4N14TinyGPSDecimal7updatedE", "TinyGPSDecimal::updated"], [25, 5, 1, "_CPPv4N14TinyGPSDecimal3valE", "TinyGPSDecimal::val"], [25, 5, 1, "_CPPv4N14TinyGPSDecimal5validE", "TinyGPSDecimal::valid"], [25, 4, 1, "_CPPv4N14TinyGPSDecimal5valueEv", "TinyGPSDecimal::value"], [25, 3, 1, "_CPPv411TinyGPSHDOP", "TinyGPSHDOP"], [25, 4, 1, "_CPPv4N11TinyGPSHDOP4hdopEv", "TinyGPSHDOP::hdop"], [25, 3, 1, "_CPPv414TinyGPSInteger", "TinyGPSInteger"], [25, 4, 1, "_CPPv4N14TinyGPSInteger14TinyGPSIntegerEv", "TinyGPSInteger::TinyGPSInteger"], [25, 4, 1, "_CPPv4NK14TinyGPSInteger3ageEv", "TinyGPSInteger::age"], [25, 4, 1, "_CPPv4N14TinyGPSInteger6commitEv", "TinyGPSInteger::commit"], [25, 4, 1, "_CPPv4NK14TinyGPSInteger9isUpdatedEv", "TinyGPSInteger::isUpdated"], [25, 4, 1, "_CPPv4NK14TinyGPSInteger7isValidEv", "TinyGPSInteger::isValid"], [25, 5, 1, "_CPPv4N14TinyGPSInteger14lastCommitTimeE", "TinyGPSInteger::lastCommitTime"], [25, 5, 1, "_CPPv4N14TinyGPSInteger6newvalE", "TinyGPSInteger::newval"], [25, 4, 1, "_CPPv4N14TinyGPSInteger3setEPKc", "TinyGPSInteger::set"], [25, 6, 1, "_CPPv4N14TinyGPSInteger3setEPKc", "TinyGPSInteger::set::term"], [25, 5, 1, "_CPPv4N14TinyGPSInteger7updatedE", "TinyGPSInteger::updated"], [25, 5, 1, "_CPPv4N14TinyGPSInteger3valE", "TinyGPSInteger::val"], [25, 5, 1, "_CPPv4N14TinyGPSInteger5validE", "TinyGPSInteger::valid"], [25, 4, 1, "_CPPv4N14TinyGPSInteger5valueEv", "TinyGPSInteger::value"], [25, 3, 1, "_CPPv415TinyGPSLocation", "TinyGPSLocation"], [25, 4, 1, "_CPPv4N15TinyGPSLocation15TinyGPSLocationEv", "TinyGPSLocation::TinyGPSLocation"], [25, 4, 1, "_CPPv4NK15TinyGPSLocation3ageEv", "TinyGPSLocation::age"], [25, 4, 1, "_CPPv4N15TinyGPSLocation6commitEv", "TinyGPSLocation::commit"], [25, 4, 1, "_CPPv4NK15TinyGPSLocation9isUpdatedEv", "TinyGPSLocation::isUpdated"], [25, 4, 1, "_CPPv4NK15TinyGPSLocation7isValidEv", "TinyGPSLocation::isValid"], [25, 5, 1, "_CPPv4N15TinyGPSLocation14lastCommitTimeE", "TinyGPSLocation::lastCommitTime"], [25, 4, 1, "_CPPv4N15TinyGPSLocation3latEv", "TinyGPSLocation::lat"], [25, 4, 1, "_CPPv4N15TinyGPSLocation3lngEv", "TinyGPSLocation::lng"], [25, 4, 1, "_CPPv4N15TinyGPSLocation6rawLatEv", "TinyGPSLocation::rawLat"], [25, 5, 1, "_CPPv4N15TinyGPSLocation10rawLatDataE", "TinyGPSLocation::rawLatData"], [25, 4, 1, "_CPPv4N15TinyGPSLocation6rawLngEv", "TinyGPSLocation::rawLng"], [25, 5, 1, "_CPPv4N15TinyGPSLocation10rawLngDataE", "TinyGPSLocation::rawLngData"], [25, 5, 1, "_CPPv4N15TinyGPSLocation13rawNewLatDataE", "TinyGPSLocation::rawNewLatData"], [25, 5, 1, "_CPPv4N15TinyGPSLocation13rawNewLngDataE", "TinyGPSLocation::rawNewLngData"], [25, 4, 1, "_CPPv4N15TinyGPSLocation11setLatitudeEPKc", "TinyGPSLocation::setLatitude"], [25, 6, 1, "_CPPv4N15TinyGPSLocation11setLatitudeEPKc", "TinyGPSLocation::setLatitude::term"], [25, 4, 1, "_CPPv4N15TinyGPSLocation12setLongitudeEPKc", "TinyGPSLocation::setLongitude"], [25, 6, 1, "_CPPv4N15TinyGPSLocation12setLongitudeEPKc", "TinyGPSLocation::setLongitude::term"], [25, 5, 1, "_CPPv4N15TinyGPSLocation7updatedE", "TinyGPSLocation::updated"], [25, 5, 1, "_CPPv4N15TinyGPSLocation5validE", "TinyGPSLocation::valid"], [25, 3, 1, "_CPPv411TinyGPSPlus", "TinyGPSPlus"], [25, 1, 1, "_CPPv4N11TinyGPSPlusUt2_13E", "TinyGPSPlus::[anonymous]"], [25, 2, 1, "_CPPv4N11TinyGPSPlusUt2_1318GPS_SENTENCE_GPGGAE", "TinyGPSPlus::[anonymous]::GPS_SENTENCE_GPGGA"], [25, 2, 1, "_CPPv4N11TinyGPSPlusUt2_1318GPS_SENTENCE_GPRMCE", "TinyGPSPlus::[anonymous]::GPS_SENTENCE_GPRMC"], [25, 2, 1, "_CPPv4N11TinyGPSPlusUt2_1318GPS_SENTENCE_OTHERE", "TinyGPSPlus::[anonymous]::GPS_SENTENCE_OTHER"], [25, 4, 1, "_CPPv4N11TinyGPSPlus11TinyGPSPlusEv", "TinyGPSPlus::TinyGPSPlus"], [25, 5, 1, "_CPPv4N11TinyGPSPlus8altitudeE", "TinyGPSPlus::altitude"], [25, 4, 1, "_CPPv4N11TinyGPSPlus8cardinalEd", "TinyGPSPlus::cardinal"], [25, 6, 1, "_CPPv4N11TinyGPSPlus8cardinalEd", "TinyGPSPlus::cardinal::course"], [25, 4, 1, "_CPPv4NK11TinyGPSPlus14charsProcessedEv", "TinyGPSPlus::charsProcessed"], [25, 5, 1, "_CPPv4N11TinyGPSPlus6courseE", "TinyGPSPlus::course"], [25, 4, 1, "_CPPv4N11TinyGPSPlus8courseToEdddd", "TinyGPSPlus::courseTo"], [25, 6, 1, "_CPPv4N11TinyGPSPlus8courseToEdddd", "TinyGPSPlus::courseTo::lat1"], [25, 6, 1, "_CPPv4N11TinyGPSPlus8courseToEdddd", "TinyGPSPlus::courseTo::lat2"], [25, 6, 1, "_CPPv4N11TinyGPSPlus8courseToEdddd", "TinyGPSPlus::courseTo::long1"], [25, 6, 1, "_CPPv4N11TinyGPSPlus8courseToEdddd", "TinyGPSPlus::courseTo::long2"], [25, 5, 1, "_CPPv4N11TinyGPSPlus15curSentenceTypeE", "TinyGPSPlus::curSentenceType"], [25, 5, 1, "_CPPv4N11TinyGPSPlus13curTermNumberE", "TinyGPSPlus::curTermNumber"], [25, 5, 1, "_CPPv4N11TinyGPSPlus13curTermOffsetE", "TinyGPSPlus::curTermOffset"], [25, 5, 1, "_CPPv4N11TinyGPSPlus16customCandidatesE", "TinyGPSPlus::customCandidates"], [25, 5, 1, "_CPPv4N11TinyGPSPlus10customEltsE", "TinyGPSPlus::customElts"], [25, 5, 1, "_CPPv4N11TinyGPSPlus4dateE", "TinyGPSPlus::date"], [25, 4, 1, "_CPPv4N11TinyGPSPlus15distanceBetweenEdddd", "TinyGPSPlus::distanceBetween"], [25, 6, 1, "_CPPv4N11TinyGPSPlus15distanceBetweenEdddd", "TinyGPSPlus::distanceBetween::lat1"], [25, 6, 1, "_CPPv4N11TinyGPSPlus15distanceBetweenEdddd", "TinyGPSPlus::distanceBetween::lat2"], [25, 6, 1, "_CPPv4N11TinyGPSPlus15distanceBetweenEdddd", "TinyGPSPlus::distanceBetween::long1"], [25, 6, 1, "_CPPv4N11TinyGPSPlus15distanceBetweenEdddd", "TinyGPSPlus::distanceBetween::long2"], [25, 4, 1, "_CPPv4N11TinyGPSPlus6encodeEc", "TinyGPSPlus::encode"], [25, 6, 1, "_CPPv4N11TinyGPSPlus6encodeEc", "TinyGPSPlus::encode::c"], [25, 5, 1, "_CPPv4N11TinyGPSPlus16encodedCharCountE", "TinyGPSPlus::encodedCharCount"], [25, 4, 1, "_CPPv4N11TinyGPSPlus16endOfTermHandlerEv", "TinyGPSPlus::endOfTermHandler"], [25, 4, 1, "_CPPv4NK11TinyGPSPlus14failedChecksumEv", "TinyGPSPlus::failedChecksum"], [25, 5, 1, "_CPPv4N11TinyGPSPlus19failedChecksumCountE", "TinyGPSPlus::failedChecksumCount"], [25, 4, 1, "_CPPv4N11TinyGPSPlus7fromHexEc", "TinyGPSPlus::fromHex"], [25, 6, 1, "_CPPv4N11TinyGPSPlus7fromHexEc", "TinyGPSPlus::fromHex::a"], [25, 5, 1, "_CPPv4N11TinyGPSPlus4hdopE", "TinyGPSPlus::hdop"], [25, 4, 1, "_CPPv4N11TinyGPSPlus12insertCustomEP13TinyGPSCustomPKci", "TinyGPSPlus::insertCustom"], [25, 6, 1, "_CPPv4N11TinyGPSPlus12insertCustomEP13TinyGPSCustomPKci", "TinyGPSPlus::insertCustom::index"], [25, 6, 1, "_CPPv4N11TinyGPSPlus12insertCustomEP13TinyGPSCustomPKci", "TinyGPSPlus::insertCustom::pElt"], [25, 6, 1, "_CPPv4N11TinyGPSPlus12insertCustomEP13TinyGPSCustomPKci", "TinyGPSPlus::insertCustom::sentenceName"], [25, 5, 1, "_CPPv4N11TinyGPSPlus14isChecksumTermE", "TinyGPSPlus::isChecksumTerm"], [25, 4, 1, "_CPPv4N11TinyGPSPlus14libraryVersionEv", "TinyGPSPlus::libraryVersion"], [25, 5, 1, "_CPPv4N11TinyGPSPlus8locationE", "TinyGPSPlus::location"], [25, 4, 1, "_CPPv4N11TinyGPSPluslsEc", "TinyGPSPlus::operator&lt;&lt;"], [25, 6, 1, "_CPPv4N11TinyGPSPluslsEc", "TinyGPSPlus::operator&lt;&lt;::c"], [25, 5, 1, "_CPPv4N11TinyGPSPlus6parityE", "TinyGPSPlus::parity"], [25, 4, 1, "_CPPv4N11TinyGPSPlus12parseDecimalEPKc", "TinyGPSPlus::parseDecimal"], [25, 6, 1, "_CPPv4N11TinyGPSPlus12parseDecimalEPKc", "TinyGPSPlus::parseDecimal::term"], [25, 4, 1, "_CPPv4N11TinyGPSPlus12parseDegreesEPKcR10RawDegrees", "TinyGPSPlus::parseDegrees"], [25, 6, 1, "_CPPv4N11TinyGPSPlus12parseDegreesEPKcR10RawDegrees", "TinyGPSPlus::parseDegrees::deg"], [25, 6, 1, "_CPPv4N11TinyGPSPlus12parseDegreesEPKcR10RawDegrees", "TinyGPSPlus::parseDegrees::term"], [25, 4, 1, "_CPPv4NK11TinyGPSPlus14passedChecksumEv", "TinyGPSPlus::passedChecksum"], [25, 5, 1, "_CPPv4N11TinyGPSPlus19passedChecksumCountE", "TinyGPSPlus::passedChecksumCount"], [25, 5, 1, "_CPPv4N11TinyGPSPlus10satellitesE", "TinyGPSPlus::satellites"], [25, 5, 1, "_CPPv4N11TinyGPSPlus14sentenceHasFixE", "TinyGPSPlus::sentenceHasFix"], [25, 4, 1, "_CPPv4NK11TinyGPSPlus16sentencesWithFixEv", "TinyGPSPlus::sentencesWithFix"], [25, 5, 1, "_CPPv4N11TinyGPSPlus21sentencesWithFixCountE", "TinyGPSPlus::sentencesWithFixCount"], [25, 5, 1, "_CPPv4N11TinyGPSPlus5speedE", "TinyGPSPlus::speed"], [25, 5, 1, "_CPPv4N11TinyGPSPlus4termE", "TinyGPSPlus::term"], [25, 5, 1, "_CPPv4N11TinyGPSPlus4timeE", "TinyGPSPlus::time"], [25, 3, 1, "_CPPv412TinyGPSSpeed", "TinyGPSSpeed"], [25, 4, 1, "_CPPv4N12TinyGPSSpeed4kmphEv", "TinyGPSSpeed::kmph"], [25, 4, 1, "_CPPv4N12TinyGPSSpeed5knotsEv", "TinyGPSSpeed::knots"], [25, 4, 1, "_CPPv4N12TinyGPSSpeed3mphEv", "TinyGPSSpeed::mph"], [25, 4, 1, "_CPPv4N12TinyGPSSpeed3mpsEv", "TinyGPSSpeed::mps"], [25, 3, 1, "_CPPv411TinyGPSTime", "TinyGPSTime"], [25, 4, 1, "_CPPv4N11TinyGPSTime11TinyGPSTimeEv", "TinyGPSTime::TinyGPSTime"], [25, 4, 1, "_CPPv4NK11TinyGPSTime3ageEv", "TinyGPSTime::age"], [25, 4, 1, "_CPPv4N11TinyGPSTime11centisecondEv", "TinyGPSTime::centisecond"], [25, 4, 1, "_CPPv4N11TinyGPSTime6commitEv", "TinyGPSTime::commit"], [25, 4, 1, "_CPPv4N11TinyGPSTime4hourEv", "TinyGPSTime::hour"], [25, 4, 1, "_CPPv4NK11TinyGPSTime9isUpdatedEv", "TinyGPSTime::isUpdated"], [25, 4, 1, "_CPPv4NK11TinyGPSTime7isValidEv", "TinyGPSTime::isValid"], [25, 5, 1, "_CPPv4N11TinyGPSTime14lastCommitTimeE", "TinyGPSTime::lastCommitTime"], [25, 4, 1, "_CPPv4N11TinyGPSTime6minuteEv", "TinyGPSTime::minute"], [25, 5, 1, "_CPPv4N11TinyGPSTime7newTimeE", "TinyGPSTime::newTime"], [25, 4, 1, "_CPPv4N11TinyGPSTime6secondEv", "TinyGPSTime::second"], [25, 4, 1, "_CPPv4N11TinyGPSTime7setTimeEPKc", "TinyGPSTime::setTime"], [25, 6, 1, "_CPPv4N11TinyGPSTime7setTimeEPKc", "TinyGPSTime::setTime::term"], [25, 5, 1, "_CPPv4N11TinyGPSTime4timeE", "TinyGPSTime::time"], [25, 5, 1, "_CPPv4N11TinyGPSTime7updatedE", "TinyGPSTime::updated"], [25, 5, 1, "_CPPv4N11TinyGPSTime5validE", "TinyGPSTime::valid"], [25, 4, 1, "_CPPv4N11TinyGPSTime5valueEv", "TinyGPSTime::value"], [15, 5, 1, "_CPPv411_bmp085Mode", "_bmp085Mode"], [15, 5, 1, "_CPPv414_bmp085_coeffs", "_bmp085_coeffs"], [7, 4, 1, "_CPPv49afsk_busyv", "afsk_busy"], [8, 4, 1, "_CPPv49afsk_busyv", "afsk_busy"], [8, 4, 1, "_CPPv415afsk_getTxDelayv", "afsk_getTxDelay"], [7, 4, 1, "_CPPv418afsk_output_sample8uint16_t", "afsk_output_sample"], [7, 6, 1, "_CPPv418afsk_output_sample8uint16_t", "afsk_output_sample::b"], [7, 5, 1, "_CPPv411afsk_packet", "afsk_packet"], [7, 5, 1, "_CPPv416afsk_packet_size", "afsk_packet_size"], [7, 4, 1, "_CPPv416afsk_read_samplePCK8uint16_tK8uint16_t", "afsk_read_sample"], [7, 6, 1, "_CPPv416afsk_read_samplePCK8uint16_tK8uint16_t", "afsk_read_sample::phase"], [7, 6, 1, "_CPPv416afsk_read_samplePCK8uint16_tK8uint16_t", "afsk_read_sample::sine_table"], [7, 4, 1, "_CPPv415afsk_set_bufferPCK7uint8_tK8uint16_t", "afsk_set_buffer"], [8, 4, 1, "_CPPv415afsk_set_bufferPCK7uint8_tK8uint16_t", "afsk_set_buffer"], [7, 6, 1, "_CPPv415afsk_set_bufferPCK7uint8_tK8uint16_t", "afsk_set_buffer::buffer"], [8, 6, 1, "_CPPv415afsk_set_bufferPCK7uint8_tK8uint16_t", "afsk_set_buffer::buffer"], [7, 6, 1, "_CPPv415afsk_set_bufferPCK7uint8_tK8uint16_t", "afsk_set_buffer::len"], [8, 6, 1, "_CPPv415afsk_set_bufferPCK7uint8_tK8uint16_t", "afsk_set_buffer::len"], [7, 4, 1, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "afsk_setup"], [8, 4, 1, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "afsk_setup"], [7, 6, 1, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "afsk_setup::p_pttDelay"], [7, 6, 1, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "afsk_setup::p_pttPin"], [7, 6, 1, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "afsk_setup::p_silenceLength"], [8, 6, 1, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "afsk_setup::p_silenceLength"], [7, 6, 1, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "afsk_setup::p_toneLength"], [8, 6, 1, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "afsk_setup::pttDelay"], [8, 6, 1, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "afsk_setup::pttPin"], [8, 6, 1, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t", "afsk_setup::toneLength"], [7, 5, 1, "_CPPv415afsk_sine_table", "afsk_sine_table"], [7, 5, 1, "_CPPv416afsk_sine_table1", "afsk_sine_table1"], [7, 5, 1, "_CPPv416afsk_sine_table2", "afsk_sine_table2"], [7, 4, 1, "_CPPv410afsk_startv", "afsk_start"], [8, 4, 1, "_CPPv410afsk_startv", "afsk_start"], [7, 4, 1, "_CPPv416afsk_timer_startv", "afsk_timer_start"], [7, 4, 1, "_CPPv415afsk_timer_stopv", "afsk_timer_stop"], [13, 5, 1, "_CPPv49analogpin", "analogpin"], [2, 5, 1, "_CPPv44aprs", "aprs"], [6, 5, 1, "_CPPv44aprs", "aprs"], [9, 4, 1, "_CPPv418ax25_getPacketSizev", "ax25_getPacketSize"], [10, 4, 1, "_CPPv418ax25_getPacketSizev", "ax25_getPacketSize"], [9, 4, 1, "_CPPv415ax25_initBufferP7uint8_tKi", "ax25_initBuffer"], [10, 4, 1, "_CPPv415ax25_initBufferP7uint8_tKi", "ax25_initBuffer"], [9, 6, 1, "_CPPv415ax25_initBufferP7uint8_tKi", "ax25_initBuffer::buf"], [10, 6, 1, "_CPPv415ax25_initBufferP7uint8_tKi", "ax25_initBuffer::buf"], [9, 6, 1, "_CPPv415ax25_initBufferP7uint8_tKi", "ax25_initBuffer::bufSize"], [10, 6, 1, "_CPPv415ax25_initBufferP7uint8_tKi", "ax25_initBuffer::bufSize"], [9, 4, 1, "_CPPv413ax25_send_bitK7uint8_tK7uint8_t", "ax25_send_bit"], [9, 6, 1, "_CPPv413ax25_send_bitK7uint8_tK7uint8_t", "ax25_send_bit::a_bit"], [9, 6, 1, "_CPPv413ax25_send_bitK7uint8_tK7uint8_t", "ax25_send_bit::bitStuff"], [9, 4, 1, "_CPPv414ax25_send_byte7uint8_t", "ax25_send_byte"], [10, 4, 1, "_CPPv414ax25_send_byte7uint8_t", "ax25_send_byte"], [9, 6, 1, "_CPPv414ax25_send_byte7uint8_t", "ax25_send_byte::a_byte"], [10, 6, 1, "_CPPv414ax25_send_byte7uint8_t", "ax25_send_byte::a_byte"], [9, 4, 1, "_CPPv414ax25_send_flagv", "ax25_send_flag"], [9, 4, 1, "_CPPv416ax25_send_footerv", "ax25_send_footer"], [10, 4, 1, "_CPPv416ax25_send_footerv", "ax25_send_footer"], [9, 4, 1, "_CPPv416ax25_send_headerPCK11PathAddressK8uint16_tK8uint16_t", "ax25_send_header"], [10, 4, 1, "_CPPv416ax25_send_headerPCK11PathAddressK8uint16_tK8uint16_t", "ax25_send_header"], [9, 6, 1, "_CPPv416ax25_send_headerPCK11PathAddressK8uint16_tK8uint16_t", "ax25_send_header::nPaths"], [10, 6, 1, "_CPPv416ax25_send_headerPCK11PathAddressK8uint16_tK8uint16_t", "ax25_send_header::nPaths"], [9, 6, 1, "_CPPv416ax25_send_headerPCK11PathAddressK8uint16_tK8uint16_t", "ax25_send_header::paths"], [10, 6, 1, "_CPPv416ax25_send_headerPCK11PathAddressK8uint16_tK8uint16_t", "ax25_send_header::paths"], [9, 6, 1, "_CPPv416ax25_send_headerPCK11PathAddressK8uint16_tK8uint16_t", "ax25_send_header::preambleFlags"], [10, 6, 1, "_CPPv416ax25_send_headerPCK11PathAddressK8uint16_tK8uint16_t", "ax25_send_header::txDelay"], [9, 4, 1, "_CPPv416ax25_send_stringPCKc", "ax25_send_string"], [10, 4, 1, "_CPPv416ax25_send_stringPCKc", "ax25_send_string"], [9, 6, 1, "_CPPv416ax25_send_stringPCKc", "ax25_send_string::string"], [10, 6, 1, "_CPPv416ax25_send_stringPCKc", "ax25_send_string::string"], [19, 5, 1, "_CPPv43bmp", "bmp"], [16, 3, 1, "_CPPv417bmp085_calib_data", "bmp085_calib_data"], [16, 5, 1, "_CPPv4N17bmp085_calib_data3ac1E", "bmp085_calib_data::ac1"], [16, 5, 1, "_CPPv4N17bmp085_calib_data3ac2E", "bmp085_calib_data::ac2"], [16, 5, 1, "_CPPv4N17bmp085_calib_data3ac3E", "bmp085_calib_data::ac3"], [16, 5, 1, "_CPPv4N17bmp085_calib_data3ac4E", "bmp085_calib_data::ac4"], [16, 5, 1, "_CPPv4N17bmp085_calib_data3ac5E", "bmp085_calib_data::ac5"], [16, 5, 1, "_CPPv4N17bmp085_calib_data3ac6E", "bmp085_calib_data::ac6"], [16, 5, 1, "_CPPv4N17bmp085_calib_data2b1E", "bmp085_calib_data::b1"], [16, 5, 1, "_CPPv4N17bmp085_calib_data2b2E", "bmp085_calib_data::b2"], [16, 5, 1, "_CPPv4N17bmp085_calib_data2mbE", "bmp085_calib_data::mb"], [16, 5, 1, "_CPPv4N17bmp085_calib_data2mcE", "bmp085_calib_data::mc"], [16, 5, 1, "_CPPv4N17bmp085_calib_data2mdE", "bmp085_calib_data::md"], [16, 1, 1, "_CPPv413bmp085_mode_t", "bmp085_mode_t"], [16, 2, 1, "_CPPv4N13bmp085_mode_t19BMP085_MODE_HIGHRESE", "bmp085_mode_t::BMP085_MODE_HIGHRES"], [16, 2, 1, "_CPPv4N13bmp085_mode_t20BMP085_MODE_STANDARDE", "bmp085_mode_t::BMP085_MODE_STANDARD"], [16, 2, 1, "_CPPv4N13bmp085_mode_t24BMP085_MODE_ULTRAHIGHRESE", "bmp085_mode_t::BMP085_MODE_ULTRAHIGHRES"], [16, 2, 1, "_CPPv4N13bmp085_mode_t25BMP085_MODE_ULTRALOWPOWERE", "bmp085_mode_t::BMP085_MODE_ULTRALOWPOWER"], [7, 5, 1, "_CPPv44busy", "busy"], [3, 5, 1, "_CPPv47comment", "comment"], [9, 5, 1, "_CPPv43crc", "crc"], [7, 5, 1, "_CPPv413currentSample", "currentSample"], [7, 5, 1, "_CPPv418currentSampleCount", "currentSampleCount"], [7, 5, 1, "_CPPv413currentStride", "currentStride"], [7, 5, 1, "_CPPv412current_byte", "current_byte"], [7, 5, 1, "_CPPv47fDoTone", "fDoTone"], [27, 4, 1, "_CPPv412getDutyCyclev", "getDutyCycle"], [27, 4, 1, "_CPPv49getPeriodv", "getPeriod"], [27, 4, 1, "_CPPv413getPulseWidthv", "getPulseWidth"], [27, 4, 1, "_CPPv48getStatev", "getState"], [2, 5, 1, "_CPPv43gps", "gps"], [23, 5, 1, "_CPPv43gps", "gps"], [2, 5, 1, "_CPPv44gps2", "gps2"], [23, 5, 1, "_CPPv44gps2", "gps2"], [7, 4, 1, "_CPPv49interruptv", "interrupt"], [5, 4, 1, "_CPPv48latToStrPCcKif", "latToStr"], [5, 6, 1, "_CPPv48latToStrPCcKif", "latToStr::lat"], [5, 6, 1, "_CPPv48latToStrPCcKif", "latToStr::s"], [5, 6, 1, "_CPPv48latToStrPCcKif", "latToStr::size"], [5, 4, 1, "_CPPv48lonToStrPCcKif", "lonToStr"], [5, 6, 1, "_CPPv48lonToStrPCcKif", "lonToStr::lon"], [5, 6, 1, "_CPPv48lonToStrPCcKif", "lonToStr::s"], [5, 6, 1, "_CPPv48lonToStrPCcKif", "lonToStr::size"], [2, 4, 1, "_CPPv44loopv", "loop"], [9, 5, 1, "_CPPv413maxPacketSize", "maxPacketSize"], [9, 5, 1, "_CPPv413ones_in_a_row", "ones_in_a_row"], [9, 5, 1, "_CPPv46packet", "packet"], [7, 5, 1, "_CPPv410packet_pos", "packet_pos"], [9, 5, 1, "_CPPv411packet_size", "packet_size"], [5, 5, 1, "_CPPv413preambleFlags", "preambleFlags"], [7, 5, 1, "_CPPv48pttDelay", "pttDelay"], [7, 5, 1, "_CPPv46pttPin", "pttPin"], [31, 5, 1, "_CPPv410pushbutton", "pushbutton"], [28, 5, 1, "_CPPv43pwm", "pwm"], [15, 4, 1, "_CPPv46read164byteP8uint16_t", "read16"], [15, 6, 1, "_CPPv46read164byteP8uint16_t", "read16::reg"], [15, 6, 1, "_CPPv46read164byteP8uint16_t", "read16::value"], [15, 4, 1, "_CPPv45read84byteP7uint8_t", "read8"], [15, 6, 1, "_CPPv45read84byteP7uint8_t", "read8::reg"], [15, 6, 1, "_CPPv45read84byteP7uint8_t", "read8::value"], [15, 4, 1, "_CPPv416readCoefficientsv", "readCoefficients"], [15, 4, 1, "_CPPv415readRawPressureP7int32_t", "readRawPressure"], [15, 6, 1, "_CPPv415readRawPressureP7int32_t", "readRawPressure::pressure"], [15, 4, 1, "_CPPv418readRawTemperatureP7int32_t", "readRawTemperature"], [15, 6, 1, "_CPPv418readRawTemperatureP7int32_t", "readRawTemperature::temperature"], [15, 4, 1, "_CPPv47readS164byteP7int16_t", "readS16"], [15, 6, 1, "_CPPv47readS164byteP7int16_t", "readS16::reg"], [15, 6, 1, "_CPPv47readS164byteP7int16_t", "readS16::value"], [34, 5, 1, "_CPPv42sd", "sd"], [2, 5, 1, "_CPPv47sd_card", "sd_card"], [17, 3, 1, "_CPPv48sensor_t", "sensor_t"], [17, 5, 1, "_CPPv4N8sensor_t9max_valueE", "sensor_t::max_value"], [17, 5, 1, "_CPPv4N8sensor_t9min_delayE", "sensor_t::min_delay"], [17, 5, 1, "_CPPv4N8sensor_t9min_valueE", "sensor_t::min_value"], [17, 5, 1, "_CPPv4N8sensor_t4nameE", "sensor_t::name"], [17, 5, 1, "_CPPv4N8sensor_t10resolutionE", "sensor_t::resolution"], [17, 5, 1, "_CPPv4N8sensor_t9sensor_idE", "sensor_t::sensor_id"], [17, 5, 1, "_CPPv4N8sensor_t4typeE", "sensor_t::type"], [17, 5, 1, "_CPPv4N8sensor_t7versionE", "sensor_t::version"], [17, 3, 1, "_CPPv415sensors_color_t", "sensors_color_t"], [17, 5, 1, "_CPPv4N15sensors_color_tUt1_8E", "sensors_color_t::[anonymous]"], [17, 5, 1, "_CPPv4N15sensors_color_t1bE", "sensors_color_t::b"], [17, 5, 1, "_CPPv4N15sensors_color_t1cE", "sensors_color_t::c"], [17, 5, 1, "_CPPv4N15sensors_color_t1gE", "sensors_color_t::g"], [17, 5, 1, "_CPPv4N15sensors_color_t1rE", "sensors_color_t::r"], [17, 5, 1, "_CPPv4N15sensors_color_t4rgbaE", "sensors_color_t::rgba"], [17, 3, 1, "_CPPv415sensors_event_t", "sensors_event_t"], [17, 5, 1, "_CPPv4N15sensors_event_tUt2_12E", "sensors_event_t::[anonymous]"], [17, 5, 1, "_CPPv4N15sensors_event_t12accelerationE", "sensors_event_t::acceleration"], [17, 5, 1, "_CPPv4N15sensors_event_t5colorE", "sensors_event_t::color"], [17, 5, 1, "_CPPv4N15sensors_event_t7currentE", "sensors_event_t::current"], [17, 5, 1, "_CPPv4N15sensors_event_t4dataE", "sensors_event_t::data"], [17, 5, 1, "_CPPv4N15sensors_event_t8distanceE", "sensors_event_t::distance"], [17, 5, 1, "_CPPv4N15sensors_event_t4gyroE", "sensors_event_t::gyro"], [17, 5, 1, "_CPPv4N15sensors_event_t5lightE", "sensors_event_t::light"], [17, 5, 1, "_CPPv4N15sensors_event_t8magneticE", "sensors_event_t::magnetic"], [17, 5, 1, "_CPPv4N15sensors_event_t11orientationE", "sensors_event_t::orientation"], [17, 5, 1, "_CPPv4N15sensors_event_t8pressureE", "sensors_event_t::pressure"], [17, 5, 1, "_CPPv4N15sensors_event_t17relative_humidityE", "sensors_event_t::relative_humidity"], [17, 5, 1, "_CPPv4N15sensors_event_t9reserved0E", "sensors_event_t::reserved0"], [17, 5, 1, "_CPPv4N15sensors_event_t9sensor_idE", "sensors_event_t::sensor_id"], [17, 5, 1, "_CPPv4N15sensors_event_t11temperatureE", "sensors_event_t::temperature"], [17, 5, 1, "_CPPv4N15sensors_event_t9timestampE", "sensors_event_t::timestamp"], [17, 5, 1, "_CPPv4N15sensors_event_t4typeE", "sensors_event_t::type"], [17, 5, 1, "_CPPv4N15sensors_event_t7versionE", "sensors_event_t::version"], [17, 5, 1, "_CPPv4N15sensors_event_t7voltageE", "sensors_event_t::voltage"], [17, 1, 1, "_CPPv414sensors_type_t", "sensors_type_t"], [17, 2, 1, "_CPPv4N14sensors_type_t25SENSOR_TYPE_ACCELEROMETERE", "sensors_type_t::SENSOR_TYPE_ACCELEROMETER"], [17, 2, 1, "_CPPv4N14sensors_type_t31SENSOR_TYPE_AMBIENT_TEMPERATUREE", "sensors_type_t::SENSOR_TYPE_AMBIENT_TEMPERATURE"], [17, 2, 1, "_CPPv4N14sensors_type_t17SENSOR_TYPE_COLORE", "sensors_type_t::SENSOR_TYPE_COLOR"], [17, 2, 1, "_CPPv4N14sensors_type_t19SENSOR_TYPE_CURRENTE", "sensors_type_t::SENSOR_TYPE_CURRENT"], [17, 2, 1, "_CPPv4N14sensors_type_t19SENSOR_TYPE_GRAVITYE", "sensors_type_t::SENSOR_TYPE_GRAVITY"], [17, 2, 1, "_CPPv4N14sensors_type_t21SENSOR_TYPE_GYROSCOPEE", "sensors_type_t::SENSOR_TYPE_GYROSCOPE"], [17, 2, 1, "_CPPv4N14sensors_type_t17SENSOR_TYPE_LIGHTE", "sensors_type_t::SENSOR_TYPE_LIGHT"], [17, 2, 1, "_CPPv4N14sensors_type_t31SENSOR_TYPE_LINEAR_ACCELERATIONE", "sensors_type_t::SENSOR_TYPE_LINEAR_ACCELERATION"], [17, 2, 1, "_CPPv4N14sensors_type_t26SENSOR_TYPE_MAGNETIC_FIELDE", "sensors_type_t::SENSOR_TYPE_MAGNETIC_FIELD"], [17, 2, 1, "_CPPv4N14sensors_type_t23SENSOR_TYPE_ORIENTATIONE", "sensors_type_t::SENSOR_TYPE_ORIENTATION"], [17, 2, 1, "_CPPv4N14sensors_type_t20SENSOR_TYPE_PRESSUREE", "sensors_type_t::SENSOR_TYPE_PRESSURE"], [17, 2, 1, "_CPPv4N14sensors_type_t21SENSOR_TYPE_PROXIMITYE", "sensors_type_t::SENSOR_TYPE_PROXIMITY"], [17, 2, 1, "_CPPv4N14sensors_type_t29SENSOR_TYPE_RELATIVE_HUMIDITYE", "sensors_type_t::SENSOR_TYPE_RELATIVE_HUMIDITY"], [17, 2, 1, "_CPPv4N14sensors_type_t27SENSOR_TYPE_ROTATION_VECTORE", "sensors_type_t::SENSOR_TYPE_ROTATION_VECTOR"], [17, 2, 1, "_CPPv4N14sensors_type_t19SENSOR_TYPE_VOLTAGEE", "sensors_type_t::SENSOR_TYPE_VOLTAGE"], [17, 3, 1, "_CPPv413sensors_vec_t", "sensors_vec_t"], [17, 5, 1, "_CPPv4N13sensors_vec_tUt1_2E", "sensors_vec_t::[anonymous]"], [17, 5, 1, "_CPPv4N13sensors_vec_t7headingE", "sensors_vec_t::heading"], [17, 5, 1, "_CPPv4N13sensors_vec_t5pitchE", "sensors_vec_t::pitch"], [17, 5, 1, "_CPPv4N13sensors_vec_t8reservedE", "sensors_vec_t::reserved"], [17, 5, 1, "_CPPv4N13sensors_vec_t4rollE", "sensors_vec_t::roll"], [17, 5, 1, "_CPPv4N13sensors_vec_t6statusE", "sensors_vec_t::status"], [17, 5, 1, "_CPPv4N13sensors_vec_t1vE", "sensors_vec_t::v"], [17, 5, 1, "_CPPv4N13sensors_vec_t1xE", "sensors_vec_t::x"], [17, 5, 1, "_CPPv4N13sensors_vec_t1yE", "sensors_vec_t::y"], [17, 5, 1, "_CPPv4N13sensors_vec_t1zE", "sensors_vec_t::z"], [27, 4, 1, "_CPPv412setDutyCyclef", "setDutyCycle"], [27, 6, 1, "_CPPv412setDutyCyclef", "setDutyCycle::CycleRate"], [27, 4, 1, "_CPPv49setPeriodf", "setPeriod"], [27, 6, 1, "_CPPv49setPeriodf", "setPeriod::_us_"], [27, 4, 1, "_CPPv413setPulseWidthf", "setPulseWidth"], [27, 6, 1, "_CPPv413setPulseWidthf", "setPulseWidth::us"], [27, 4, 1, "_CPPv48setStateb", "setState"], [27, 6, 1, "_CPPv48setStateb", "setState::state"], [2, 4, 1, "_CPPv45setupv", "setup"], [7, 5, 1, "_CPPv413silenceLength", "silenceLength"], [7, 5, 1, "_CPPv411silenceStop", "silenceStop"], [7, 5, 1, "_CPPv419sine_table_switcher", "sine_table_switcher"], [2, 5, 1, "_CPPv46status", "status"], [27, 4, 1, "_CPPv411toggleStatev", "toggleState"], [7, 5, 1, "_CPPv410toneLength", "toneLength"], [7, 5, 1, "_CPPv48toneStop", "toneStop"], [7, 5, 1, "_CPPv416totalSamplesSent", "totalSamplesSent"], [5, 5, 1, "_CPPv418transmission_timer", "transmission_timer"], [9, 4, 1, "_CPPv410update_crcK7uint8_t", "update_crc"], [9, 6, 1, "_CPPv410update_crcK7uint8_t", "update_crc::a_bit"], [15, 4, 1, "_CPPv412writeCommand4byte4byte", "writeCommand"], [15, 6, 1, "_CPPv412writeCommand4byte4byte", "writeCommand::reg"], [15, 6, 1, "_CPPv412writeCommand4byte4byte", "writeCommand::value"]]}, "objtypes": {"0": "c:macro", "1": "cpp:enum", "2": "cpp:enumerator", "3": "cpp:class", "4": "cpp:function", "5": "cpp:member", "6": "cpp:functionParam"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "enum", "C++ enum"], "2": ["cpp", "enumerator", "C++ enumerator"], "3": ["cpp", "class", "C++ class"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "member", "C++ member"], "6": ["cpp", "functionParam", "C++ function parameter"]}, "titleterms": {"api": 0, "config": 1, "h": [1, 8, 10, 16, 17, 25, 43, 45, 46, 47, 48, 49], "hab": [2, 4], "sed": [2, 4], "ttu": [2, 4], "ino": 2, "projectconfig": 3, "hpp": [3, 6, 13, 19, 23, 28, 31, 34, 37, 39, 40, 41, 42], "welcom": 4, "": 4, "document": 4, "content": 4, "indic": 4, "tabl": 4, "analogpin": [12, 13, 14], "cpp": [5, 7, 9, 12, 15, 18, 22, 24, 27, 30, 33, 36], "driver": 21, "debugutil": 45, "hardwareutil": 46, "randnumutil": 47, "timerutil": 48, "util": [49, 50], "src": 51, "apr": [5, 6, 11], "bmp": [18, 19, 20], "gp": [22, 23, 26], "afsk": [7, 8], "ax25": [9, 10], "adafruit_bmp085_u": [15, 16], "adafruit_sensor": 17, "tinygp": [24, 25], "pushbutton": [30, 31, 32], "pwm": [27, 28, 29], "sd_card": [33, 34, 35], "servo": [36, 37, 38], "hab_esp32": 39, "hab_nano": 40, "hab_stm32": 41, "hab_teensi": 42, "hardwareconfig": 43, "hardware_configur": 44}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "Welcome to HAB-SEDS-TTU\u2019s documentation!": [[4, "welcome-to-hab-seds-ttu-s-documentation"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "Drivers": [[21, "drivers"]], "Utilities": [[50, "utilities"]], "AnalogPin": [[14, "analogpin"]], "BMP": [[20, "bmp"]], "APRS": [[11, "aprs"]], "GPS": [[26, "gps"]], "Pushbutton": [[32, "pushbutton"]], "PWM": [[29, "pwm"]], "SD_Card": [[35, "sd-card"]], "SERVO": [[38, "servo"]], "Hardware_Configuration": [[44, "hardware-configuration"]], "Config.h": [[1, "config-h"]], "HAB-SEDS-TTU.ino": [[2, "hab-seds-ttu-ino"]], "ProjectConfig.hpp": [[3, "projectconfig-hpp"]], "APRS.cpp": [[5, "aprs-cpp"]], "APRS.hpp": [[6, "aprs-hpp"]], "afsk.cpp": [[7, "afsk-cpp"]], "afsk.h": [[8, "afsk-h"]], "ax25.cpp": [[9, "ax25-cpp"]], "ax25.h": [[10, "ax25-h"]], "AnalogPin.cpp": [[12, "analogpin-cpp"]], "AnalogPin.hpp": [[13, "analogpin-hpp"]], "Adafruit_BMP085_U.cpp": [[15, "adafruit-bmp085-u-cpp"]], "Adafruit_BMP085_U.h": [[16, "adafruit-bmp085-u-h"]], "Adafruit_Sensor.h": [[17, "adafruit-sensor-h"]], "BMP.cpp": [[18, "bmp-cpp"]], "BMP.hpp": [[19, "bmp-hpp"]], "GPS.cpp": [[22, "gps-cpp"]], "GPS.hpp": [[23, "gps-hpp"]], "TinyGPS++.cpp": [[24, "tinygps-cpp"]], "TinyGPS++.h": [[25, "tinygps-h"]], "PWM.cpp": [[27, "pwm-cpp"]], "PWM.hpp": [[28, "pwm-hpp"]], "Pushbutton.cpp": [[30, "pushbutton-cpp"]], "Pushbutton.hpp": [[31, "pushbutton-hpp"]], "SD_Card.cpp": [[33, "sd-card-cpp"]], "SD_Card.hpp": [[34, "sd-card-hpp"]], "Servo.cpp": [[36, "servo-cpp"]], "Servo.hpp": [[37, "servo-hpp"]], "HAB_ESP32.hpp": [[39, "hab-esp32-hpp"]], "HAB_Nano.hpp": [[40, "hab-nano-hpp"]], "HAB_STM32.hpp": [[41, "hab-stm32-hpp"]], "HAB_Teensy.hpp": [[42, "hab-teensy-hpp"]], "HardwareConfig.h": [[43, "hardwareconfig-h"]], "DebugUtilities.h": [[45, "debugutilities-h"]], "HardwareUtilities.h": [[46, "hardwareutilities-h"]], "RandNumUtilities.h": [[47, "randnumutilities-h"]], "TimerUtilities.h": [[48, "timerutilities-h"]], "Utilities.h": [[49, "utilities-h"]], "src": [[51, "src"]]}, "indexentries": {"cutservo (c++ member)": [[2, "_CPPv48CutServo"], [37, "_CPPv48CutServo"]], "aprs (c++ member)": [[2, "_CPPv44aprs"], [6, "_CPPv44aprs"]], "gps (c++ member)": [[2, "_CPPv43gps"], [23, "_CPPv43gps"]], "gps2 (c++ member)": [[2, "_CPPv44gps2"], [23, "_CPPv44gps2"]], "loop (c++ function)": [[2, "_CPPv44loopv"]], "sd_card (c++ member)": [[2, "_CPPv47sd_card"]], "setup (c++ function)": [[2, "_CPPv45setupv"]], "status (c++ member)": [[2, "_CPPv46status"]], "analogpin_enable (c macro)": [[3, "c.ANALOGPIN_ENABLE"]], "aprs_enable (c macro)": [[3, "c.APRS_ENABLE"]], "aprs_slot (c++ member)": [[3, "_CPPv49APRS_SLOT"]], "bmp_enable (c macro)": [[3, "c.BMP_ENABLE"]], "debug__enable (c macro)": [[3, "c.DEBUG__ENABLE"]], "debug__fprintf (c macro)": [[3, "c.DEBUG__FPRINTF"]], "debug__serial (c macro)": [[3, "c.DEBUG__SERIAL"]], "d_callsign (c macro)": [[3, "c.D_CALLSIGN"]], "d_callsign_id (c++ member)": [[3, "_CPPv413D_CALLSIGN_ID"]], "embedded__arduino (c macro)": [[3, "c.EMBEDDED__ARDUINO"]], "en_print_debug (c macro)": [[3, "c.EN_PRINT_DEBUG"]], "esp32_enable (c macro)": [[3, "c.ESP32_ENABLE"]], "gps_baudrate (c++ member)": [[3, "_CPPv412GPS_BAUDRATE"]], "gps_enable (c macro)": [[3, "c.GPS_ENABLE"]], "gps_valid_pos_timeout (c++ member)": [[3, "_CPPv421GPS_VALID_POS_TIMEOUT"]], "led_enable (c macro)": [[3, "c.LED_ENABLE"]], "nano_enable (c macro)": [[3, "c.NANO_ENABLE"]], "pushbutton_enable (c macro)": [[3, "c.PUSHBUTTON_ENABLE"]], "sd_enable (c macro)": [[3, "c.SD_ENABLE"]], "servo_cut_alt (c++ member)": [[3, "_CPPv413SERVO_CUT_ALT"]], "servo_cut_timeout (c++ member)": [[3, "_CPPv417SERVO_CUT_TIMEOUT"]], "servo_enable (c macro)": [[3, "c.SERVO_ENABLE"]], "servo_end_pos (c++ member)": [[3, "_CPPv413SERVO_END_POS"]], "servo_period (c++ member)": [[3, "_CPPv412SERVO_PERIOD"]], "servo_start_pos (c++ member)": [[3, "_CPPv415SERVO_START_POS"]], "status_enable (c macro)": [[3, "c.STATUS_ENABLE"]], "stm32_enable (c macro)": [[3, "c.STM32_ENABLE"]], "symbol_char (c macro)": [[3, "c.SYMBOL_CHAR"]], "symbol_table (c macro)": [[3, "c.SYMBOL_TABLE"]], "s_callsign (c macro)": [[3, "c.S_CALLSIGN"]], "s_callsign_id (c++ member)": [[3, "_CPPv413S_CALLSIGN_ID"]], "teensy_enable (c macro)": [[3, "c.TEENSY_ENABLE"]], "comment (c++ member)": [[3, "_CPPv47comment"]], "maxsendbuffer (c macro)": [[5, "c.MAXSENDBUFFER"]], "lattostr (c++ function)": [[5, "_CPPv48latToStrPCcKif"]], "lontostr (c++ function)": [[5, "_CPPv48lonToStrPCcKif"]], "preambleflags (c++ member)": [[5, "_CPPv413preambleFlags"]], "transmission_timer (c++ member)": [[5, "_CPPv418transmission_timer"]], "aprs (c++ class)": [[6, "_CPPv44APRS"]], "aprs::aprs (c++ function)": [[6, "_CPPv4N4APRS4APRSEv"]], "aprs::aprs_period (c++ member)": [[6, "_CPPv4N4APRS11APRS_PERIODE"]], "aprs::aprs_send_with_string (c++ function)": [[6, "_CPPv4N4APRS21APRS_Send_with_StringEPCK11PathAddressKiK7uint8_tK7uint8_tK7uint8_tKfKfKfK8uint16_tKfKcKcPCKc"]], "aprs::aprs_setup (c++ function)": [[6, "_CPPv4N4APRS10APRS_SetupEK8uint16_tK7uint8_tK8uint16_tK8uint32_tK8uint32_t"]], "aprs::aprs_transmit (c++ function)": [[6, "_CPPv4N4APRS13APRS_TransmitEv"]], "aprs::aprs_update (c++ function)": [[6, "_CPPv4N4APRS11APRS_UpdateEv"]], "aprs::isvalidaprs (c++ function)": [[6, "_CPPv4N4APRS11IsValidAPRSEv"]], "aprs::validaprs (c++ member)": [[6, "_CPPv4N4APRS9ValidAPRSE"]], "aprs::logbuffer (c++ function)": [[6, "_CPPv4N4APRS9logBufferEPCK7uint8_tKiK7uint8_tK7uint8_tK7uint8_t"]], "aprs::~aprs (c++ function)": [[6, "_CPPv4N4APRSD0Ev"]], "pathaddress (c++ struct)": [[6, "_CPPv411PathAddress"]], "pathaddress::callsign (c++ member)": [[6, "_CPPv4N11PathAddress8callsignE"]], "pathaddress::ssid (c++ member)": [[6, "_CPPv4N11PathAddress4ssidE"]], "baud_rate (c macro)": [[7, "c.BAUD_RATE"]], "fixed_pnt_bits (c macro)": [[7, "c.FIXED_PNT_BITS"]], "fixed_pnt_scale (c macro)": [[7, "c.FIXED_PNT_SCALE"]], "interrupt_rate (c macro)": [[7, "c.INTERRUPT_RATE"]], "mark_frequency (c macro)": [[7, "c.MARK_FREQUENCY"]], "playback_rate (c macro)": [[7, "c.PLAYBACK_RATE"]], "samples_per_bit_scaled (c macro)": [[7, "c.SAMPLES_PER_BIT_SCALED"]], "samples_per_cycle (c macro)": [[7, "c.SAMPLES_PER_CYCLE"]], "sample_counter_scale (c macro)": [[7, "c.SAMPLE_COUNTER_SCALE"]], "sample_stride_mark_fixed_pnt (c macro)": [[7, "c.SAMPLE_STRIDE_MARK_FIXED_PNT"]], "sample_stride_mark_float (c macro)": [[7, "c.SAMPLE_STRIDE_MARK_FLOAT"]], "sample_stride_space_fixed_pnt (c macro)": [[7, "c.SAMPLE_STRIDE_SPACE_FIXED_PNT"]], "sample_stride_space_float (c macro)": [[7, "c.SAMPLE_STRIDE_SPACE_FLOAT"]], "sample_stride_tone_fixed_pnt (c macro)": [[7, "c.SAMPLE_STRIDE_TONE_FIXED_PNT"]], "sample_stride_tone_float (c macro)": [[7, "c.SAMPLE_STRIDE_TONE_FLOAT"]], "sinscale (c macro)": [[7, "c.SINSCALE"]], "sin_table_mark (c macro)": [[7, "c.SIN_TABLE_MARK"]], "sin_table_space (c macro)": [[7, "c.SIN_TABLE_SPACE"]], "space_frequency (c macro)": [[7, "c.SPACE_FREQUENCY"]], "table2_scale (c macro)": [[7, "c.TABLE2_SCALE"]], "tone_frequency (c macro)": [[7, "c.TONE_FREQUENCY"]], "afsk_busy (c++ function)": [[7, "_CPPv49afsk_busyv"], [8, "_CPPv49afsk_busyv"]], "afsk_output_sample (c++ function)": [[7, "_CPPv418afsk_output_sample8uint16_t"]], "afsk_packet (c++ member)": [[7, "_CPPv411afsk_packet"]], "afsk_packet_size (c++ member)": [[7, "_CPPv416afsk_packet_size"]], "afsk_read_sample (c++ function)": [[7, "_CPPv416afsk_read_samplePCK8uint16_tK8uint16_t"]], "afsk_set_buffer (c++ function)": [[7, "_CPPv415afsk_set_bufferPCK7uint8_tK8uint16_t"], [8, "_CPPv415afsk_set_bufferPCK7uint8_tK8uint16_t"]], "afsk_setup (c++ function)": [[7, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t"], [8, "_CPPv410afsk_setupK7uint8_tK8uint16_tK8uint32_tK8uint32_t"]], "afsk_sine_table (c++ member)": [[7, "_CPPv415afsk_sine_table"]], "afsk_sine_table1 (c++ member)": [[7, "_CPPv416afsk_sine_table1"]], "afsk_sine_table2 (c++ member)": [[7, "_CPPv416afsk_sine_table2"]], "afsk_start (c++ function)": [[7, "_CPPv410afsk_startv"], [8, "_CPPv410afsk_startv"]], "afsk_timer_start (c++ function)": [[7, "_CPPv416afsk_timer_startv"]], "afsk_timer_stop (c++ function)": [[7, "_CPPv415afsk_timer_stopv"]], "busy (c++ member)": [[7, "_CPPv44busy"]], "currentsample (c++ member)": [[7, "_CPPv413currentSample"]], "currentsamplecount (c++ member)": [[7, "_CPPv418currentSampleCount"]], "currentstride (c++ member)": [[7, "_CPPv413currentStride"]], "current_byte (c++ member)": [[7, "_CPPv412current_byte"]], "fdotone (c++ member)": [[7, "_CPPv47fDoTone"]], "interrupt (c++ function)": [[7, "_CPPv49interruptv"]], "packet_pos (c++ member)": [[7, "_CPPv410packet_pos"]], "pttdelay (c++ member)": [[7, "_CPPv48pttDelay"]], "pttpin (c++ member)": [[7, "_CPPv46pttPin"]], "silencelength (c++ member)": [[7, "_CPPv413silenceLength"]], "silencestop (c++ member)": [[7, "_CPPv411silenceStop"]], "sine_table_switcher (c++ member)": [[7, "_CPPv419sine_table_switcher"]], "tonelength (c++ member)": [[7, "_CPPv410toneLength"]], "tonestop (c++ member)": [[7, "_CPPv48toneStop"]], "totalsamplessent (c++ member)": [[7, "_CPPv416totalSamplesSent"]], "afsk_gettxdelay (c++ function)": [[8, "_CPPv415afsk_getTxDelayv"]], "ax25_getpacketsize (c++ function)": [[9, "_CPPv418ax25_getPacketSizev"], [10, "_CPPv418ax25_getPacketSizev"]], "ax25_initbuffer (c++ function)": [[9, "_CPPv415ax25_initBufferP7uint8_tKi"], [10, "_CPPv415ax25_initBufferP7uint8_tKi"]], "ax25_send_bit (c++ function)": [[9, "_CPPv413ax25_send_bitK7uint8_tK7uint8_t"]], "ax25_send_byte (c++ function)": [[9, "_CPPv414ax25_send_byte7uint8_t"], [10, "_CPPv414ax25_send_byte7uint8_t"]], "ax25_send_flag (c++ function)": [[9, "_CPPv414ax25_send_flagv"]], "ax25_send_footer (c++ function)": [[9, "_CPPv416ax25_send_footerv"], [10, "_CPPv416ax25_send_footerv"]], "ax25_send_header (c++ function)": [[9, "_CPPv416ax25_send_headerPCK11PathAddressK8uint16_tK8uint16_t"], [10, "_CPPv416ax25_send_headerPCK11PathAddressK8uint16_tK8uint16_t"]], "ax25_send_string (c++ function)": [[9, "_CPPv416ax25_send_stringPCKc"], [10, "_CPPv416ax25_send_stringPCKc"]], "crc (c++ member)": [[9, "_CPPv43crc"]], "maxpacketsize (c++ member)": [[9, "_CPPv413maxPacketSize"]], "ones_in_a_row (c++ member)": [[9, "_CPPv413ones_in_a_row"]], "packet (c++ member)": [[9, "_CPPv46packet"]], "packet_size (c++ member)": [[9, "_CPPv411packet_size"]], "update_crc (c++ function)": [[9, "_CPPv410update_crcK7uint8_t"]], "analogpin (c++ class)": [[13, "_CPPv49ANALOGPIN"]], "analogpin::analogpin (c++ function)": [[13, "_CPPv4N9ANALOGPIN9ANALOGPINEv"]], "analogpin::analogpin_setup (c++ function)": [[13, "_CPPv4N9ANALOGPIN15ANALOGPIN_SetupEv"]], "analogpin::analogpin_update (c++ function)": [[13, "_CPPv4N9ANALOGPIN16ANALOGPIN_UpdateEv"]], "analogpin::analogpin (c++ member)": [[13, "_CPPv4N9ANALOGPIN9analogPinE"]], "analogpin::analogvalue (c++ member)": [[13, "_CPPv4N9ANALOGPIN11analogValueE"]], "analogpin::getanalogvalue (c++ function)": [[13, "_CPPv4N9ANALOGPIN14getAnalogValueEv"]], "analogpin::~analogpin (c++ function)": [[13, "_CPPv4N9ANALOGPIND0Ev"]], "analogpin (c++ member)": [[13, "_CPPv49analogpin"]], "bmp085_use_datasheet_vals (c macro)": [[15, "c.BMP085_USE_DATASHEET_VALS"]], "_bmp085mode (c++ member)": [[15, "_CPPv411_bmp085Mode"]], "_bmp085_coeffs (c++ member)": [[15, "_CPPv414_bmp085_coeffs"]], "read16 (c++ function)": [[15, "_CPPv46read164byteP8uint16_t"]], "read8 (c++ function)": [[15, "_CPPv45read84byteP7uint8_t"]], "readcoefficients (c++ function)": [[15, "_CPPv416readCoefficientsv"]], "readrawpressure (c++ function)": [[15, "_CPPv415readRawPressureP7int32_t"]], "readrawtemperature (c++ function)": [[15, "_CPPv418readRawTemperatureP7int32_t"]], "reads16 (c++ function)": [[15, "_CPPv47readS164byteP7int16_t"]], "writecommand (c++ function)": [[15, "_CPPv412writeCommand4byte4byte"]], "adafruit_bmp085_unified (c++ class)": [[16, "_CPPv423Adafruit_BMP085_Unified"]], "adafruit_bmp085_unified::adafruit_bmp085_unified (c++ function)": [[16, "_CPPv4N23Adafruit_BMP085_Unified23Adafruit_BMP085_UnifiedE7int32_t"]], "adafruit_bmp085_unified::_sensorid (c++ member)": [[16, "_CPPv4N23Adafruit_BMP085_Unified9_sensorIDE"]], "adafruit_bmp085_unified::begin (c++ function)": [[16, "_CPPv4N23Adafruit_BMP085_Unified5beginE13bmp085_mode_t"]], "adafruit_bmp085_unified::computeb5 (c++ function)": [[16, "_CPPv4N23Adafruit_BMP085_Unified9computeB5E7int32_t"]], "adafruit_bmp085_unified::getevent (c++ function)": [[16, "_CPPv4N23Adafruit_BMP085_Unified8getEventEP15sensors_event_t"]], "adafruit_bmp085_unified::getpressure (c++ function)": [[16, "_CPPv4N23Adafruit_BMP085_Unified11getPressureEPf"]], "adafruit_bmp085_unified::getsensor (c++ function)": [[16, "_CPPv4N23Adafruit_BMP085_Unified9getSensorEP8sensor_t"]], "adafruit_bmp085_unified::gettemperature (c++ function)": [[16, "_CPPv4N23Adafruit_BMP085_Unified14getTemperatureEPf"]], "adafruit_bmp085_unified::pressuretoaltitude (c++ function)": [[16, "_CPPv4N23Adafruit_BMP085_Unified18pressureToAltitudeEff"], [16, "_CPPv4N23Adafruit_BMP085_Unified18pressureToAltitudeEfff"]], "adafruit_bmp085_unified::sealevelforaltitude (c++ function)": [[16, "_CPPv4N23Adafruit_BMP085_Unified19seaLevelForAltitudeEff"], [16, "_CPPv4N23Adafruit_BMP085_Unified19seaLevelForAltitudeEfff"]], "bmp085_address (c macro)": [[16, "c.BMP085_ADDRESS"]], "[anonymous] (c++ enum)": [[16, "_CPPv4Ut1_0"]], "[anonymous]::bmp085_register_cal_ac1 (c++ enumerator)": [[16, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC1E"]], "[anonymous]::bmp085_register_cal_ac2 (c++ enumerator)": [[16, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC2E"]], "[anonymous]::bmp085_register_cal_ac3 (c++ enumerator)": [[16, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC3E"]], "[anonymous]::bmp085_register_cal_ac4 (c++ enumerator)": [[16, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC4E"]], "[anonymous]::bmp085_register_cal_ac5 (c++ enumerator)": [[16, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC5E"]], "[anonymous]::bmp085_register_cal_ac6 (c++ enumerator)": [[16, "_CPPv4NUt1_023BMP085_REGISTER_CAL_AC6E"]], "[anonymous]::bmp085_register_cal_b1 (c++ enumerator)": [[16, "_CPPv4NUt1_022BMP085_REGISTER_CAL_B1E"]], "[anonymous]::bmp085_register_cal_b2 (c++ enumerator)": [[16, "_CPPv4NUt1_022BMP085_REGISTER_CAL_B2E"]], "[anonymous]::bmp085_register_cal_mb (c++ enumerator)": [[16, "_CPPv4NUt1_022BMP085_REGISTER_CAL_MBE"]], "[anonymous]::bmp085_register_cal_mc (c++ enumerator)": [[16, "_CPPv4NUt1_022BMP085_REGISTER_CAL_MCE"]], "[anonymous]::bmp085_register_cal_md (c++ enumerator)": [[16, "_CPPv4NUt1_022BMP085_REGISTER_CAL_MDE"]], "[anonymous]::bmp085_register_chipid (c++ enumerator)": [[16, "_CPPv4NUt1_022BMP085_REGISTER_CHIPIDE"]], "[anonymous]::bmp085_register_control (c++ enumerator)": [[16, "_CPPv4NUt1_023BMP085_REGISTER_CONTROLE"]], "[anonymous]::bmp085_register_pressuredata (c++ enumerator)": [[16, "_CPPv4NUt1_028BMP085_REGISTER_PRESSUREDATAE"]], "[anonymous]::bmp085_register_readpressurecmd (c++ enumerator)": [[16, "_CPPv4NUt1_031BMP085_REGISTER_READPRESSURECMDE"]], "[anonymous]::bmp085_register_readtempcmd (c++ enumerator)": [[16, "_CPPv4NUt1_027BMP085_REGISTER_READTEMPCMDE"]], "[anonymous]::bmp085_register_softreset (c++ enumerator)": [[16, "_CPPv4NUt1_025BMP085_REGISTER_SOFTRESETE"]], "[anonymous]::bmp085_register_tempdata (c++ enumerator)": [[16, "_CPPv4NUt1_024BMP085_REGISTER_TEMPDATAE"]], "[anonymous]::bmp085_register_version (c++ enumerator)": [[16, "_CPPv4NUt1_023BMP085_REGISTER_VERSIONE"]], "bmp085_calib_data (c++ struct)": [[16, "_CPPv417bmp085_calib_data"]], "bmp085_calib_data::ac1 (c++ member)": [[16, "_CPPv4N17bmp085_calib_data3ac1E"]], "bmp085_calib_data::ac2 (c++ member)": [[16, "_CPPv4N17bmp085_calib_data3ac2E"]], "bmp085_calib_data::ac3 (c++ member)": [[16, "_CPPv4N17bmp085_calib_data3ac3E"]], "bmp085_calib_data::ac4 (c++ member)": [[16, "_CPPv4N17bmp085_calib_data3ac4E"]], "bmp085_calib_data::ac5 (c++ member)": [[16, "_CPPv4N17bmp085_calib_data3ac5E"]], "bmp085_calib_data::ac6 (c++ member)": [[16, "_CPPv4N17bmp085_calib_data3ac6E"]], "bmp085_calib_data::b1 (c++ member)": [[16, "_CPPv4N17bmp085_calib_data2b1E"]], "bmp085_calib_data::b2 (c++ member)": [[16, "_CPPv4N17bmp085_calib_data2b2E"]], "bmp085_calib_data::mb (c++ member)": [[16, "_CPPv4N17bmp085_calib_data2mbE"]], "bmp085_calib_data::mc (c++ member)": [[16, "_CPPv4N17bmp085_calib_data2mcE"]], "bmp085_calib_data::md (c++ member)": [[16, "_CPPv4N17bmp085_calib_data2mdE"]], "bmp085_mode_t (c++ enum)": [[16, "_CPPv413bmp085_mode_t"]], "bmp085_mode_t::bmp085_mode_highres (c++ enumerator)": [[16, "_CPPv4N13bmp085_mode_t19BMP085_MODE_HIGHRESE"]], "bmp085_mode_t::bmp085_mode_standard (c++ enumerator)": [[16, "_CPPv4N13bmp085_mode_t20BMP085_MODE_STANDARDE"]], "bmp085_mode_t::bmp085_mode_ultrahighres (c++ enumerator)": [[16, "_CPPv4N13bmp085_mode_t24BMP085_MODE_ULTRAHIGHRESE"]], "bmp085_mode_t::bmp085_mode_ultralowpower (c++ enumerator)": [[16, "_CPPv4N13bmp085_mode_t25BMP085_MODE_ULTRALOWPOWERE"]], "adafruit_sensor (c++ class)": [[17, "_CPPv415Adafruit_Sensor"]], "adafruit_sensor::adafruit_sensor (c++ function)": [[17, "_CPPv4N15Adafruit_Sensor15Adafruit_SensorEv"]], "adafruit_sensor::_autorange (c++ member)": [[17, "_CPPv4N15Adafruit_Sensor10_autoRangeE"]], "adafruit_sensor::enableautorange (c++ function)": [[17, "_CPPv4N15Adafruit_Sensor15enableAutoRangeEb"]], "adafruit_sensor::getevent (c++ function)": [[17, "_CPPv4N15Adafruit_Sensor8getEventEP15sensors_event_t"]], "adafruit_sensor::getsensor (c++ function)": [[17, "_CPPv4N15Adafruit_Sensor9getSensorEP8sensor_t"]], "adafruit_sensor::~adafruit_sensor (c++ function)": [[17, "_CPPv4N15Adafruit_SensorD0Ev"]], "sensors_dps_to_rads (c macro)": [[17, "c.SENSORS_DPS_TO_RADS"]], "sensors_gauss_to_microtesla (c macro)": [[17, "c.SENSORS_GAUSS_TO_MICROTESLA"]], "sensors_gravity_earth (c macro)": [[17, "c.SENSORS_GRAVITY_EARTH"]], "sensors_gravity_moon (c macro)": [[17, "c.SENSORS_GRAVITY_MOON"]], "sensors_gravity_standard (c macro)": [[17, "c.SENSORS_GRAVITY_STANDARD"]], "sensors_gravity_sun (c macro)": [[17, "c.SENSORS_GRAVITY_SUN"]], "sensors_magfield_earth_max (c macro)": [[17, "c.SENSORS_MAGFIELD_EARTH_MAX"]], "sensors_magfield_earth_min (c macro)": [[17, "c.SENSORS_MAGFIELD_EARTH_MIN"]], "sensors_pressure_sealevelhpa (c macro)": [[17, "c.SENSORS_PRESSURE_SEALEVELHPA"]], "sensor_t (c++ struct)": [[17, "_CPPv48sensor_t"]], "sensor_t::max_value (c++ member)": [[17, "_CPPv4N8sensor_t9max_valueE"]], "sensor_t::min_delay (c++ member)": [[17, "_CPPv4N8sensor_t9min_delayE"]], "sensor_t::min_value (c++ member)": [[17, "_CPPv4N8sensor_t9min_valueE"]], "sensor_t::name (c++ member)": [[17, "_CPPv4N8sensor_t4nameE"]], "sensor_t::resolution (c++ member)": [[17, "_CPPv4N8sensor_t10resolutionE"]], "sensor_t::sensor_id (c++ member)": [[17, "_CPPv4N8sensor_t9sensor_idE"]], "sensor_t::type (c++ member)": [[17, "_CPPv4N8sensor_t4typeE"]], "sensor_t::version (c++ member)": [[17, "_CPPv4N8sensor_t7versionE"]], "sensors_color_t (c++ struct)": [[17, "_CPPv415sensors_color_t"]], "sensors_color_t::[anonymous] (c++ member)": [[17, "_CPPv4N15sensors_color_tUt1_8E"]], "sensors_color_t::b (c++ member)": [[17, "_CPPv4N15sensors_color_t1bE"]], "sensors_color_t::c (c++ member)": [[17, "_CPPv4N15sensors_color_t1cE"]], "sensors_color_t::g (c++ member)": [[17, "_CPPv4N15sensors_color_t1gE"]], "sensors_color_t::r (c++ member)": [[17, "_CPPv4N15sensors_color_t1rE"]], "sensors_color_t::rgba (c++ member)": [[17, "_CPPv4N15sensors_color_t4rgbaE"]], "sensors_event_t (c++ struct)": [[17, "_CPPv415sensors_event_t"]], "sensors_event_t::[anonymous] (c++ member)": [[17, "_CPPv4N15sensors_event_tUt2_12E"]], "sensors_event_t::acceleration (c++ member)": [[17, "_CPPv4N15sensors_event_t12accelerationE"]], "sensors_event_t::color (c++ member)": [[17, "_CPPv4N15sensors_event_t5colorE"]], "sensors_event_t::current (c++ member)": [[17, "_CPPv4N15sensors_event_t7currentE"]], "sensors_event_t::data (c++ member)": [[17, "_CPPv4N15sensors_event_t4dataE"]], "sensors_event_t::distance (c++ member)": [[17, "_CPPv4N15sensors_event_t8distanceE"]], "sensors_event_t::gyro (c++ member)": [[17, "_CPPv4N15sensors_event_t4gyroE"]], "sensors_event_t::light (c++ member)": [[17, "_CPPv4N15sensors_event_t5lightE"]], "sensors_event_t::magnetic (c++ member)": [[17, "_CPPv4N15sensors_event_t8magneticE"]], "sensors_event_t::orientation (c++ member)": [[17, "_CPPv4N15sensors_event_t11orientationE"]], "sensors_event_t::pressure (c++ member)": [[17, "_CPPv4N15sensors_event_t8pressureE"]], "sensors_event_t::relative_humidity (c++ member)": [[17, "_CPPv4N15sensors_event_t17relative_humidityE"]], "sensors_event_t::reserved0 (c++ member)": [[17, "_CPPv4N15sensors_event_t9reserved0E"]], "sensors_event_t::sensor_id (c++ member)": [[17, "_CPPv4N15sensors_event_t9sensor_idE"]], "sensors_event_t::temperature (c++ member)": [[17, "_CPPv4N15sensors_event_t11temperatureE"]], "sensors_event_t::timestamp (c++ member)": [[17, "_CPPv4N15sensors_event_t9timestampE"]], "sensors_event_t::type (c++ member)": [[17, "_CPPv4N15sensors_event_t4typeE"]], "sensors_event_t::version (c++ member)": [[17, "_CPPv4N15sensors_event_t7versionE"]], "sensors_event_t::voltage (c++ member)": [[17, "_CPPv4N15sensors_event_t7voltageE"]], "sensors_type_t (c++ enum)": [[17, "_CPPv414sensors_type_t"]], "sensors_type_t::sensor_type_accelerometer (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t25SENSOR_TYPE_ACCELEROMETERE"]], "sensors_type_t::sensor_type_ambient_temperature (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t31SENSOR_TYPE_AMBIENT_TEMPERATUREE"]], "sensors_type_t::sensor_type_color (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t17SENSOR_TYPE_COLORE"]], "sensors_type_t::sensor_type_current (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t19SENSOR_TYPE_CURRENTE"]], "sensors_type_t::sensor_type_gravity (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t19SENSOR_TYPE_GRAVITYE"]], "sensors_type_t::sensor_type_gyroscope (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t21SENSOR_TYPE_GYROSCOPEE"]], "sensors_type_t::sensor_type_light (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t17SENSOR_TYPE_LIGHTE"]], "sensors_type_t::sensor_type_linear_acceleration (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t31SENSOR_TYPE_LINEAR_ACCELERATIONE"]], "sensors_type_t::sensor_type_magnetic_field (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t26SENSOR_TYPE_MAGNETIC_FIELDE"]], "sensors_type_t::sensor_type_orientation (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t23SENSOR_TYPE_ORIENTATIONE"]], "sensors_type_t::sensor_type_pressure (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t20SENSOR_TYPE_PRESSUREE"]], "sensors_type_t::sensor_type_proximity (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t21SENSOR_TYPE_PROXIMITYE"]], "sensors_type_t::sensor_type_relative_humidity (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t29SENSOR_TYPE_RELATIVE_HUMIDITYE"]], "sensors_type_t::sensor_type_rotation_vector (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t27SENSOR_TYPE_ROTATION_VECTORE"]], "sensors_type_t::sensor_type_voltage (c++ enumerator)": [[17, "_CPPv4N14sensors_type_t19SENSOR_TYPE_VOLTAGEE"]], "sensors_vec_t (c++ struct)": [[17, "_CPPv413sensors_vec_t"]], "sensors_vec_t::[anonymous] (c++ member)": [[17, "_CPPv4N13sensors_vec_tUt1_2E"]], "sensors_vec_t::heading (c++ member)": [[17, "_CPPv4N13sensors_vec_t7headingE"]], "sensors_vec_t::pitch (c++ member)": [[17, "_CPPv4N13sensors_vec_t5pitchE"]], "sensors_vec_t::reserved (c++ member)": [[17, "_CPPv4N13sensors_vec_t8reservedE"]], "sensors_vec_t::roll (c++ member)": [[17, "_CPPv4N13sensors_vec_t4rollE"]], "sensors_vec_t::status (c++ member)": [[17, "_CPPv4N13sensors_vec_t6statusE"]], "sensors_vec_t::v (c++ member)": [[17, "_CPPv4N13sensors_vec_t1vE"]], "sensors_vec_t::x (c++ member)": [[17, "_CPPv4N13sensors_vec_t1xE"]], "sensors_vec_t::y (c++ member)": [[17, "_CPPv4N13sensors_vec_t1yE"]], "sensors_vec_t::z (c++ member)": [[17, "_CPPv4N13sensors_vec_t1zE"]], "bmp (c++ class)": [[19, "_CPPv43BMP"]], "bmp::altitude (c++ member)": [[19, "_CPPv4N3BMP8AltitudeE"]], "bmp::bmp (c++ function)": [[19, "_CPPv4N3BMP3BMPEv"]], "bmp::bmpmodule (c++ member)": [[19, "_CPPv4N3BMP9BMPModuleE"]], "bmp::bmp_setup (c++ function)": [[19, "_CPPv4N3BMP9BMP_SetupEv"]], "bmp::bmp_update (c++ function)": [[19, "_CPPv4N3BMP10BMP_UpdateEv"]], "bmp::baselinepressure (c++ member)": [[19, "_CPPv4N3BMP16BaselinePressureE"]], "bmp::getaltitude (c++ function)": [[19, "_CPPv4N3BMP11GetAltitudeEv"]], "bmp::getbaselinepressure (c++ function)": [[19, "_CPPv4N3BMP19GetBaselinePressureEv"]], "bmp::getmaxaltitude (c++ function)": [[19, "_CPPv4N3BMP14GetMaxAltitudeEv"]], "bmp::getpressure (c++ function)": [[19, "_CPPv4N3BMP11GetPressureEv"]], "bmp::gettemperature (c++ function)": [[19, "_CPPv4N3BMP14GetTemperatureEv"]], "bmp::isvalidbmp (c++ function)": [[19, "_CPPv4N3BMP10IsValidBMPEv"]], "bmp::maxaltitude (c++ member)": [[19, "_CPPv4N3BMP11MaxAltitudeE"]], "bmp::pressure (c++ member)": [[19, "_CPPv4N3BMP8PressureE"]], "bmp::temperature (c++ member)": [[19, "_CPPv4N3BMP11TemperatureE"]], "bmp::validbmp (c++ member)": [[19, "_CPPv4N3BMP8ValidBMPE"]], "bmp::~bmp (c++ function)": [[19, "_CPPv4N3BMPD0Ev"]], "bmp (c++ member)": [[19, "_CPPv43bmp"]], "gps (c++ class)": [[23, "_CPPv43GPS"]], "gps::agelocation (c++ function)": [[23, "_CPPv4N3GPS11AgeLocationEv"]], "gps::gps (c++ function)": [[23, "_CPPv4N3GPS3GPSEK7uint8_tK7uint8_t"]], "gps::gpsmodule (c++ member)": [[23, "_CPPv4N3GPS9GPSModuleE"]], "gps::gps_debug (c++ function)": [[23, "_CPPv4N3GPS9GPS_DebugEv"]], "gps::gps_setup (c++ function)": [[23, "_CPPv4N3GPS9GPS_SetupEv"]], "gps::gps_update (c++ function)": [[23, "_CPPv4N3GPS10GPS_UpdateEv"]], "gps::getaltitude (c++ function)": [[23, "_CPPv4N3GPS11GetAltitudeEv"]], "gps::getcourse (c++ function)": [[23, "_CPPv4N3GPS9GetCourseEv"]], "gps::getdate (c++ function)": [[23, "_CPPv4N3GPS7GetDateEv"]], "gps::getday (c++ function)": [[23, "_CPPv4N3GPS6GetDayEv"]], "gps::getfull_latitude (c++ function)": [[23, "_CPPv4N3GPS16GetFull_LatitudeEv"]], "gps::getfull_longitude (c++ function)": [[23, "_CPPv4N3GPS17GetFull_LongitudeEv"]], "gps::gethour (c++ function)": [[23, "_CPPv4N3GPS7GetHourEv"]], "gps::getlatitude (c++ function)": [[23, "_CPPv4N3GPS11GetLatitudeEv"]], "gps::getlongitude (c++ function)": [[23, "_CPPv4N3GPS12GetLongitudeEv"]], "gps::getmaxaltitude (c++ function)": [[23, "_CPPv4N3GPS14GetMaxAltitudeEv"]], "gps::getminute (c++ function)": [[23, "_CPPv4N3GPS9GetMinuteEv"]], "gps::getsatellites (c++ function)": [[23, "_CPPv4N3GPS13GetSatellitesEv"]], "gps::getsecond (c++ function)": [[23, "_CPPv4N3GPS9GetSecondEv"]], "gps::getspeed (c++ function)": [[23, "_CPPv4N3GPS8GetSpeedEv"]], "gps::maxaltitude (c++ member)": [[23, "_CPPv4N3GPS11MaxAltitudeE"]], "gps::validlocation (c++ function)": [[23, "_CPPv4N3GPS13ValidLocationEv"]], "gps::tinygps (c++ member)": [[23, "_CPPv4N3GPS7tinyGPSE"]], "gps::valid_pos (c++ member)": [[23, "_CPPv4N3GPS9valid_posE"]], "gps::~gps (c++ function)": [[23, "_CPPv4N3GPSD0Ev"]], "combine (c macro)": [[24, "c.COMBINE"]], "_gnggaterm (c macro)": [[24, "c._GNGGAterm"]], "_gnrmcterm (c macro)": [[24, "c._GNRMCterm"]], "_gpggaterm (c macro)": [[24, "c._GPGGAterm"]], "_gprmcterm (c macro)": [[24, "c._GPRMCterm"]], "rawdegrees (c++ struct)": [[25, "_CPPv410RawDegrees"]], "rawdegrees::rawdegrees (c++ function)": [[25, "_CPPv4N10RawDegrees10RawDegreesEv"]], "rawdegrees::billionths (c++ member)": [[25, "_CPPv4N10RawDegrees10billionthsE"]], "rawdegrees::deg (c++ member)": [[25, "_CPPv4N10RawDegrees3degE"]], "rawdegrees::negative (c++ member)": [[25, "_CPPv4N10RawDegrees8negativeE"]], "tinygpsaltitude (c++ struct)": [[25, "_CPPv415TinyGPSAltitude"]], "tinygpsaltitude::feet (c++ function)": [[25, "_CPPv4N15TinyGPSAltitude4feetEv"]], "tinygpsaltitude::kilometers (c++ function)": [[25, "_CPPv4N15TinyGPSAltitude10kilometersEv"]], "tinygpsaltitude::meters (c++ function)": [[25, "_CPPv4N15TinyGPSAltitude6metersEv"]], "tinygpsaltitude::miles (c++ function)": [[25, "_CPPv4N15TinyGPSAltitude5milesEv"]], "tinygpscourse (c++ struct)": [[25, "_CPPv413TinyGPSCourse"]], "tinygpscourse::deg (c++ function)": [[25, "_CPPv4N13TinyGPSCourse3degEv"]], "tinygpscustom (c++ class)": [[25, "_CPPv413TinyGPSCustom"]], "tinygpscustom::tinygpscustom (c++ function)": [[25, "_CPPv4N13TinyGPSCustom13TinyGPSCustomER11TinyGPSPlusPKci"], [25, "_CPPv4N13TinyGPSCustom13TinyGPSCustomEv"]], "tinygpscustom::age (c++ function)": [[25, "_CPPv4NK13TinyGPSCustom3ageEv"]], "tinygpscustom::begin (c++ function)": [[25, "_CPPv4N13TinyGPSCustom5beginER11TinyGPSPlusPKci"]], "tinygpscustom::buffer (c++ member)": [[25, "_CPPv4N13TinyGPSCustom6bufferE"]], "tinygpscustom::commit (c++ function)": [[25, "_CPPv4N13TinyGPSCustom6commitEv"]], "tinygpscustom::isupdated (c++ function)": [[25, "_CPPv4NK13TinyGPSCustom9isUpdatedEv"]], "tinygpscustom::isvalid (c++ function)": [[25, "_CPPv4NK13TinyGPSCustom7isValidEv"]], "tinygpscustom::lastcommittime (c++ member)": [[25, "_CPPv4N13TinyGPSCustom14lastCommitTimeE"]], "tinygpscustom::next (c++ member)": [[25, "_CPPv4N13TinyGPSCustom4nextE"]], "tinygpscustom::sentencename (c++ member)": [[25, "_CPPv4N13TinyGPSCustom12sentenceNameE"]], "tinygpscustom::set (c++ function)": [[25, "_CPPv4N13TinyGPSCustom3setEPKc"]], "tinygpscustom::stagingbuffer (c++ member)": [[25, "_CPPv4N13TinyGPSCustom13stagingBufferE"]], "tinygpscustom::termnumber (c++ member)": [[25, "_CPPv4N13TinyGPSCustom10termNumberE"]], "tinygpscustom::updated (c++ member)": [[25, "_CPPv4N13TinyGPSCustom7updatedE"]], "tinygpscustom::valid (c++ member)": [[25, "_CPPv4N13TinyGPSCustom5validE"]], "tinygpscustom::value (c++ function)": [[25, "_CPPv4N13TinyGPSCustom5valueEv"]], "tinygpsdate (c++ struct)": [[25, "_CPPv411TinyGPSDate"]], "tinygpsdate::tinygpsdate (c++ function)": [[25, "_CPPv4N11TinyGPSDate11TinyGPSDateEv"]], "tinygpsdate::age (c++ function)": [[25, "_CPPv4NK11TinyGPSDate3ageEv"]], "tinygpsdate::commit (c++ function)": [[25, "_CPPv4N11TinyGPSDate6commitEv"]], "tinygpsdate::date (c++ member)": [[25, "_CPPv4N11TinyGPSDate4dateE"]], "tinygpsdate::day (c++ function)": [[25, "_CPPv4N11TinyGPSDate3dayEv"]], "tinygpsdate::isupdated (c++ function)": [[25, "_CPPv4NK11TinyGPSDate9isUpdatedEv"]], "tinygpsdate::isvalid (c++ function)": [[25, "_CPPv4NK11TinyGPSDate7isValidEv"]], "tinygpsdate::lastcommittime (c++ member)": [[25, "_CPPv4N11TinyGPSDate14lastCommitTimeE"]], "tinygpsdate::month (c++ function)": [[25, "_CPPv4N11TinyGPSDate5monthEv"]], "tinygpsdate::newdate (c++ member)": [[25, "_CPPv4N11TinyGPSDate7newDateE"]], "tinygpsdate::setdate (c++ function)": [[25, "_CPPv4N11TinyGPSDate7setDateEPKc"]], "tinygpsdate::updated (c++ member)": [[25, "_CPPv4N11TinyGPSDate7updatedE"]], "tinygpsdate::valid (c++ member)": [[25, "_CPPv4N11TinyGPSDate5validE"]], "tinygpsdate::value (c++ function)": [[25, "_CPPv4N11TinyGPSDate5valueEv"]], "tinygpsdate::year (c++ function)": [[25, "_CPPv4N11TinyGPSDate4yearEv"]], "tinygpsdecimal (c++ struct)": [[25, "_CPPv414TinyGPSDecimal"]], "tinygpsdecimal::tinygpsdecimal (c++ function)": [[25, "_CPPv4N14TinyGPSDecimal14TinyGPSDecimalEv"]], "tinygpsdecimal::age (c++ function)": [[25, "_CPPv4NK14TinyGPSDecimal3ageEv"]], "tinygpsdecimal::commit (c++ function)": [[25, "_CPPv4N14TinyGPSDecimal6commitEv"]], "tinygpsdecimal::isupdated (c++ function)": [[25, "_CPPv4NK14TinyGPSDecimal9isUpdatedEv"]], "tinygpsdecimal::isvalid (c++ function)": [[25, "_CPPv4NK14TinyGPSDecimal7isValidEv"]], "tinygpsdecimal::lastcommittime (c++ member)": [[25, "_CPPv4N14TinyGPSDecimal14lastCommitTimeE"]], "tinygpsdecimal::newval (c++ member)": [[25, "_CPPv4N14TinyGPSDecimal6newvalE"]], "tinygpsdecimal::set (c++ function)": [[25, "_CPPv4N14TinyGPSDecimal3setEPKc"]], "tinygpsdecimal::updated (c++ member)": [[25, "_CPPv4N14TinyGPSDecimal7updatedE"]], "tinygpsdecimal::val (c++ member)": [[25, "_CPPv4N14TinyGPSDecimal3valE"]], "tinygpsdecimal::valid (c++ member)": [[25, "_CPPv4N14TinyGPSDecimal5validE"]], "tinygpsdecimal::value (c++ function)": [[25, "_CPPv4N14TinyGPSDecimal5valueEv"]], "tinygpshdop (c++ struct)": [[25, "_CPPv411TinyGPSHDOP"]], "tinygpshdop::hdop (c++ function)": [[25, "_CPPv4N11TinyGPSHDOP4hdopEv"]], "tinygpsinteger (c++ struct)": [[25, "_CPPv414TinyGPSInteger"]], "tinygpsinteger::tinygpsinteger (c++ function)": [[25, "_CPPv4N14TinyGPSInteger14TinyGPSIntegerEv"]], "tinygpsinteger::age (c++ function)": [[25, "_CPPv4NK14TinyGPSInteger3ageEv"]], "tinygpsinteger::commit (c++ function)": [[25, "_CPPv4N14TinyGPSInteger6commitEv"]], "tinygpsinteger::isupdated (c++ function)": [[25, "_CPPv4NK14TinyGPSInteger9isUpdatedEv"]], "tinygpsinteger::isvalid (c++ function)": [[25, "_CPPv4NK14TinyGPSInteger7isValidEv"]], "tinygpsinteger::lastcommittime (c++ member)": [[25, "_CPPv4N14TinyGPSInteger14lastCommitTimeE"]], "tinygpsinteger::newval (c++ member)": [[25, "_CPPv4N14TinyGPSInteger6newvalE"]], "tinygpsinteger::set (c++ function)": [[25, "_CPPv4N14TinyGPSInteger3setEPKc"]], "tinygpsinteger::updated (c++ member)": [[25, "_CPPv4N14TinyGPSInteger7updatedE"]], "tinygpsinteger::val (c++ member)": [[25, "_CPPv4N14TinyGPSInteger3valE"]], "tinygpsinteger::valid (c++ member)": [[25, "_CPPv4N14TinyGPSInteger5validE"]], "tinygpsinteger::value (c++ function)": [[25, "_CPPv4N14TinyGPSInteger5valueEv"]], "tinygpslocation (c++ struct)": [[25, "_CPPv415TinyGPSLocation"]], "tinygpslocation::tinygpslocation (c++ function)": [[25, "_CPPv4N15TinyGPSLocation15TinyGPSLocationEv"]], "tinygpslocation::age (c++ function)": [[25, "_CPPv4NK15TinyGPSLocation3ageEv"]], "tinygpslocation::commit (c++ function)": [[25, "_CPPv4N15TinyGPSLocation6commitEv"]], "tinygpslocation::isupdated (c++ function)": [[25, "_CPPv4NK15TinyGPSLocation9isUpdatedEv"]], "tinygpslocation::isvalid (c++ function)": [[25, "_CPPv4NK15TinyGPSLocation7isValidEv"]], "tinygpslocation::lastcommittime (c++ member)": [[25, "_CPPv4N15TinyGPSLocation14lastCommitTimeE"]], "tinygpslocation::lat (c++ function)": [[25, "_CPPv4N15TinyGPSLocation3latEv"]], "tinygpslocation::lng (c++ function)": [[25, "_CPPv4N15TinyGPSLocation3lngEv"]], "tinygpslocation::rawlat (c++ function)": [[25, "_CPPv4N15TinyGPSLocation6rawLatEv"]], "tinygpslocation::rawlatdata (c++ member)": [[25, "_CPPv4N15TinyGPSLocation10rawLatDataE"]], "tinygpslocation::rawlng (c++ function)": [[25, "_CPPv4N15TinyGPSLocation6rawLngEv"]], "tinygpslocation::rawlngdata (c++ member)": [[25, "_CPPv4N15TinyGPSLocation10rawLngDataE"]], "tinygpslocation::rawnewlatdata (c++ member)": [[25, "_CPPv4N15TinyGPSLocation13rawNewLatDataE"]], "tinygpslocation::rawnewlngdata (c++ member)": [[25, "_CPPv4N15TinyGPSLocation13rawNewLngDataE"]], "tinygpslocation::setlatitude (c++ function)": [[25, "_CPPv4N15TinyGPSLocation11setLatitudeEPKc"]], "tinygpslocation::setlongitude (c++ function)": [[25, "_CPPv4N15TinyGPSLocation12setLongitudeEPKc"]], "tinygpslocation::updated (c++ member)": [[25, "_CPPv4N15TinyGPSLocation7updatedE"]], "tinygpslocation::valid (c++ member)": [[25, "_CPPv4N15TinyGPSLocation5validE"]], "tinygpsplus (c++ class)": [[25, "_CPPv411TinyGPSPlus"]], "tinygpsplus::tinygpsplus (c++ function)": [[25, "_CPPv4N11TinyGPSPlus11TinyGPSPlusEv"]], "tinygpsplus::[anonymous] (c++ enum)": [[25, "_CPPv4N11TinyGPSPlusUt2_13E"]], "tinygpsplus::[anonymous]::gps_sentence_gpgga (c++ enumerator)": [[25, "_CPPv4N11TinyGPSPlusUt2_1318GPS_SENTENCE_GPGGAE"]], "tinygpsplus::[anonymous]::gps_sentence_gprmc (c++ enumerator)": [[25, "_CPPv4N11TinyGPSPlusUt2_1318GPS_SENTENCE_GPRMCE"]], "tinygpsplus::[anonymous]::gps_sentence_other (c++ enumerator)": [[25, "_CPPv4N11TinyGPSPlusUt2_1318GPS_SENTENCE_OTHERE"]], "tinygpsplus::altitude (c++ member)": [[25, "_CPPv4N11TinyGPSPlus8altitudeE"]], "tinygpsplus::cardinal (c++ function)": [[25, "_CPPv4N11TinyGPSPlus8cardinalEd"]], "tinygpsplus::charsprocessed (c++ function)": [[25, "_CPPv4NK11TinyGPSPlus14charsProcessedEv"]], "tinygpsplus::course (c++ member)": [[25, "_CPPv4N11TinyGPSPlus6courseE"]], "tinygpsplus::courseto (c++ function)": [[25, "_CPPv4N11TinyGPSPlus8courseToEdddd"]], "tinygpsplus::cursentencetype (c++ member)": [[25, "_CPPv4N11TinyGPSPlus15curSentenceTypeE"]], "tinygpsplus::curtermnumber (c++ member)": [[25, "_CPPv4N11TinyGPSPlus13curTermNumberE"]], "tinygpsplus::curtermoffset (c++ member)": [[25, "_CPPv4N11TinyGPSPlus13curTermOffsetE"]], "tinygpsplus::customcandidates (c++ member)": [[25, "_CPPv4N11TinyGPSPlus16customCandidatesE"]], "tinygpsplus::customelts (c++ member)": [[25, "_CPPv4N11TinyGPSPlus10customEltsE"]], "tinygpsplus::date (c++ member)": [[25, "_CPPv4N11TinyGPSPlus4dateE"]], "tinygpsplus::distancebetween (c++ function)": [[25, "_CPPv4N11TinyGPSPlus15distanceBetweenEdddd"]], "tinygpsplus::encode (c++ function)": [[25, "_CPPv4N11TinyGPSPlus6encodeEc"]], "tinygpsplus::encodedcharcount (c++ member)": [[25, "_CPPv4N11TinyGPSPlus16encodedCharCountE"]], "tinygpsplus::endoftermhandler (c++ function)": [[25, "_CPPv4N11TinyGPSPlus16endOfTermHandlerEv"]], "tinygpsplus::failedchecksum (c++ function)": [[25, "_CPPv4NK11TinyGPSPlus14failedChecksumEv"]], "tinygpsplus::failedchecksumcount (c++ member)": [[25, "_CPPv4N11TinyGPSPlus19failedChecksumCountE"]], "tinygpsplus::fromhex (c++ function)": [[25, "_CPPv4N11TinyGPSPlus7fromHexEc"]], "tinygpsplus::hdop (c++ member)": [[25, "_CPPv4N11TinyGPSPlus4hdopE"]], "tinygpsplus::insertcustom (c++ function)": [[25, "_CPPv4N11TinyGPSPlus12insertCustomEP13TinyGPSCustomPKci"]], "tinygpsplus::ischecksumterm (c++ member)": [[25, "_CPPv4N11TinyGPSPlus14isChecksumTermE"]], "tinygpsplus::libraryversion (c++ function)": [[25, "_CPPv4N11TinyGPSPlus14libraryVersionEv"]], "tinygpsplus::location (c++ member)": [[25, "_CPPv4N11TinyGPSPlus8locationE"]], "tinygpsplus::operator<< (c++ function)": [[25, "_CPPv4N11TinyGPSPluslsEc"]], "tinygpsplus::parity (c++ member)": [[25, "_CPPv4N11TinyGPSPlus6parityE"]], "tinygpsplus::parsedecimal (c++ function)": [[25, "_CPPv4N11TinyGPSPlus12parseDecimalEPKc"]], "tinygpsplus::parsedegrees (c++ function)": [[25, "_CPPv4N11TinyGPSPlus12parseDegreesEPKcR10RawDegrees"]], "tinygpsplus::passedchecksum (c++ function)": [[25, "_CPPv4NK11TinyGPSPlus14passedChecksumEv"]], "tinygpsplus::passedchecksumcount (c++ member)": [[25, "_CPPv4N11TinyGPSPlus19passedChecksumCountE"]], "tinygpsplus::satellites (c++ member)": [[25, "_CPPv4N11TinyGPSPlus10satellitesE"]], "tinygpsplus::sentencehasfix (c++ member)": [[25, "_CPPv4N11TinyGPSPlus14sentenceHasFixE"]], "tinygpsplus::sentenceswithfix (c++ function)": [[25, "_CPPv4NK11TinyGPSPlus16sentencesWithFixEv"]], "tinygpsplus::sentenceswithfixcount (c++ member)": [[25, "_CPPv4N11TinyGPSPlus21sentencesWithFixCountE"]], "tinygpsplus::speed (c++ member)": [[25, "_CPPv4N11TinyGPSPlus5speedE"]], "tinygpsplus::term (c++ member)": [[25, "_CPPv4N11TinyGPSPlus4termE"]], "tinygpsplus::time (c++ member)": [[25, "_CPPv4N11TinyGPSPlus4timeE"]], "tinygpsspeed (c++ struct)": [[25, "_CPPv412TinyGPSSpeed"]], "tinygpsspeed::kmph (c++ function)": [[25, "_CPPv4N12TinyGPSSpeed4kmphEv"]], "tinygpsspeed::knots (c++ function)": [[25, "_CPPv4N12TinyGPSSpeed5knotsEv"]], "tinygpsspeed::mph (c++ function)": [[25, "_CPPv4N12TinyGPSSpeed3mphEv"]], "tinygpsspeed::mps (c++ function)": [[25, "_CPPv4N12TinyGPSSpeed3mpsEv"]], "tinygpstime (c++ struct)": [[25, "_CPPv411TinyGPSTime"]], "tinygpstime::tinygpstime (c++ function)": [[25, "_CPPv4N11TinyGPSTime11TinyGPSTimeEv"]], "tinygpstime::age (c++ function)": [[25, "_CPPv4NK11TinyGPSTime3ageEv"]], "tinygpstime::centisecond (c++ function)": [[25, "_CPPv4N11TinyGPSTime11centisecondEv"]], "tinygpstime::commit (c++ function)": [[25, "_CPPv4N11TinyGPSTime6commitEv"]], "tinygpstime::hour (c++ function)": [[25, "_CPPv4N11TinyGPSTime4hourEv"]], "tinygpstime::isupdated (c++ function)": [[25, "_CPPv4NK11TinyGPSTime9isUpdatedEv"]], "tinygpstime::isvalid (c++ function)": [[25, "_CPPv4NK11TinyGPSTime7isValidEv"]], "tinygpstime::lastcommittime (c++ member)": [[25, "_CPPv4N11TinyGPSTime14lastCommitTimeE"]], "tinygpstime::minute (c++ function)": [[25, "_CPPv4N11TinyGPSTime6minuteEv"]], "tinygpstime::newtime (c++ member)": [[25, "_CPPv4N11TinyGPSTime7newTimeE"]], "tinygpstime::second (c++ function)": [[25, "_CPPv4N11TinyGPSTime6secondEv"]], "tinygpstime::settime (c++ function)": [[25, "_CPPv4N11TinyGPSTime7setTimeEPKc"]], "tinygpstime::time (c++ member)": [[25, "_CPPv4N11TinyGPSTime4timeE"]], "tinygpstime::updated (c++ member)": [[25, "_CPPv4N11TinyGPSTime7updatedE"]], "tinygpstime::valid (c++ member)": [[25, "_CPPv4N11TinyGPSTime5validE"]], "tinygpstime::value (c++ function)": [[25, "_CPPv4N11TinyGPSTime5valueEv"]], "_gps_feet_per_meter (c macro)": [[25, "c._GPS_FEET_PER_METER"]], "_gps_kmph_per_knot (c macro)": [[25, "c._GPS_KMPH_PER_KNOT"]], "_gps_km_per_meter (c macro)": [[25, "c._GPS_KM_PER_METER"]], "_gps_max_field_size (c macro)": [[25, "c._GPS_MAX_FIELD_SIZE"]], "_gps_miles_per_meter (c macro)": [[25, "c._GPS_MILES_PER_METER"]], "_gps_mph_per_knot (c macro)": [[25, "c._GPS_MPH_PER_KNOT"]], "_gps_mps_per_knot (c macro)": [[25, "c._GPS_MPS_PER_KNOT"]], "_gps_version (c macro)": [[25, "c._GPS_VERSION"]], "analogpin_setup (c++ function)": [[27, "_CPPv415ANALOGPIN_Setupib"]], "analogpin_update (c++ function)": [[27, "_CPPv416ANALOGPIN_Updatev"]], "getdutycycle (c++ function)": [[27, "_CPPv412getDutyCyclev"]], "getperiod (c++ function)": [[27, "_CPPv49getPeriodv"]], "getpulsewidth (c++ function)": [[27, "_CPPv413getPulseWidthv"]], "getstate (c++ function)": [[27, "_CPPv48getStatev"]], "setdutycycle (c++ function)": [[27, "_CPPv412setDutyCyclef"]], "setperiod (c++ function)": [[27, "_CPPv49setPeriodf"]], "setpulsewidth (c++ function)": [[27, "_CPPv413setPulseWidthf"]], "setstate (c++ function)": [[27, "_CPPv48setStateb"]], "togglestate (c++ function)": [[27, "_CPPv411toggleStatev"]], "pwm (c++ class)": [[28, "_CPPv43PWM"]], "pwm::analogpin_setup (c++ function)": [[28, "_CPPv4N3PWM15ANALOGPIN_SetupEib"]], "pwm::analogpin_update (c++ function)": [[28, "_CPPv4N3PWM16ANALOGPIN_UpdateEv"]], "pwm::dutycycle (c++ member)": [[28, "_CPPv4N3PWM9DutyCycleE"]], "pwm::outputpin (c++ member)": [[28, "_CPPv4N3PWM9OutputPinE"]], "pwm::pwm (c++ function)": [[28, "_CPPv4N3PWM3PWMEv"]], "pwm::period_us_ (c++ member)": [[28, "_CPPv4N3PWM10Period_us_E"]], "pwm::pulsewidth_us_ (c++ member)": [[28, "_CPPv4N3PWM14PulseWidth_us_E"]], "pwm::resolution (c++ member)": [[28, "_CPPv4N3PWM10ResolutionE"]], "pwm::state (c++ member)": [[28, "_CPPv4N3PWM5StateE"]], "pwm::getdutycycle (c++ function)": [[28, "_CPPv4N3PWM12getDutyCycleEv"]], "pwm::getperiod (c++ function)": [[28, "_CPPv4N3PWM9getPeriodEv"]], "pwm::getpulsewidth (c++ function)": [[28, "_CPPv4N3PWM13getPulseWidthEv"]], "pwm::getstate (c++ function)": [[28, "_CPPv4N3PWM8getStateEv"]], "pwm::setdutycycle (c++ function)": [[28, "_CPPv4N3PWM12setDutyCycleEf"]], "pwm::setperiod (c++ function)": [[28, "_CPPv4N3PWM9setPeriodEf"]], "pwm::setpulsewidth (c++ function)": [[28, "_CPPv4N3PWM13setPulseWidthEf"]], "pwm::setstate (c++ function)": [[28, "_CPPv4N3PWM8setStateEb"]], "pwm::togglestate (c++ function)": [[28, "_CPPv4N3PWM11toggleStateEv"]], "pwm::~pwm (c++ function)": [[28, "_CPPv4N3PWMD0Ev"]], "pwm (c++ member)": [[28, "_CPPv43pwm"]], "pushbutton (c++ class)": [[31, "_CPPv410PUSHBUTTON"]], "pushbutton::getvoltage (c++ function)": [[31, "_CPPv4N10PUSHBUTTON10GetVoltageEv"]], "pushbutton::getbuttonstate (c++ function)": [[31, "_CPPv4N10PUSHBUTTON14GetbuttonStateEv"]], "pushbutton::getlastbuttonstate (c++ function)": [[31, "_CPPv4N10PUSHBUTTON18GetlastButtonStateEv"]], "pushbutton::isvalidpushbutton (c++ function)": [[31, "_CPPv4N10PUSHBUTTON17IsValidPUSHBUTTONEv"]], "pushbutton::pushbutton (c++ function)": [[31, "_CPPv4N10PUSHBUTTON10PUSHBUTTONEv"]], "pushbutton::pushbutton_setup (c++ function)": [[31, "_CPPv4N10PUSHBUTTON16PUSHBUTTON_SetupEv"]], "pushbutton::pushbutton_update (c++ function)": [[31, "_CPPv4N10PUSHBUTTON17PUSHBUTTON_UpdateEv"]], "pushbutton::validpushbutton (c++ member)": [[31, "_CPPv4N10PUSHBUTTON15ValidPUSHBUTTONE"]], "pushbutton::buttonpin (c++ member)": [[31, "_CPPv4N10PUSHBUTTON9buttonPinE"]], "pushbutton::buttonstate (c++ member)": [[31, "_CPPv4N10PUSHBUTTON11buttonStateE"]], "pushbutton::debouncedelay (c++ member)": [[31, "_CPPv4N10PUSHBUTTON13debounceDelayE"]], "pushbutton::lastbuttonstate (c++ member)": [[31, "_CPPv4N10PUSHBUTTON15lastButtonStateE"]], "pushbutton::lastdebouncetime (c++ member)": [[31, "_CPPv4N10PUSHBUTTON16lastDebounceTimeE"]], "pushbutton::voltage (c++ member)": [[31, "_CPPv4N10PUSHBUTTON7voltageE"]], "pushbutton::~pushbutton (c++ function)": [[31, "_CPPv4N10PUSHBUTTOND0Ev"]], "pushbutton (c++ member)": [[31, "_CPPv410pushbutton"]], "clk (c++ member)": [[34, "_CPPv43CLK"]], "cs (c++ member)": [[34, "_CPPv42CS"]], "chipselectpin (c++ member)": [[34, "_CPPv413ChipSelectPin"]], "di (c++ member)": [[34, "_CPPv42DI"]], "do (c++ member)": [[34, "_CPPv42DO"]], "sd_card (c++ class)": [[34, "_CPPv47SD_card"]], "sd_card::isvalidsd (c++ function)": [[34, "_CPPv4N7SD_card9IsValidSDEv"]], "sd_card::sd_record (c++ function)": [[34, "_CPPv4N7SD_card9SD_RecordEv"]], "sd_card::sd_setup (c++ function)": [[34, "_CPPv4N7SD_card8SD_SetupEv"]], "sd_card::sd_arraypass (c++ function)": [[34, "_CPPv4N7SD_card12SD_arrayPassEv"]], "sd_card::sd_card (c++ function)": [[34, "_CPPv4N7SD_card7SD_cardEv"]], "sd_card::validsd (c++ member)": [[34, "_CPPv4N7SD_card7ValidSDE"]], "sd_card::datafile (c++ member)": [[34, "_CPPv4N7SD_card8dataFileE"]], "sd_card::~sd_card (c++ function)": [[34, "_CPPv4N7SD_cardD0Ev"]], "sd (c++ member)": [[34, "_CPPv42sd"]], "servo (c++ class)": [[37, "_CPPv45Servo"]], "servo::currposition (c++ member)": [[37, "_CPPv4N5Servo12CurrPositionE"]], "servo::servo (c++ function)": [[37, "_CPPv4N5Servo5ServoEv"]], "servo::servostatus (c++ member)": [[37, "_CPPv4N5Servo11ServoStatusE"]], "servo::servo_move (c++ function)": [[37, "_CPPv4N5Servo10Servo_MoveE7uint8_t"]], "servo::servo_setup (c++ function)": [[37, "_CPPv4N5Servo11Servo_SetupEv"]], "servo::servo_status (c++ function)": [[37, "_CPPv4N5Servo12Servo_StatusEb"]], "servo::servo_update (c++ function)": [[37, "_CPPv4N5Servo12Servo_UpdateEv"]], "servo::~servo (c++ function)": [[37, "_CPPv4N5ServoD0Ev"]], "false (c macro)": [[46, "c.FALSE"]], "off (c macro)": [[46, "c.OFF"]], "on (c macro)": [[46, "c.ON"]], "true (c macro)": [[46, "c.TRUE"]], "softtimer_struct (c++ struct)": [[48, "_CPPv416SoftTimer_Struct"]], "softtimer_struct::checktime (c++ function)": [[48, "_CPPv4N16SoftTimer_Struct9CheckTimeEv"]], "softtimer_struct::isenabled (c++ member)": [[48, "_CPPv4N16SoftTimer_Struct9IsEnabledE"]], "softtimer_struct::isrepeatable (c++ member)": [[48, "_CPPv4N16SoftTimer_Struct12IsRepeatableE"]], "softtimer_struct::lastmillis (c++ member)": [[48, "_CPPv4N16SoftTimer_Struct10lastMillisE"]], "softtimer_struct::waitmillis (c++ member)": [[48, "_CPPv4N16SoftTimer_Struct10waitMillisE"]]}})