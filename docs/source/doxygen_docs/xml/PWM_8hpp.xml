<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="PWM_8hpp" kind="file" language="C++">
    <compoundname>PWM.hpp</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes refid="Config_8h" local="yes">../../../Config.h</includes>
    <includedby refid="PWM_8cpp" local="yes">/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/PWM/PWM.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>../../../Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../../ProjectConfig.hpp</label>
        <link refid="ProjectConfig_8hpp"/>
      </node>
      <node id="1">
        <label>/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/PWM/PWM.hpp</label>
        <link refid="PWM_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>HAB_ESP32.hpp</label>
        <link refid="HAB__ESP32_8hpp"/>
      </node>
      <node id="14">
        <label>HAB_Nano.hpp</label>
        <link refid="HAB__Nano_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>HAB_STM32.hpp</label>
        <link refid="HAB__STM32_8hpp"/>
      </node>
      <node id="11">
        <label>HAB_Teensy.hpp</label>
        <link refid="HAB__Teensy_8hpp"/>
      </node>
      <node id="10">
        <label>src/Hardware_Configuration/HardwareConfig.h</label>
        <link refid="HardwareConfig_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>DebugUtilities.h</label>
        <link refid="DebugUtilities_8h"/>
      </node>
      <node id="7">
        <label>HardwareUtilities.h</label>
        <link refid="HardwareUtilities_8h"/>
      </node>
      <node id="9">
        <label>RandNumUtilities.h</label>
        <link refid="RandNumUtilities_8h"/>
      </node>
      <node id="8">
        <label>TimerUtilities.h</label>
        <link refid="TimerUtilities_8h"/>
      </node>
      <node id="4">
        <label>src/Utilities/Utilities.h</label>
        <link refid="Utilities_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="15">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/PWM/PWM.cpp</label>
        <link refid="PWM_8cpp"/>
      </node>
      <node id="1">
        <label>/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/PWM/PWM.hpp</label>
        <link refid="PWM_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classPWM" prot="public">PWM</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="PWM_8hpp_1a6208909b76c84a75b931c78e24a0cc42" prot="public" static="no" mutable="no">
        <type><ref refid="classPWM" kindref="compound">PWM</ref></type>
        <definition>PWM pwm</definition>
        <argsstring></argsstring>
        <name>pwm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/PWM/PWM.hpp" line="38" column="12" declfile="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/PWM/PWM.hpp" declline="38" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PWM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PWM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../Config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="classPWM" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classPWM" kindref="compound">PWM</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classPWM_1a057c4f4333ba4f39127a55980d3d17dc" kindref="member">OutputPin</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classPWM_1a5cac54bdf932efce64b707eb5a09eb7f" kindref="member">State</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classPWM_1a67186a0ffeabee8d4a33bbd1d6488ef8" kindref="member">Resolution</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classPWM_1a19435d334ce3b63ce25d95d8bcdfbf15" kindref="member">DutyCycle</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classPWM_1abc27f06c2b4192aed95a62b5cb534f3f" kindref="member">Period_us_</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classPWM_1abe178de9b826d5bcbe63639eb0c56ec9" kindref="member">PulseWidth_us_</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPWM_1ab3333b13b539a7dc1c712a73a53bbd3b" kindref="member">PWM</ref><sp/>()<sp/>{};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPWM_1a903377c1da3618530f999d77297406af" kindref="member">~PWM</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPWM_1ac80709934a4045a6ba9357144b30ece2" kindref="member">ANALOGPIN_Setup</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Pin,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state<sp/>=<sp/><ref refid="HardwareUtilities_8h_1a29e413f6725b2ba32d165ffaa35b01e5" kindref="member">OFF</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPWM_1a635b80e90b345c6bd2291c7eea668c3f" kindref="member">ANALOGPIN_Update</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPWM_1ad61f19a449a85e3962918e84d8d65313" kindref="member">setState</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPWM_1aae4390846e4e3e8fae8b9559e63d8186" kindref="member">toggleState</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classPWM_1aa7c3cd6bcd57d3460a77572bb9270e26" kindref="member">getState</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPWM_1adaf250808da20b796eac37fbbc1f78d8" kindref="member">setDutyCycle</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>CycleRate);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classPWM_1a335ecdc0437d24468435aa3c81d60fd5" kindref="member">getDutyCycle</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPWM_1a71f7511221fca40c826cff51db4deb22" kindref="member">setPeriod</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_us_);<sp/></highlight><highlight class="comment">//in<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classPWM_1aff75778f1e4a4eb223cba696ec43a5f9" kindref="member">getPeriod</ref>();<sp/></highlight><highlight class="comment">//in<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPWM_1a95658a802ba3278c18a26a92ccb3df7b" kindref="member">setPulseWidth</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>us);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classPWM_1ad4d4bc342c9e1db23c2933153590f3e6" kindref="member">getPulseWidth</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="classPWM" kindref="compound">PWM</ref><sp/><ref refid="PWM_8hpp_1a6208909b76c84a75b931c78e24a0cc42" kindref="member">pwm</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>PWM_H</highlight></codeline>
    </programlisting>
    <location file="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/PWM/PWM.hpp"/>
  </compounddef>
</doxygen>
