<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="APRS_8cpp" kind="file" language="C++">
    <compoundname>APRS.cpp</compoundname>
    <includes refid="APRS_8hpp" local="yes">APRS.hpp</includes>
    <incdepgraph>
      <node id="6">
        <label>../../../Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>../../ProjectConfig.hpp</label>
        <link refid="ProjectConfig_8hpp"/>
      </node>
      <node id="1">
        <label>/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp</label>
        <link refid="APRS_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>APRS.hpp</label>
        <link refid="APRS_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>afsk.h</label>
        <link refid="afsk_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ax25.h</label>
        <link refid="ax25_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>Adafruit_BMP085_U.h</label>
        <link refid="Adafruit__BMP085__U_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>Adafruit_Sensor.h</label>
        <link refid="Adafruit__Sensor_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>../Drivers/BMP/BMP.hpp</label>
        <link refid="BMP_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>../GPS/GPS.hpp</label>
        <link refid="GPS_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>TinyGPS++.h</label>
        <link refid="TinyGPS_09_09_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>../Drivers/SERVO/Servo.hpp</label>
        <link refid="Servo_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>HAB_ESP32.hpp</label>
        <link refid="HAB__ESP32_8hpp"/>
      </node>
      <node id="17">
        <label>HAB_Nano.hpp</label>
        <link refid="HAB__Nano_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>HAB_STM32.hpp</label>
        <link refid="HAB__STM32_8hpp"/>
      </node>
      <node id="14">
        <label>HAB_Teensy.hpp</label>
        <link refid="HAB__Teensy_8hpp"/>
      </node>
      <node id="13">
        <label>src/Hardware_Configuration/HardwareConfig.h</label>
        <link refid="HardwareConfig_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>../../Status/Status.hpp</label>
        <link refid="Status_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>DebugUtilities.h</label>
        <link refid="DebugUtilities_8h"/>
      </node>
      <node id="10">
        <label>HardwareUtilities.h</label>
        <link refid="HardwareUtilities_8h"/>
      </node>
      <node id="12">
        <label>RandNumUtilities.h</label>
        <link refid="RandNumUtilities_8h"/>
      </node>
      <node id="11">
        <label>TimerUtilities.h</label>
        <link refid="TimerUtilities_8h"/>
      </node>
      <node id="7">
        <label>src/Utilities/Utilities.h</label>
        <link refid="Utilities_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="26">
        <label>SPI.h</label>
      </node>
      <node id="20">
        <label>SoftwareSerial.h</label>
      </node>
      <node id="22">
        <label>WProgram.h</label>
      </node>
      <node id="27">
        <label>Wire.h</label>
      </node>
      <node id="23">
        <label>limits.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="APRS_8cpp_1a740a712c140d23aef9b3a2a5e3db9249" prot="public" static="no">
        <name>MAXSENDBUFFER</name>
        <initializer>500</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp" line="4" column="9" bodyfile="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="APRS_8cpp_1ada1b9d525b2993c50837d3c597f29a59" prot="public" static="yes" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long transmission_timer</definition>
        <argsstring></argsstring>
        <name>transmission_timer</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp" line="6" column="22" bodyfile="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="APRS_8cpp_1a2746207058ea5e2a2f3f26debebac10c" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t preambleFlags</definition>
        <argsstring></argsstring>
        <name>preambleFlags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp" line="10" column="10" bodyfile="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="APRS_8cpp_1ac44e8366679396e2bb4dbbe33584a384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void latToStr</definition>
        <argsstring>(char *const s, const int size, float lat)</argsstring>
        <name>latToStr</name>
        <param>
          <type>char *const</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp" line="14" column="6" bodyfile="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp" bodystart="14" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="APRS_8cpp_1a6f1c4d8a861c06c235cc6e2c1b781f92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lonToStr</definition>
        <argsstring>(char *const s, const int size, float lon)</argsstring>
        <name>lonToStr</name>
        <param>
          <type>char *const</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp" line="30" column="6" bodyfile="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp" bodystart="30" bodyend="42"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="APRS_8hpp" kindref="compound">APRS.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAXSENDBUFFER<sp/>500<sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>allocate<sp/>a<sp/>static<sp/>buffer<sp/>on<sp/>the<sp/>stack<sp/>to<sp/>build<sp/>the<sp/>AX25<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>transmission_timer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">uint16_t<sp/><ref refid="APRS_8cpp_1a2746207058ea5e2a2f3f26debebac10c" kindref="member">preambleFlags</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="comment">//<sp/>Convert<sp/>latitude<sp/>from<sp/>a<sp/>float<sp/>to<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="APRS_8cpp_1ac44e8366679396e2bb4dbbe33584a384" kindref="member">latToStr</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lat<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hemisphere<sp/>=<sp/></highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lat<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lat<sp/>=<sp/>-lat;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemisphere<sp/>=<sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deg<sp/>=<sp/>(int)<sp/>lat;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>lat<sp/>=<sp/>(<sp/>lat<sp/>-<sp/>(float)<sp/>deg<sp/>)<sp/>*<sp/>60.0f;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>(int)<sp/>lat;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>lat<sp/>=<sp/>(<sp/>lat<sp/>-<sp/>(float)<sp/>min<sp/>)<sp/>*<sp/>100.0f;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minTenths<sp/>=<sp/>(int)<sp/>(<sp/>lat<sp/>+<sp/>0.5<sp/>);<sp/></highlight><highlight class="comment">//<sp/>Round<sp/>the<sp/>tenths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<sp/>s,<sp/>size,<sp/></highlight><highlight class="stringliteral">&quot;%02d%02d.%02d%c&quot;</highlight><highlight class="normal">,<sp/>deg,<sp/>min,<sp/>minTenths,<sp/>hemisphere<sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>longitude<sp/>from<sp/>a<sp/>float<sp/>to<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="APRS_8cpp_1a6f1c4d8a861c06c235cc6e2c1b781f92" kindref="member">lonToStr</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lon<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hemisphere<sp/>=<sp/></highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lon<sp/>&lt;<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lon<sp/>=<sp/>-lon;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemisphere<sp/>=<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deg<sp/>=<sp/>(int)<sp/>lon;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>lon<sp/>=<sp/>(<sp/>lon<sp/>-<sp/>(float)<sp/>deg<sp/>)<sp/>*<sp/>60.0f;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>(int)<sp/>lon;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>lon<sp/>=<sp/>(<sp/>lon<sp/>-<sp/>(float)<sp/>min<sp/>)<sp/>*<sp/>100.0f;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minTenths<sp/>=<sp/>(int)<sp/>(<sp/>lon<sp/>+<sp/>0.5<sp/>);<sp/></highlight><highlight class="comment">//<sp/>Round<sp/>the<sp/>tenths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<sp/>s,<sp/>size,<sp/></highlight><highlight class="stringliteral">&quot;%03d%02d.%02d%c&quot;</highlight><highlight class="normal">,<sp/>deg,<sp/>min,<sp/>minTenths,<sp/>hemisphere<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAPRS_1a1bf8abb9e97f94e6b59a7758339839d5" kindref="member">APRS::APRS_Setup</ref>(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>p_preambleFlags,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>preambleFlags<sp/>to<sp/>send,<sp/>must<sp/>be<sp/>at<sp/>least<sp/>1<sp/>to<sp/>frame<sp/>packet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>pttPin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>PTT<sp/>pin,<sp/>0<sp/>=<sp/>do<sp/>not<sp/>use<sp/>PTT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>pttDelay,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ms<sp/>to<sp/>wait<sp/>after<sp/>PTT<sp/>to<sp/>transmit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>toneLength,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>silenceLength<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Emit<sp/>sub-audio<sp/>tone<sp/>before<sp/>packet<sp/>to<sp/>trigger<sp/>VOX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="APRS_8cpp_1a2746207058ea5e2a2f3f26debebac10c" kindref="member">preambleFlags</ref><sp/>=<sp/>p_preambleFlags;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="afsk_8cpp_1af04b6ba0f071bd838dbe9cbbebb2da4d" kindref="member">afsk_setup</ref>(<sp/>pttPin,<sp/>pttDelay,<sp/>toneLength,<sp/>silenceLength<sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>start<sp/>until<sp/>we<sp/>get<sp/>a<sp/>valid<sp/>time<sp/>reference<sp/>--<sp/>for<sp/>slotted<sp/>transmissions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>transmission_timer<sp/>=<sp/>millis()<sp/>+<sp/>(<sp/>1000L<sp/>*<sp/><ref refid="ProjectConfig_8hpp_1aac849203a0ae07254155d280f1b5a253" kindref="member">APRS_SLOT</ref><sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAPRS_1a0916a2fa19451c564257f63e8a57c5f5" kindref="member">ValidAPRS</ref><sp/>=<sp/><ref refid="HardwareUtilities_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAPRS_1acef31535927a942a9b735ef550606280" kindref="member">APRS::APRS_Update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="Status_8hpp_1ae29aa2d4ae440022daaed1107eb306b3" kindref="member">status</ref>.<ref refid="classStatus_1a11cf5c02770e7892cc0fbf7ebd3b20e9" kindref="member">IsLaunched</ref>())<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAPRS_1a0ae38b7326866b2ce9e1d79eb84cdc1b" kindref="member">APRS_PERIOD</ref><sp/>=<sp/>120;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}<sp/>else<sp/>if(status.IsLanded())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>APRS_PERIOD<sp/>=<sp/>300;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAPRS_1a0ae38b7326866b2ce9e1d79eb84cdc1b" kindref="member">APRS_PERIOD</ref><sp/>=<sp/>563;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>MessageDelay<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//takes<sp/>account<sp/>of<sp/>delayed<sp/>APRS<sp/>messages<sp/>due<sp/>to<sp/>GPS<sp/>signal<sp/>loss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time<sp/>for<sp/>another<sp/>APRS<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>int32_t<sp/>)(<sp/>millis()<sp/>-<sp/>transmission_timer<sp/>)<sp/>&gt;=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(gps.ValidLocation()<sp/>&amp;&amp;<sp/>(gps.AgeLocation()<sp/>&lt;<sp/>(8<sp/>*<sp/>GPS_VALID_POS_TIMEOUT)<sp/>)<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classAPRS_1ac3accbab93100491b11dd3e9c838f765" kindref="member">APRS_Transmit</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transmission_timer<sp/>+=<sp/>((<sp/><ref refid="classAPRS_1a0ae38b7326866b2ce9e1d79eb84cdc1b" kindref="member">APRS_PERIOD</ref><sp/>*<sp/>1000L<sp/>)<sp/>+<sp/>MessageDelay<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageDelay<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_PRINT(<sp/>F(<sp/></highlight><highlight class="stringliteral">&quot;\nAPRS<sp/>message<sp/>sent.<sp/>GPS<sp/>signal<sp/>good.&quot;</highlight><highlight class="normal"><sp/>));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>DEBUG_PRINT(F(&quot;\nNo<sp/>APRS<sp/>message<sp/>sent.<sp/>GPS<sp/>signal<sp/>problem.&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//MessageDelay<sp/>=<sp/>millis();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classAPRS_1abb63cf7b937980c4925235443e8f6b16" kindref="member">APRS::IsValidAPRS</ref>()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classAPRS_1a0916a2fa19451c564257f63e8a57c5f5" kindref="member">ValidAPRS</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAPRS_1ac3accbab93100491b11dd3e9c838f765" kindref="member">APRS::APRS_Transmit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structPathAddress" kindref="compound">PathAddress</ref><sp/>addresses[]<sp/>=<sp/>{{<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="ProjectConfig_8hpp_1ad5b5911231170d89e5396c6100faa155" kindref="member">D_CALLSIGN</ref>,<sp/><ref refid="ProjectConfig_8hpp_1aa15d8e72f0af9e15bf831067c3448891" kindref="member">D_CALLSIGN_ID</ref><sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>Destination<sp/>callsign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="ProjectConfig_8hpp_1a264620a9977e1f6a6be4486e447a01a5" kindref="member">S_CALLSIGN</ref>,<sp/><ref refid="ProjectConfig_8hpp_1ab9c7d15dbba430d937c2638e63f1a439" kindref="member">S_CALLSIGN_ID</ref><sp/>},<sp/><sp/></highlight><highlight class="comment">//<sp/>Source<sp/>callsign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>Digi1<sp/>(first<sp/>digi<sp/>in<sp/>the<sp/>chain)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>Digi2<sp/>(second<sp/>digi<sp/>in<sp/>the<sp/>chain)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>altitude<sp/>=<sp/><ref refid="GPS_8hpp_1abe2f3233916c628362cbefbc704d6be1" kindref="member">gps</ref>.<ref refid="classGPS_1a4a04e77b0eaf79bfd6e4e7dddacfb498" kindref="member">GetAltitude</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>//<sp/>If<sp/>above<sp/>5000<sp/>feet<sp/>switch<sp/>to<sp/>a<sp/>single<sp/>hop<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAddresses;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>altitude<sp/>&gt;<sp/>1500<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>APRS<sp/>recomendations<sp/>for<sp/>&gt;<sp/>5000<sp/>feet<sp/>is:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Path:<sp/>WIDE2-1<sp/>is<sp/>acceptable,<sp/>but<sp/>no<sp/>path<sp/>is<sp/>preferred.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nAddresses<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[<sp/>2<sp/>].<ref refid="structPathAddress_1a9a25917b2700ddfbcb88f5a3213d1b9a" kindref="member">callsign</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WIDE2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[<sp/>2<sp/>].<ref refid="structPathAddress_1a20b1369cbafbc06dd06bf92db3bd6392" kindref="member">ssid</ref><sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//orig<sp/>=<sp/>1<sp/>=====<sp/>0-VIA;1-wide1-1;2wide2-2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>1500<sp/>meters<sp/>use<sp/>a<sp/>much<sp/>more<sp/>generous<sp/>path<sp/>(assuming<sp/>a<sp/>mobile<sp/>station)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Path<sp/>is<sp/>&quot;WIDE1-1,WIDE2-2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nAddresses<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[<sp/>2<sp/>].<ref refid="structPathAddress_1a9a25917b2700ddfbcb88f5a3213d1b9a" kindref="member">callsign</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WIDE1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[<sp/>2<sp/>].<ref refid="structPathAddress_1a20b1369cbafbc06dd06bf92db3bd6392" kindref="member">ssid</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[<sp/>3<sp/>].<ref refid="structPathAddress_1a9a25917b2700ddfbcb88f5a3213d1b9a" kindref="member">callsign</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;WIDE2&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[<sp/>3<sp/>].<ref refid="structPathAddress_1a20b1369cbafbc06dd06bf92db3bd6392" kindref="member">ssid</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>1500<sp/>meters<sp/>use<sp/>a<sp/>much<sp/>more<sp/>generous<sp/>path<sp/>(assuming<sp/>a<sp/>mobile<sp/>station)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Path<sp/>is<sp/>&quot;WIDE1-1,WIDE2-2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>nAddresses<sp/>=<sp/>4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//addresses[2].callsign<sp/>=<sp/>&quot;WIDE1&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//addresses[2].ssid<sp/>=<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//addresses[3].callsign<sp/>=<sp/>&quot;WIDE2&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//addresses[3].ssid<sp/>=<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>debugging<sp/>print<sp/>out<sp/>the<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(&quot;APRS(&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(nAddresses);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&quot;):<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(int<sp/>i=0;<sp/>i<sp/>&lt;<sp/>nAddresses;<sp/>i++)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(addresses[i].callsign);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&apos;-&apos;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(addresses[i].ssid);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(i<sp/>&lt;<sp/>nAddresses-1)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&apos;,&apos;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(&apos;<sp/>&apos;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(SYMBOL_TABLE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.print(SYMBOL_CHAR);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.println();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dayOfMonth<sp/>=<sp/><ref refid="GPS_8hpp_1abe2f3233916c628362cbefbc704d6be1" kindref="member">gps</ref>.<ref refid="classGPS_1abeaab59b022619cdb363ce87e78b129c" kindref="member">GetDay</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>hour<sp/>=<sp/><ref refid="GPS_8hpp_1abe2f3233916c628362cbefbc704d6be1" kindref="member">gps</ref>.<ref refid="classGPS_1a945c9dca9c3f114cafb52435bde602e2" kindref="member">GetHour</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>min<sp/>=<sp/><ref refid="GPS_8hpp_1abe2f3233916c628362cbefbc704d6be1" kindref="member">gps</ref>.<ref refid="classGPS_1a6e15e126a0bd7e1a4127af6967004740" kindref="member">GetMinute</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lat<sp/>=<sp/><ref refid="GPS_8hpp_1abe2f3233916c628362cbefbc704d6be1" kindref="member">gps</ref>.<ref refid="classGPS_1ace66c4769d36ca8b1318fe996d95275a" kindref="member">GetLatitude</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lon<sp/>=<sp/><ref refid="GPS_8hpp_1abe2f3233916c628362cbefbc704d6be1" kindref="member">gps</ref>.<ref refid="classGPS_1a343091b8b0d61079ddfe47224eeafaca" kindref="member">GetLongitude</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>altitude<sp/>=<sp/>gps.GetAltitude();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>heading<sp/>=<sp/>00;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>speed<sp/>=<sp/><ref refid="GPS_8hpp_1abe2f3233916c628362cbefbc704d6be1" kindref="member">gps</ref>.<ref refid="classGPS_1a95d604b38ad88e138a0feb15e37e15ed" kindref="member">GetSpeed</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DEBUG_PRINT(gps.GetLatitude());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DEBUG_PRINT(gps.GetLongitude());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DEBUG_PRINT(gps.GetFull_Latitude());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DEBUG_PRINT(gps.GetFull_Longitude());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>float<sp/>num_whole<sp/>=<sp/>gps.GetLatitude();</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>intpart<sp/>=<sp/>(int)num_whole;</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>num_dec<sp/>=<sp/>gps.GetFull_Latitude();</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>decpart<sp/>=<sp/>int(num_dec);</highlight></codeline>
<codeline lineno="173"><highlight class="comment"></highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(intpart);</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(decpart);</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>lat_pos<sp/>[40];</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(lat_pos,<sp/>8,<sp/>&quot;%i.%i&quot;,<sp/>intpart,<sp/>decpart);</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(F(&quot;\nAPRS<sp/>Latitude:<sp/>&quot;));</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(lat_pos);</highlight></codeline>
<codeline lineno="180"><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/>num_whole<sp/>=<sp/>gps.GetLongitude();</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/>intpart<sp/>=<sp/>(int)num_whole;</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/>num_dec<sp/>=<sp/>gps.GetFull_Longitude();</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>decpart<sp/>=<sp/>int(num_dec);</highlight></codeline>
<codeline lineno="185"><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(intpart);</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(decpart);</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>lon_pos<sp/>[40];</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(lon_pos,<sp/>8,<sp/>&quot;%i.%i&quot;,<sp/>intpart,<sp/>decpart);</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(F(&quot;\nAPRS<sp/>Longitude:&quot;));</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(lon_pos);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>char*<sp/>const<sp/>lat_string<sp/>=<sp/>&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>char*<sp/>const<sp/>lon_string<sp/>=<sp/>&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>temp[12];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>latToStr(temp,<sp/>sizeof(temp),<sp/>lat);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Lat:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>char*<sp/>const<sp/>lat_pos<sp/>=<sp/>temp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lonToStr(temp,<sp/>sizeof(temp),<sp/>lon);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>char*<sp/>const<sp/>lon_pos<sp/>=<sp/>temp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAPRS_1a843dde7eb8ef178e57b5edd63aa76d3b" kindref="member">APRS_Send_with_String</ref>(<sp/>addresses,<sp/>nAddresses,<sp/>dayOfMonth,<sp/>hour,<sp/>min,<sp/>lat,<sp/>lon,<sp/></highlight><highlight class="comment">//<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>altitude,<sp/></highlight><highlight class="comment">//<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heading,<sp/>speed,<sp/><ref refid="ProjectConfig_8hpp_1a501ad44d9dec287c5f675619c6768635" kindref="member">SYMBOL_TABLE</ref>,<sp/><ref refid="ProjectConfig_8hpp_1a5abaab0e1df4c3b5d7dabe40a2d87e8a" kindref="member">SYMBOL_CHAR</ref>,<sp/><ref refid="ProjectConfig_8hpp_1a6b372a3b4273a5b1cbb420eb7d058a07" kindref="member">comment</ref></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(<sp/>50<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAPRS_1a843dde7eb8ef178e57b5edd63aa76d3b" kindref="member">APRS::APRS_Send_with_String</ref>(</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structPathAddress" kindref="compound">PathAddress</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>paths,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPaths,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>dayOfMonth,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>hour,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>min,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lat,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lon,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>altitude,<sp/></highlight><highlight class="comment">//<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>heading,<sp/></highlight><highlight class="comment">//<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>speed,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbolTableIndicator,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbol,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ProjectConfig_8hpp_1a6b372a3b4273a5b1cbb420eb7d058a07" kindref="member">comment</ref></highlight></codeline>
<codeline lineno="226"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>buf[<ref refid="APRS_8cpp_1a740a712c140d23aef9b3a2a5e3db9249" kindref="member">MAXSENDBUFFER</ref>];</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[12];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1af8f91b6c94fc7d360bcfc236c6ccc190" kindref="member">ax25_initBuffer</ref>(<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>buf<sp/>));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1a45891ff098c74d3817d00c61b34f5780" kindref="member">ax25_send_header</ref>(<sp/>paths,<sp/>nPaths,<sp/><ref refid="APRS_8cpp_1a2746207058ea5e2a2f3f26debebac10c" kindref="member">preambleFlags</ref><sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1ae80e2185743694cb1e289ee4d7af6c77" kindref="member">ax25_send_byte</ref>(<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>Report<sp/>w/<sp/>timestamp,<sp/>no<sp/>APRS<sp/>messaging.<sp/>$<sp/>=<sp/>NMEA<sp/>raw<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<sp/>temp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>temp<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;%02u%02u%02uz&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>dayOfMonth,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>hour,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>min</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1a9cf6154e0de4ee381680d59aaff8d6e3" kindref="member">ax25_send_string</ref>(<sp/>temp<sp/>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="APRS_8cpp_1ac44e8366679396e2bb4dbbe33584a384" kindref="member">latToStr</ref>(<sp/>temp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>temp<sp/>),<sp/>lat<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1a9cf6154e0de4ee381680d59aaff8d6e3" kindref="member">ax25_send_string</ref>(<sp/>temp<sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Lat:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%03u&quot;,<sp/>lat_string);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ax25_send_string(lat_string);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1ae80e2185743694cb1e289ee4d7af6c77" kindref="member">ax25_send_byte</ref>(<sp/>symbolTableIndicator<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>Symbol<sp/>table<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="APRS_8cpp_1a6f1c4d8a861c06c235cc6e2c1b781f92" kindref="member">lonToStr</ref>(<sp/>temp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>temp<sp/>),<sp/>lon<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1a9cf6154e0de4ee381680d59aaff8d6e3" kindref="member">ax25_send_string</ref>(<sp/>temp<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lon:<sp/>000deg<sp/>and<sp/>25.80<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%03u&quot;,<sp/>lon_string);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ax25_send_string(lon_string);<sp/><sp/><sp/>//<sp/>Lon:<sp/>000deg<sp/>and<sp/>25.80<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1ae80e2185743694cb1e289ee4d7af6c77" kindref="member">ax25_send_byte</ref>(<sp/>symbol<sp/>);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>symbol</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<sp/>temp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>temp<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;%03u&quot;</highlight><highlight class="normal">,<sp/>heading<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1a9cf6154e0de4ee381680d59aaff8d6e3" kindref="member">ax25_send_string</ref>(<sp/>temp<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Heading<sp/>(degrees)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1ae80e2185743694cb1e289ee4d7af6c77" kindref="member">ax25_send_byte</ref>(<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<sp/>temp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>temp<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;%03d&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>(<sp/>speed<sp/>+<sp/>0.5<sp/>));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1a9cf6154e0de4ee381680d59aaff8d6e3" kindref="member">ax25_send_string</ref>(<sp/>temp<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>speed<sp/>(knots)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1a9cf6154e0de4ee381680d59aaff8d6e3" kindref="member">ax25_send_string</ref>(<sp/></highlight><highlight class="stringliteral">&quot;/A=&quot;</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>Altitude<sp/>(feet).<sp/>Goes<sp/>anywhere<sp/>in<sp/>the<sp/>comment<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(<sp/>temp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/>temp<sp/>),<sp/></highlight><highlight class="stringliteral">&quot;%06ld&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>(<sp/>altitude<sp/>/<sp/>0.3048<sp/>));<sp/></highlight><highlight class="comment">//<sp/>10000<sp/>ft<sp/>=<sp/>3048<sp/>m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1a9cf6154e0de4ee381680d59aaff8d6e3" kindref="member">ax25_send_string</ref>(<sp/>temp<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1a9cf6154e0de4ee381680d59aaff8d6e3" kindref="member">ax25_send_string</ref>(<sp/><ref refid="ProjectConfig_8hpp_1a6b372a3b4273a5b1cbb420eb7d058a07" kindref="member">comment</ref><sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Comment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax25_8cpp_1aa73200bd12eb56bad00541d3776ca8dd" kindref="member">ax25_send_footer</ref>();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.flush();<sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>all<sp/>Serial<sp/>data<sp/>(which<sp/>is<sp/>based<sp/>on<sp/>interrupts)<sp/>is<sp/>done<sp/>before<sp/>you<sp/>start<sp/>sending.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>buffer<sp/>of<sp/>bits<sp/>we<sp/>are<sp/>going<sp/>to<sp/>send</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="afsk_8cpp_1a852f39a7ffa81b2a2e4cbdca6b004837" kindref="member">afsk_set_buffer</ref>(<sp/>buf,<sp/><ref refid="ax25_8cpp_1a295f9e62a38c8eac1190df9b77c139aa" kindref="member">ax25_getPacketSize</ref>());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.flush();<sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>all<sp/>characters<sp/>are<sp/>sent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>no<sp/>more<sp/>operations<sp/>until<sp/>this<sp/>is<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="afsk_8cpp_1ad7daf3efd823a9075f24b6e6d3fbe4c4" kindref="member">afsk_start</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/><ref refid="afsk_8cpp_1a284c725f2b2cb0743504fbc0d0c4bf97" kindref="member">afsk_busy</ref>());</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classAPRS_1a0f7df5200518af9182df3e3ff197d69e" kindref="member">logBuffer</ref>(<sp/>buf,<sp/><ref refid="ax25_8cpp_1a295f9e62a38c8eac1190df9b77c139aa" kindref="member">ax25_getPacketSize</ref>(),<sp/>dayOfMonth,<sp/>hour,<sp/>min<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dump<sp/>out<sp/>the<sp/>AX25<sp/>packet<sp/>in<sp/>a<sp/>semi-readable<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note,<sp/>the<sp/>end<sp/>of<sp/>header<sp/>and<sp/>CRC<sp/>are<sp/>sent<sp/>as<sp/>ASCII<sp/>characters,<sp/>which<sp/>they<sp/>aren&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classAPRS_1a0f7df5200518af9182df3e3ff197d69e" kindref="member">APRS::logBuffer</ref>(</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitsSent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>dayOfMonth,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>hour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>min</highlight></codeline>
<codeline lineno="292"><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.printf(&quot;Bits<sp/>in<sp/>packet<sp/>%d:<sp/>&quot;,<sp/>bitsSent);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#TODO::FIXME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(<sp/>dayOfMonth<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(<sp/>hour<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(<sp/>min<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>frameState<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>0-No<sp/>start,<sp/>1-start,<sp/>2-in<sp/>header,<sp/>3-In<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bSoFar<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>gotBit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numOnes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>onBit<sp/>=<sp/>0;<sp/>onBit<sp/>&lt;<sp/>bitsSent;<sp/>onBit++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>bit<sp/>=<sp/>buf[<sp/>onBit<sp/>&gt;&gt;<sp/>3<sp/>]<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>(<sp/>onBit<sp/>&amp;<sp/>7<sp/>));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>numOnes<sp/>==<sp/>5<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>may<sp/>be<sp/>a<sp/>0<sp/>due<sp/>to<sp/>bit<sp/>stuffing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bit<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Maybe<sp/>it&apos;s<sp/>a<sp/>0x7e</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onBit++;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit<sp/>=<sp/>buf[<sp/>onBit<sp/>&gt;&gt;<sp/>3<sp/>]<sp/>&amp;<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>(<sp/>onBit<sp/>&amp;<sp/>7<sp/>));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gotBit<sp/>==<sp/>6<sp/>&amp;&amp;<sp/>bSoFar<sp/>==<sp/>0x3e<sp/>&amp;&amp;<sp/>!bit<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Got<sp/>0x7e<sp/>frame<sp/>start/end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frameState<sp/>==<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameState<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frameState<sp/>==<sp/>3<sp/>||<sp/>frameState<sp/>==<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameState<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bSoFar<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotBit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(<sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal"><sp/>);<sp/></highlight><highlight class="comment">//<sp/>Error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOnes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bit<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>one<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bSoFar<sp/>|=<sp/>(<sp/>1<sp/>&lt;&lt;<sp/>gotBit<sp/>);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOnes++;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOnes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotBit++;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>gotBit<sp/>==<sp/>8<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Got<sp/>a<sp/>byte;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frameState<sp/>==<sp/>1<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameState<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frameState<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>bSoFar<sp/>==<sp/>0xf0<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>0xf0<sp/>is<sp/>the<sp/>last<sp/>byte<sp/>of<sp/>the<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameState<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>frameState<sp/>==<sp/>2<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>(<sp/>bSoFar<sp/>&gt;&gt;<sp/>1<sp/>));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>bSoFar<sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bSoFar<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotBit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="380"><highlight class="comment"></highlight></codeline>
<codeline lineno="381"><highlight class="comment">uint16_t<sp/>preambleFlags;</highlight></codeline>
<codeline lineno="382"><highlight class="comment"></highlight></codeline>
<codeline lineno="383"><highlight class="comment"></highlight></codeline>
<codeline lineno="384"><highlight class="comment">void<sp/>check_APRS(float<sp/>altitude,<sp/>uint16_t<sp/>APRS_PERIOD)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/><sp/><sp/><sp/>static<sp/>unsigned<sp/>long<sp/>MessageDelay<sp/>=<sp/>0;<sp/><sp/>//takes<sp/>account<sp/>of<sp/>delayed<sp/>APRS<sp/>messages<sp/>due<sp/>to<sp/>GPS<sp/>signal<sp/>loss</highlight></codeline>
<codeline lineno="386"><highlight class="comment"></highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Time<sp/>for<sp/>another<sp/>APRS<sp/>frame</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>((int32_t)<sp/>(millis()<sp/>-<sp/>transmission_timer)<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//if<sp/>(gps.ValidLocation()<sp/>&amp;&amp;<sp/>(gps.AgeLocation()<sp/>&lt;<sp/>(8<sp/>*<sp/>GPS_VALID_POS_TIMEOUT)<sp/>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_APRS(altitude);</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transmission_timer<sp/>+=<sp/>(<sp/>(APRS_PERIOD<sp/>*<sp/>1000L)<sp/>+<sp/>MessageDelay);</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageDelay<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEBUG_PRINT(F(&quot;\nAPRS<sp/>message<sp/>sent.<sp/>GPS<sp/>signal<sp/>good.&quot;));</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/><sp/><sp/><sp/>DEBUG_PRINT(F(&quot;\nNo<sp/>APRS<sp/>message<sp/>sent.<sp/>GPS<sp/>signal<sp/>problem.&quot;));</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//}</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//MessageDelay<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="comment">}</highlight></codeline>
<codeline lineno="401"><highlight class="comment"></highlight></codeline>
<codeline lineno="402"><highlight class="comment"></highlight></codeline>
<codeline lineno="403"><highlight class="comment">//<sp/>Function<sp/>to<sp/>broadcast<sp/>your<sp/>location</highlight></codeline>
<codeline lineno="404"><highlight class="comment">void<sp/>test_broadcastLocation(float<sp/>altitude)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/><sp/><sp/><sp/>struct<sp/>PathAddress<sp/>addresses[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{(char<sp/>*)D_CALLSIGN,<sp/>D_CALLSIGN_ID},<sp/><sp/>//<sp/>Destination<sp/>callsign</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{(char<sp/>*)S_CALLSIGN,<sp/>S_CALLSIGN_ID},<sp/><sp/>//<sp/>Source<sp/>callsign</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{(char<sp/>*)NULL,<sp/>0},<sp/>//<sp/>Digi1<sp/>(first<sp/>digi<sp/>in<sp/>the<sp/>chain)</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{(char<sp/>*)NULL,<sp/>0}<sp/><sp/>//<sp/>Digi2<sp/>(second<sp/>digi<sp/>in<sp/>the<sp/>chain)</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/><sp/>//<sp/>If<sp/>above<sp/>5000<sp/>feet<sp/>switch<sp/>to<sp/>a<sp/>single<sp/>hop<sp/>path</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>nAddresses;</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(altitude<sp/>&gt;<sp/>1500)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>APRS<sp/>recomendations<sp/>for<sp/>&gt;<sp/>5000<sp/>feet<sp/>is:</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Path:<sp/>WIDE2-1<sp/>is<sp/>acceptable,<sp/>but<sp/>no<sp/>path<sp/>is<sp/>preferred.</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nAddresses<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[2].callsign<sp/>=<sp/>&quot;WIDE2&quot;;</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[2].ssid<sp/>=<sp/>1;<sp/>//orig<sp/>=<sp/>1<sp/>=====<sp/>0-VIA;1-wide1-1;2wide2-2</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Below<sp/>1500<sp/>meters<sp/>use<sp/>a<sp/>much<sp/>more<sp/>generous<sp/>path<sp/>(assuming<sp/>a<sp/>mobile<sp/>station)</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Path<sp/>is<sp/>&quot;WIDE1-1,WIDE2-2&quot;</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nAddresses<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[2].callsign<sp/>=<sp/>&quot;WIDE1&quot;;</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[2].ssid<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[3].callsign<sp/>=<sp/>&quot;WIDE2&quot;;</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addresses[3].ssid<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="comment"></highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Below<sp/>1500<sp/>meters<sp/>use<sp/>a<sp/>much<sp/>more<sp/>generous<sp/>path<sp/>(assuming<sp/>a<sp/>mobile<sp/>station)</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Path<sp/>is<sp/>&quot;WIDE1-1,WIDE2-2&quot;</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/>//int<sp/>nAddresses<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/>//addresses[2].callsign<sp/>=<sp/>&quot;WIDE1&quot;;</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/>//addresses[2].ssid<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/>//addresses[3].callsign<sp/>=<sp/>&quot;WIDE2&quot;;</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/>//addresses[3].ssid<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="436"><highlight class="comment"></highlight></codeline>
<codeline lineno="437"><highlight class="comment"></highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>For<sp/>debugging<sp/>print<sp/>out<sp/>the<sp/>path</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/><sp/>//Serial.print(&quot;APRS(&quot;);</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/><sp/>//Serial.print(nAddresses);</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Serial.print(&quot;):<sp/>&quot;);</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>for<sp/>(int<sp/>i=0;<sp/>i<sp/>&lt;<sp/>nAddresses;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Serial.print(addresses[i].callsign);</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Serial.print(&apos;-&apos;);</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Serial.print(addresses[i].ssid);</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>if<sp/>(i<sp/>&lt;<sp/>nAddresses-1)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Serial.print(&apos;,&apos;);</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Serial.print(&apos;<sp/>&apos;);</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Serial.print(SYMBOL_TABLE);</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Serial.print(SYMBOL_CHAR);</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Serial.println();</highlight></codeline>
<codeline lineno="454"><highlight class="comment"></highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>dayOfMonth<sp/>=<sp/>gps.GetDay();</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>hour<sp/>=<sp/>gps.GetHour();</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>min<sp/>=<sp/>gps.GetMinute();</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>sec<sp/>=<sp/>gps.GetSecond();</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>lat<sp/>=<sp/>gps.GetFull_Latitude();</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>lon<sp/>=<sp/>gps.GetFull_Longitude();</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/><sp/><sp/><sp/>//float<sp/>altitude<sp/>=<sp/>gps.GetAltitude();</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/><sp/><sp/><sp/>uint16_t<sp/>heading<sp/>=<sp/>00;</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>speed<sp/>=<sp/>gps.GetSpeed();</highlight></codeline>
<codeline lineno="464"><highlight class="comment"></highlight></codeline>
<codeline lineno="465"><highlight class="comment"></highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(gps.GetLatitude());</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(gps.GetLongitude());</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(gps.GetFull_Latitude());</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(gps.GetFull_Longitude());</highlight></codeline>
<codeline lineno="470"><highlight class="comment"></highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>num_whole<sp/>=<sp/>gps.GetLatitude();</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>intpart<sp/>=<sp/>(int)num_whole;</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/><sp/><sp/><sp/>float<sp/>num_dec<sp/>=<sp/>gps.GetFull_Latitude();</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>decpart<sp/>=<sp/>int(num_dec);</highlight></codeline>
<codeline lineno="475"><highlight class="comment"></highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/><sp/>//DEBUG_PRINT(intpart);</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/>//DEBUG_PRINT(decpart);</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>lat_pos<sp/>[40];</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(lat_pos,<sp/>8,<sp/>&quot;%i.%i&quot;,<sp/>intpart,<sp/>decpart);</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(F(&quot;\nAPRS<sp/>Latitude:<sp/>&quot;));</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(lat_pos);</highlight></codeline>
<codeline lineno="482"><highlight class="comment"></highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/>num_whole<sp/>=<sp/>gps.GetLongitude();</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/>intpart<sp/>=<sp/>(int)num_whole;</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/>num_dec<sp/>=<sp/>gps.GetFull_Longitude();</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/>decpart<sp/>=<sp/>int(num_dec);</highlight></codeline>
<codeline lineno="487"><highlight class="comment"></highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/>//DEBUG_PRINT(intpart);</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/>//DEBUG_PRINT(decpart);</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>lon_pos<sp/>[40];</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(lon_pos,<sp/>8,<sp/>&quot;%i.%i&quot;,<sp/>intpart,<sp/>decpart);</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(F(&quot;\nAPRS<sp/>Longitude:&quot;));</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/><sp/><sp/><sp/>DEBUG_PRINT(lon_pos);</highlight></codeline>
<codeline lineno="494"><highlight class="comment"></highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>const<sp/>lat_string<sp/>=<sp/>&quot;&quot;;</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>const<sp/>lon_string<sp/>=<sp/>&quot;&quot;;</highlight></codeline>
<codeline lineno="497"><highlight class="comment"></highlight></codeline>
<codeline lineno="498"><highlight class="comment"></highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/><sp/><sp/><sp/>APRS_Send_with_String(addresses,</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nAddresses,</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dayOfMonth,</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hour,</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min,</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lat_pos,</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lon_pos,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>altitude,<sp/>//<sp/>meters</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heading,</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>speed,</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SYMBOL_TABLE,</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SYMBOL_CHAR,</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comment);</highlight></codeline>
<codeline lineno="512"><highlight class="comment"></highlight></codeline>
<codeline lineno="513"><highlight class="comment"></highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/>delay(50);</highlight></codeline>
<codeline lineno="515"><highlight class="comment"></highlight></codeline>
<codeline lineno="516"><highlight class="comment">//<sp/><sp/>//<sp/>Send<sp/>the<sp/>packet</highlight></codeline>
<codeline lineno="517"><highlight class="comment">//<sp/><sp/>APRS_Send(addresses,<sp/>nAddresses</highlight></codeline>
<codeline lineno="518"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>,gps.day,<sp/>gps.hour,<sp/>gps.minute</highlight></codeline>
<codeline lineno="519"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>,gps.latitude,<sp/>gps.longitude<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="520"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>,gps.altitude<sp/>//<sp/>meters</highlight></codeline>
<codeline lineno="521"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>,gps.heading</highlight></codeline>
<codeline lineno="522"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>,gps.speed</highlight></codeline>
<codeline lineno="523"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>,SYMBOL_TABLE</highlight></codeline>
<codeline lineno="524"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>,SYMBOL_CHAR</highlight></codeline>
<codeline lineno="525"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>,comment);</highlight></codeline>
<codeline lineno="526"><highlight class="comment">}</highlight></codeline>
<codeline lineno="527"><highlight class="comment"></highlight></codeline>
<codeline lineno="528"><highlight class="comment"></highlight></codeline>
<codeline lineno="529"><highlight class="comment">void<sp/>APRS_Send_with_String(const<sp/>PathAddress<sp/>*<sp/>const<sp/>paths,<sp/>const<sp/>int<sp/>nPaths,</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint8_t<sp/>dayOfMonth,<sp/>const<sp/>uint8_t<sp/>hour,<sp/>const<sp/>uint8_t<sp/>min,</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>const<sp/>lat_string,</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>char*<sp/>const<sp/>lon_string,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>altitude,<sp/>//<sp/>meters</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint16_t<sp/>heading,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>speed,<sp/>const<sp/>char<sp/>symbolTableIndicator,<sp/>const<sp/>char<sp/>symbol,</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>char<sp/>*<sp/>const<sp/>comment)</highlight></codeline>
<codeline lineno="537"><highlight class="comment">{</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>buf[MAXSENDBUFFER];</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>temp[12];</highlight></codeline>
<codeline lineno="540"><highlight class="comment"></highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_initBuffer(buf,<sp/>sizeof(buf));</highlight></codeline>
<codeline lineno="542"><highlight class="comment"></highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_header(paths,<sp/>nPaths,<sp/>preambleFlags);</highlight></codeline>
<codeline lineno="544"><highlight class="comment"></highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(&apos;/&apos;);<sp/>//<sp/>Report<sp/>w/<sp/>timestamp,<sp/>no<sp/>APRS<sp/>messaging.<sp/>$<sp/>=<sp/>NMEA<sp/>raw<sp/>data</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%02u%02u%02uz&quot;,<sp/>(unsigned<sp/>int)<sp/>dayOfMonth,</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)<sp/>hour,</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)<sp/>min);</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);</highlight></codeline>
<codeline lineno="550"><highlight class="comment"></highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/><sp/>//latToStr(temp,<sp/>sizeof(temp),<sp/>lat);</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/>//ax25_send_string(temp);<sp/><sp/><sp/>//Lat:</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/><sp/><sp/>//snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%03u&quot;,<sp/>lat_string);</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(lat_string);</highlight></codeline>
<codeline lineno="555"><highlight class="comment"></highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbolTableIndicator);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Which<sp/>Symbol<sp/>table<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="557"><highlight class="comment"></highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/><sp/><sp/><sp/>//lonToStr(temp,<sp/>sizeof(temp),<sp/>lon);</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/><sp/>//ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/>//<sp/>Lon:<sp/>000deg<sp/>and<sp/>25.80<sp/>min</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/><sp/>//snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%03u&quot;,<sp/>lon_string);</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(lon_string);<sp/><sp/><sp/><sp/><sp/>//<sp/>Lon:<sp/>000deg<sp/>and<sp/>25.80<sp/>min</highlight></codeline>
<codeline lineno="562"><highlight class="comment"></highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbol);<sp/><sp/>//<sp/>The<sp/>symbol</highlight></codeline>
<codeline lineno="564"><highlight class="comment"></highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%03u&quot;,<sp/>heading);</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Heading<sp/>(degrees)</highlight></codeline>
<codeline lineno="567"><highlight class="comment"></highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(&apos;/&apos;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>and</highlight></codeline>
<codeline lineno="569"><highlight class="comment"></highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%03d&quot;,<sp/>(unsigned<sp/>int)<sp/>(speed<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>speed<sp/>(knots)</highlight></codeline>
<codeline lineno="572"><highlight class="comment"></highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(&quot;/A=&quot;);<sp/>//<sp/>Altitude<sp/>(feet).<sp/>Goes<sp/>anywhere<sp/>in<sp/>the<sp/>comment<sp/>area</highlight></codeline>
<codeline lineno="574"><highlight class="comment"></highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%06ld&quot;,<sp/>(long)<sp/>(altitude<sp/>/<sp/>0.3048));<sp/>//<sp/>10000<sp/>ft<sp/>=<sp/>3048<sp/>m</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);</highlight></codeline>
<codeline lineno="577"><highlight class="comment"></highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(comment);<sp/><sp/><sp/><sp/><sp/>//<sp/>Comment</highlight></codeline>
<codeline lineno="579"><highlight class="comment"></highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_footer();</highlight></codeline>
<codeline lineno="581"><highlight class="comment"></highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Make<sp/>sure<sp/>all<sp/>Serial<sp/>data<sp/>(which<sp/>is<sp/>based<sp/>on<sp/>interrupts)<sp/>is<sp/>done<sp/>before<sp/>you<sp/>start<sp/>sending.</highlight></codeline>
<codeline lineno="583"><highlight class="comment"></highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>the<sp/>buffer<sp/>of<sp/>bits<sp/>we<sp/>are<sp/>going<sp/>to<sp/>send</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_set_buffer(buf,<sp/>ax25_getPacketSize());</highlight></codeline>
<codeline lineno="586"><highlight class="comment"></highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Wait<sp/>until<sp/>all<sp/>characters<sp/>are<sp/>sent</highlight></codeline>
<codeline lineno="588"><highlight class="comment"></highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>OK,<sp/>no<sp/>more<sp/>operations<sp/>until<sp/>this<sp/>is<sp/>done.</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_start();</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>(afsk_busy())</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="593"><highlight class="comment"></highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/><sp/><sp/>logBuffer(buf,<sp/>ax25_getPacketSize(),<sp/>dayOfMonth,<sp/>hour,<sp/>min);</highlight></codeline>
<codeline lineno="595"><highlight class="comment">}</highlight></codeline>
<codeline lineno="596"><highlight class="comment"></highlight></codeline>
<codeline lineno="597"><highlight class="comment"></highlight></codeline>
<codeline lineno="598"><highlight class="comment"></highlight></codeline>
<codeline lineno="599"><highlight class="comment"></highlight></codeline>
<codeline lineno="600"><highlight class="comment">char<sp/>*ax25_base91enc(char<sp/>*s,<sp/>uint8_t<sp/>n,<sp/>uint32_t<sp/>v)</highlight></codeline>
<codeline lineno="601"><highlight class="comment">{</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Creates<sp/>a<sp/>Base-91<sp/>representation<sp/>of<sp/>the<sp/>value<sp/>in<sp/>v<sp/>in<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>pointed<sp/>to<sp/>by<sp/>s,<sp/>n-characters<sp/>long.<sp/>String<sp/>length<sp/>should<sp/>be<sp/>n+1.</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/><sp/><sp/><sp/>for(s<sp/>+=<sp/>n,<sp/>*s<sp/>=<sp/>&apos;\0&apos;;<sp/>n;<sp/>n--)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(--s)<sp/>=<sp/>v<sp/>%<sp/>91<sp/>+<sp/>33;</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>/=<sp/>91;</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="comment"></highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return(s);</highlight></codeline>
<codeline lineno="610"><highlight class="comment">}</highlight></codeline>
<codeline lineno="611"><highlight class="comment"></highlight></codeline>
<codeline lineno="612"><highlight class="comment">//<sp/>Convert<sp/>latitude<sp/>from<sp/>a<sp/>float<sp/>to<sp/>a<sp/>string</highlight></codeline>
<codeline lineno="613"><highlight class="comment">void<sp/>latToStr(char<sp/>*<sp/>const<sp/>s,<sp/>const<sp/>int<sp/>size,<sp/>float<sp/>lat)</highlight></codeline>
<codeline lineno="614"><highlight class="comment">{</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>hemisphere<sp/>=<sp/>&apos;N&apos;;</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(lat<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lat<sp/>=<sp/>-lat;</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemisphere<sp/>=<sp/>&apos;S&apos;;</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>int<sp/>deg<sp/>=<sp/>(int)<sp/>lat;</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/><sp/><sp/><sp/>lat<sp/>=<sp/>(lat<sp/>-<sp/>(float)<sp/>deg)<sp/>*<sp/>60.0f;</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>int<sp/>min<sp/>=<sp/>(int)<sp/>lat;</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/>lat<sp/>=<sp/>(lat<sp/>-<sp/>(float)<sp/>min)<sp/>*<sp/>100.0f;</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>int<sp/>minTenths<sp/>=<sp/>(int)<sp/>(lat<sp/>+<sp/>0.5);<sp/>//<sp/>Round<sp/>the<sp/>tenths</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(s,<sp/>size,<sp/>&quot;%02d%02d.%02d%c&quot;,<sp/>deg,<sp/>min,<sp/>minTenths,<sp/>hemisphere);</highlight></codeline>
<codeline lineno="626"><highlight class="comment">}</highlight></codeline>
<codeline lineno="627"><highlight class="comment"></highlight></codeline>
<codeline lineno="628"><highlight class="comment"></highlight></codeline>
<codeline lineno="629"><highlight class="comment">//<sp/>Convert<sp/>longitude<sp/>from<sp/>a<sp/>float<sp/>to<sp/>a<sp/>string</highlight></codeline>
<codeline lineno="630"><highlight class="comment">void<sp/>lonToStr(char<sp/>*<sp/>const<sp/>s,<sp/>const<sp/>int<sp/>size,<sp/>float<sp/>lon)</highlight></codeline>
<codeline lineno="631"><highlight class="comment">{</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>hemisphere<sp/>=<sp/>&apos;E&apos;;</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(lon<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lon<sp/>=<sp/>-lon;</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hemisphere<sp/>=<sp/>&apos;W&apos;;</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>int<sp/>deg<sp/>=<sp/>(int)<sp/>lon;</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/><sp/>lon<sp/>=<sp/>(lon<sp/>-<sp/>(float)<sp/>deg)<sp/>*<sp/>60.0f;</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>int<sp/>min<sp/>=<sp/>(int)<sp/>lon;</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/><sp/>lon<sp/>=<sp/>(lon<sp/>-<sp/>(float)<sp/>min)<sp/>*<sp/>100.0f;</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>int<sp/>minTenths<sp/>=<sp/>(int)<sp/>(lon<sp/>+<sp/>0.5);<sp/>//<sp/>Round<sp/>the<sp/>tenths</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(s,<sp/>size,<sp/>&quot;%03d%02d.%02d%c&quot;,<sp/>deg,<sp/>min,<sp/>minTenths,<sp/>hemisphere);</highlight></codeline>
<codeline lineno="643"><highlight class="comment">}</highlight></codeline>
<codeline lineno="644"><highlight class="comment"></highlight></codeline>
<codeline lineno="645"><highlight class="comment"></highlight></codeline>
<codeline lineno="646"><highlight class="comment">//<sp/>Dump<sp/>out<sp/>the<sp/>AX25<sp/>packet<sp/>in<sp/>a<sp/>semi-readable<sp/>way</highlight></codeline>
<codeline lineno="647"><highlight class="comment">//<sp/>Note,<sp/>the<sp/>end<sp/>of<sp/>header<sp/>and<sp/>CRC<sp/>are<sp/>sent<sp/>as<sp/>ASCII<sp/>characters,<sp/>which<sp/>they<sp/>aren&apos;t</highlight></codeline>
<codeline lineno="648"><highlight class="comment">void<sp/>logBuffer(const<sp/>uint8_t<sp/>*<sp/>const<sp/>buf,<sp/>const<sp/>int<sp/>bitsSent,</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint8_t<sp/>dayOfMonth,<sp/>const<sp/>uint8_t<sp/>hour,<sp/>const<sp/>uint8_t<sp/>min)</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.printf(&quot;Bits<sp/>in<sp/>packet<sp/>%d:<sp/>&quot;,<sp/>bitsSent);</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(dayOfMonth);</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(&apos;,&apos;);</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(hour);</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(&apos;,&apos;);</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(min);</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.print(&apos;,&apos;);</highlight></codeline>
<codeline lineno="658"><highlight class="comment"></highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>frameState<sp/>=<sp/>0;<sp/>//<sp/>0-No<sp/>start,<sp/>1-start,<sp/>2-in<sp/>header,<sp/>3-In<sp/>info</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>bSoFar<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>gotBit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>numOnes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>onBit<sp/>=<sp/>0;<sp/>onBit<sp/>&lt;<sp/>bitsSent;<sp/>onBit++)<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>bit<sp/>=<sp/>buf[onBit<sp/>&gt;&gt;<sp/>3]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>(onBit<sp/>&amp;<sp/>7));</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(numOnes<sp/>==<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>This<sp/>may<sp/>be<sp/>a<sp/>0<sp/>due<sp/>to<sp/>bit<sp/>stuffing</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(bit)<sp/>{<sp/>//<sp/>Maybe<sp/>it&apos;s<sp/>a<sp/>0x7e</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onBit++;</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit<sp/>=<sp/>buf[onBit<sp/>&gt;&gt;<sp/>3]<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>(onBit<sp/>&amp;<sp/>7));</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gotBit<sp/>==<sp/>6<sp/>&amp;&amp;<sp/>bSoFar<sp/>==<sp/>0x3e<sp/>&amp;&amp;<sp/>!bit)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Got<sp/>0x7e<sp/>frame<sp/>start/end</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(frameState<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameState<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(&apos;[&apos;);</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(frameState<sp/>==<sp/>3<sp/>||<sp/>frameState<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameState<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(&apos;]&apos;);</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bSoFar<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotBit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(&apos;X&apos;);<sp/>//<sp/>Error</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOnes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>continue;</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(bit)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>the<sp/>one<sp/>bit</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bSoFar<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>gotBit);</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOnes++;</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numOnes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotBit++;</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(gotBit<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Got<sp/>a<sp/>byte;</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(frameState<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameState<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(frameState<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>bSoFar<sp/>==<sp/>0xf0)<sp/>{<sp/>//<sp/>0xf0<sp/>is<sp/>the<sp/>last<sp/>byte<sp/>of<sp/>the<sp/>header</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameState<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(frameState<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>header</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print((char)<sp/>(bSoFar<sp/>&gt;&gt;<sp/>1));</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>In<sp/>info</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print((char)<sp/>bSoFar);</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bSoFar<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotBit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.println();</highlight></codeline>
<codeline lineno="717"><highlight class="comment">}</highlight></codeline>
<codeline lineno="718"><highlight class="comment"></highlight></codeline>
<codeline lineno="719"><highlight class="comment"></highlight></codeline>
<codeline lineno="720"><highlight class="comment">void<sp/>APRS_Setup(const<sp/>uint16_t<sp/>p_preambleFlags,<sp/>const<sp/>uint8_t<sp/>pttPin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>uint16_t<sp/>pttDelay,<sp/>const<sp/>uint32_t<sp/>toneLength,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>uint32_t<sp/>silenceLength)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="comment"></highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/><sp/><sp/><sp/>preambleFlags<sp/>=<sp/>p_preambleFlags;</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_setup(pttPin,<sp/>pttDelay,<sp/>toneLength,<sp/>silenceLength);</highlight></codeline>
<codeline lineno="726"><highlight class="comment"></highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Do<sp/>not<sp/>start<sp/>until<sp/>we<sp/>get<sp/>a<sp/>valid<sp/>time<sp/>reference<sp/>--<sp/>for<sp/>slotted<sp/>transmissions.</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/><sp/><sp/><sp/>transmission_timer<sp/>=<sp/>millis()<sp/>+<sp/>(1000L<sp/>*<sp/>APRS_SLOT);</highlight></codeline>
<codeline lineno="729"><highlight class="comment">}</highlight></codeline>
<codeline lineno="730"><highlight class="comment"></highlight></codeline>
<codeline lineno="731"><highlight class="comment"></highlight></codeline>
<codeline lineno="732"><highlight class="comment">//<sp/>This<sp/>can<sp/>operate<sp/>in<sp/>two<sp/>modes,<sp/>PTT<sp/>or<sp/>VOX</highlight></codeline>
<codeline lineno="733"><highlight class="comment">//<sp/>In<sp/>VOX<sp/>mode<sp/>send<sp/>a<sp/>toneLength<sp/>and<sp/>silenceLength.<sp/>The<sp/>audible<sp/>tone<sp/>will<sp/>be<sp/>sent<sp/>for<sp/>that</highlight></codeline>
<codeline lineno="734"><highlight class="comment">//<sp/>many<sp/>milliseconds<sp/>to<sp/>open<sp/>up<sp/>VOX,<sp/>and<sp/>then<sp/>that<sp/>many<sp/>MS<sp/>of<sp/>silence,<sp/>then<sp/>the<sp/>packet<sp/>will</highlight></codeline>
<codeline lineno="735"><highlight class="comment">//<sp/>begin.</highlight></codeline>
<codeline lineno="736"><highlight class="comment">//<sp/>In<sp/>PTT<sp/>mode<sp/>the<sp/>pin<sp/>given<sp/>will<sp/>be<sp/>raised<sp/>high,<sp/>and<sp/>then<sp/>PTT_DELAY<sp/>ms<sp/>later,<sp/>the<sp/>packet<sp/>will</highlight></codeline>
<codeline lineno="737"><highlight class="comment">//<sp/>begin</highlight></codeline>
<codeline lineno="738"><highlight class="comment">void<sp/>APRS_Send(const<sp/>PathAddress<sp/>*<sp/>const<sp/>paths,<sp/>const<sp/>int<sp/>nPaths,</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint8_t<sp/>dayOfMonth,<sp/>const<sp/>uint8_t<sp/>hour,<sp/>const<sp/>uint8_t<sp/>min,</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>lat,</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>lon,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>altitude,<sp/>//<sp/>meters</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint16_t<sp/>heading,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>speed,<sp/>const<sp/>char<sp/>symbolTableIndicator,<sp/>const<sp/>char<sp/>symbol,</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>char<sp/>*<sp/>const<sp/>comment)</highlight></codeline>
<codeline lineno="746"><highlight class="comment">{</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>buf[MAXSENDBUFFER];</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>temp[12];</highlight></codeline>
<codeline lineno="749"><highlight class="comment"></highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_initBuffer(buf,<sp/>sizeof(buf));</highlight></codeline>
<codeline lineno="751"><highlight class="comment"></highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_header(paths,<sp/>nPaths,<sp/>preambleFlags);</highlight></codeline>
<codeline lineno="753"><highlight class="comment"></highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(&apos;/&apos;);<sp/>//<sp/>Report<sp/>w/<sp/>timestamp,<sp/>no<sp/>APRS<sp/>messaging.<sp/>$<sp/>=<sp/>NMEA<sp/>raw<sp/>data</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%02u%02u%02uz&quot;,<sp/>(unsigned<sp/>int)<sp/>dayOfMonth,</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)<sp/>hour,</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)<sp/>min);</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);</highlight></codeline>
<codeline lineno="759"><highlight class="comment"></highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/><sp/><sp/><sp/>latToStr(temp,<sp/>sizeof(temp),<sp/>lat);</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Lat:</highlight></codeline>
<codeline lineno="762"><highlight class="comment"></highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbolTableIndicator);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Which<sp/>Symbol<sp/>table<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="764"><highlight class="comment"></highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/><sp/><sp/><sp/>lonToStr(temp,<sp/>sizeof(temp),<sp/>lon);</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/>//<sp/>Lon:<sp/>000deg<sp/>and<sp/>25.80<sp/>min</highlight></codeline>
<codeline lineno="767"><highlight class="comment"></highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbol);<sp/><sp/>//<sp/>The<sp/>symbol</highlight></codeline>
<codeline lineno="769"><highlight class="comment"></highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%03u&quot;,<sp/>heading);</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Heading<sp/>(degrees)</highlight></codeline>
<codeline lineno="772"><highlight class="comment"></highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(&apos;/&apos;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>and</highlight></codeline>
<codeline lineno="774"><highlight class="comment"></highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%03d&quot;,<sp/>(unsigned<sp/>int)<sp/>(speed<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>speed<sp/>(knots)</highlight></codeline>
<codeline lineno="777"><highlight class="comment"></highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(&quot;/A=&quot;);<sp/>//<sp/>Altitude<sp/>(feet).<sp/>Goes<sp/>anywhere<sp/>in<sp/>the<sp/>comment<sp/>area</highlight></codeline>
<codeline lineno="779"><highlight class="comment"></highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%06ld&quot;,<sp/>(long)<sp/>(altitude<sp/>/<sp/>0.3048));<sp/>//<sp/>10000<sp/>ft<sp/>=<sp/>3048<sp/>m</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);</highlight></codeline>
<codeline lineno="782"><highlight class="comment"></highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(comment);<sp/><sp/><sp/><sp/><sp/>//<sp/>Comment</highlight></codeline>
<codeline lineno="784"><highlight class="comment"></highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_footer();</highlight></codeline>
<codeline lineno="786"><highlight class="comment"></highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Make<sp/>sure<sp/>all<sp/>Serial<sp/>data<sp/>(which<sp/>is<sp/>based<sp/>on<sp/>interrupts)<sp/>is<sp/>done<sp/>before<sp/>you<sp/>start<sp/>sending.</highlight></codeline>
<codeline lineno="788"><highlight class="comment"></highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>the<sp/>buffer<sp/>of<sp/>bits<sp/>we<sp/>are<sp/>going<sp/>to<sp/>send</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_set_buffer(buf,<sp/>ax25_getPacketSize());</highlight></codeline>
<codeline lineno="791"><highlight class="comment"></highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Wait<sp/>until<sp/>all<sp/>characters<sp/>are<sp/>sent</highlight></codeline>
<codeline lineno="793"><highlight class="comment"></highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>OK,<sp/>no<sp/>more<sp/>operations<sp/>until<sp/>this<sp/>is<sp/>done.</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_start();</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>(afsk_busy())</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="798"><highlight class="comment"></highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/>logBuffer(buf,<sp/>ax25_getPacketSize(),<sp/>dayOfMonth,<sp/>hour,<sp/>min);</highlight></codeline>
<codeline lineno="800"><highlight class="comment">}</highlight></codeline>
<codeline lineno="801"><highlight class="comment"></highlight></codeline>
<codeline lineno="802"><highlight class="comment"></highlight></codeline>
<codeline lineno="803"><highlight class="comment">void<sp/>APRS_Send_modified(const<sp/>PathAddress<sp/>*<sp/>const<sp/>paths,<sp/>const<sp/>int<sp/>nPaths,</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint8_t<sp/>dayOfMonth,<sp/>const<sp/>uint8_t<sp/>hour,<sp/>const<sp/>uint8_t<sp/>min,</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>lat,</highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>lon,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>altitude,<sp/>//<sp/>meters</highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint16_t<sp/>heading,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>speed,<sp/>const<sp/>char<sp/>symbolTableIndicator,<sp/>const<sp/>char<sp/>symbol,</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>char<sp/>*<sp/>const<sp/>comment)</highlight></codeline>
<codeline lineno="811"><highlight class="comment">{</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>buf[MAXSENDBUFFER];</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>temp[12];</highlight></codeline>
<codeline lineno="814"><highlight class="comment"></highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_initBuffer(buf,<sp/>sizeof(buf));</highlight></codeline>
<codeline lineno="816"><highlight class="comment"></highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_header(paths,<sp/>nPaths,<sp/>preambleFlags);</highlight></codeline>
<codeline lineno="818"><highlight class="comment"></highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(&apos;/&apos;);<sp/>//<sp/>Report<sp/>w/<sp/>timestamp,<sp/>no<sp/>APRS<sp/>messaging.<sp/>$<sp/>=<sp/>NMEA<sp/>raw<sp/>data</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%02u%02u%02uz&quot;,<sp/>(unsigned<sp/>int)<sp/>dayOfMonth,</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)<sp/>hour,</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)<sp/>min);</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);</highlight></codeline>
<codeline lineno="824"><highlight class="comment"></highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/><sp/><sp/><sp/>latToStr(temp,<sp/>sizeof(temp),<sp/>lat);</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Lat:</highlight></codeline>
<codeline lineno="827"><highlight class="comment"></highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbolTableIndicator);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Which<sp/>Symbol<sp/>table<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="829"><highlight class="comment"></highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/><sp/><sp/><sp/>lonToStr(temp,<sp/>sizeof(temp),<sp/>lon);</highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/>//<sp/>Lon:<sp/>000deg<sp/>and<sp/>25.80<sp/>min</highlight></codeline>
<codeline lineno="832"><highlight class="comment"></highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbol);<sp/><sp/>//<sp/>The<sp/>symbol</highlight></codeline>
<codeline lineno="834"><highlight class="comment"></highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%03u&quot;,<sp/>heading);</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Heading<sp/>(degrees)</highlight></codeline>
<codeline lineno="837"><highlight class="comment"></highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(&apos;/&apos;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>and</highlight></codeline>
<codeline lineno="839"><highlight class="comment"></highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%03d&quot;,<sp/>(unsigned<sp/>int)<sp/>(speed<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>speed<sp/>(knots)</highlight></codeline>
<codeline lineno="842"><highlight class="comment"></highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(&quot;/A=&quot;);<sp/>//<sp/>Altitude<sp/>(feet).<sp/>Goes<sp/>anywhere<sp/>in<sp/>the<sp/>comment<sp/>area</highlight></codeline>
<codeline lineno="844"><highlight class="comment"></highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%06ld&quot;,<sp/>(long)<sp/>(altitude<sp/>/<sp/>0.3048));<sp/>//<sp/>10000<sp/>ft<sp/>=<sp/>3048<sp/>m</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);</highlight></codeline>
<codeline lineno="847"><highlight class="comment"></highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(comment);<sp/><sp/><sp/><sp/><sp/>//<sp/>Comment</highlight></codeline>
<codeline lineno="849"><highlight class="comment"></highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_footer();</highlight></codeline>
<codeline lineno="851"><highlight class="comment"></highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Make<sp/>sure<sp/>all<sp/>Serial<sp/>data<sp/>(which<sp/>is<sp/>based<sp/>on<sp/>interrupts)<sp/>is<sp/>done<sp/>before<sp/>you<sp/>start<sp/>sending.</highlight></codeline>
<codeline lineno="853"><highlight class="comment"></highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>the<sp/>buffer<sp/>of<sp/>bits<sp/>we<sp/>are<sp/>going<sp/>to<sp/>send</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_set_buffer(buf,<sp/>ax25_getPacketSize());</highlight></codeline>
<codeline lineno="856"><highlight class="comment"></highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Wait<sp/>until<sp/>all<sp/>characters<sp/>are<sp/>sent</highlight></codeline>
<codeline lineno="858"><highlight class="comment"></highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>OK,<sp/>no<sp/>more<sp/>operations<sp/>until<sp/>this<sp/>is<sp/>done.</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_start();</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>(afsk_busy())</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="863"><highlight class="comment"></highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/><sp/><sp/><sp/>logBuffer(buf,<sp/>ax25_getPacketSize(),<sp/>dayOfMonth,<sp/>hour,<sp/>min);</highlight></codeline>
<codeline lineno="865"><highlight class="comment">}</highlight></codeline>
<codeline lineno="866"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="comment">//<sp/>void<sp/>APRS_Send()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight><highlight class="comment">//<sp/>char<sp/>temp[12];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Temperature<sp/>(int/ext)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="comment">//<sp/>const<sp/>struct<sp/>s_address<sp/>addresses[]<sp/>=<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{D_CALLSIGN,<sp/>D_CALLSIGN_ID},<sp/><sp/>//<sp/>Destination<sp/>callsign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{S_CALLSIGN,<sp/>S_CALLSIGN_ID},<sp/><sp/>//<sp/>Source<sp/>callsign<sp/>(-11<sp/>=<sp/>balloon,<sp/>-9<sp/>=<sp/>car)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>DIGI_PATH1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{DIGI_PATH1,<sp/>DIGI_PATH1_TTL},<sp/>//<sp/>Digi1<sp/>(first<sp/>digi<sp/>in<sp/>the<sp/>chain)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#ifdef<sp/>DIGI_PATH2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{DIGI_PATH2,<sp/>DIGI_PATH2_TTL},<sp/>//<sp/>Digi2<sp/>(second<sp/>digi<sp/>in<sp/>the<sp/>chain)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_header(addresses,<sp/>sizeof(addresses)/sizeof(s_address));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_byte(&apos;/&apos;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Report<sp/>w/<sp/>timestamp,<sp/>no<sp/>APRS<sp/>messaging.<sp/>$<sp/>=<sp/>NMEA<sp/>raw<sp/>data</highlight></codeline>
<codeline lineno="888"><highlight class="comment"></highlight><highlight class="comment">//<sp/>ax25_send_string(gps_time);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>170915<sp/>=<sp/>17h:09m:15s<sp/>zulu<sp/>(not<sp/>allowed<sp/>in<sp/>Status<sp/>Reports)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_byte(&apos;h&apos;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(gps_aprs_lat);<sp/><sp/><sp/>//<sp/>Lat:<sp/>38deg<sp/>and<sp/>22.20<sp/>min<sp/>(.20<sp/>are<sp/>NOT<sp/>seconds,<sp/>but<sp/>1/100th<sp/>of<sp/>minutes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_byte(&apos;/&apos;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Symbol<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(gps_aprs_lon);<sp/><sp/><sp/>//<sp/>Lon:<sp/>000deg<sp/>and<sp/>25.80<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_byte(&apos;O&apos;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Symbol:<sp/>O=balloon,<sp/>-=QTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="comment">//<sp/>snprintf(temp,<sp/>4,<sp/>&quot;%03d&quot;,<sp/>(int)(gps_course<sp/>+<sp/>0.5));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Course<sp/>(degrees)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_byte(&apos;/&apos;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight><highlight class="comment">//<sp/>snprintf(temp,<sp/>4,<sp/>&quot;%03d&quot;,<sp/>(int)(gps_speed<sp/>+<sp/>0.5));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>speed<sp/>(knots)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(&quot;/A=&quot;);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Altitude<sp/>(feet).<sp/>Goes<sp/>anywhere<sp/>in<sp/>the<sp/>comment<sp/>area</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="comment">//<sp/>snprintf(temp,<sp/>7,<sp/>&quot;%06ld&quot;,<sp/>(long)(meters_to_feet(gps_altitude)<sp/>+<sp/>0.5));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(temp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(&quot;/Ti=&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="comment">//<sp/>snprintf(temp,<sp/>6,<sp/>&quot;%d&quot;,<sp/>sensors_int_lm60());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(temp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(&quot;/Te=&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">//<sp/>snprintf(temp,<sp/>6,<sp/>&quot;%d&quot;,<sp/>sensors_ext_lm60());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(temp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(&quot;/V=&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment">//<sp/>snprintf(temp,<sp/>6,<sp/>&quot;%d&quot;,<sp/>sensors_vin());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(temp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_byte(&apos;<sp/>&apos;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_string(APRS_COMMENT);<sp/><sp/><sp/>//<sp/>Comment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_send_footer();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ax25_flush_frame();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Tell<sp/>the<sp/>modem<sp/>to<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="919"><highlight class="comment">void<sp/>APRS_Send_gps1(const<sp/>PathAddress<sp/>*<sp/>const<sp/>paths,<sp/>const<sp/>int<sp/>nPaths,</highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint8_t<sp/>dayOfMonth,<sp/>const<sp/>uint8_t<sp/>hour,<sp/>const<sp/>uint8_t<sp/>min,<sp/>const<sp/>uint8_t<sp/>sec,</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>lat,</highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>lon,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>altitude,<sp/>//<sp/>meters</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint16_t<sp/>heading,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="925"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>speed,<sp/>const<sp/>char<sp/>symbolTableIndicator,<sp/>const<sp/>char<sp/>symbol,</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>char<sp/>*<sp/>const<sp/>comment)</highlight></codeline>
<codeline lineno="927"><highlight class="comment">{</highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>buf[MAXSENDBUFFER];</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>temp[12];</highlight></codeline>
<codeline lineno="930"><highlight class="comment"></highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_initBuffer(buf,<sp/>sizeof(buf));</highlight></codeline>
<codeline lineno="932"><highlight class="comment"></highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_header(paths,<sp/>nPaths,<sp/>preambleFlags);</highlight></codeline>
<codeline lineno="934"><highlight class="comment"></highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(&apos;!&apos;);<sp/>//<sp/>Report<sp/>w/<sp/>timestamp,<sp/>no<sp/>APRS<sp/>messaging.<sp/>$<sp/>=<sp/>NMEA<sp/>raw<sp/>data</highlight></codeline>
<codeline lineno="936"><highlight class="comment"></highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/><sp/><sp/><sp/>latToStr(temp,<sp/>sizeof(temp),<sp/>lat);</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Lat:</highlight></codeline>
<codeline lineno="939"><highlight class="comment"></highlight></codeline>
<codeline lineno="940"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbolTableIndicator);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Which<sp/>Symbol<sp/>table<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="941"><highlight class="comment"></highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/><sp/><sp/><sp/>lonToStr(temp,<sp/>sizeof(temp),<sp/>lon);</highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/>//<sp/>Lon:<sp/>000deg<sp/>and<sp/>25.80<sp/>min</highlight></codeline>
<codeline lineno="944"><highlight class="comment"></highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbol);<sp/><sp/>//<sp/>The<sp/>symbol</highlight></codeline>
<codeline lineno="946"><highlight class="comment"></highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(comment);<sp/><sp/><sp/><sp/><sp/>//<sp/>Comment</highlight></codeline>
<codeline lineno="948"><highlight class="comment"></highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_footer();</highlight></codeline>
<codeline lineno="950"><highlight class="comment"></highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Make<sp/>sure<sp/>all<sp/>Serial<sp/>data<sp/>(which<sp/>is<sp/>based<sp/>on<sp/>interrupts)<sp/>is<sp/>done<sp/>before<sp/>you<sp/>start<sp/>sending.</highlight></codeline>
<codeline lineno="952"><highlight class="comment"></highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>the<sp/>buffer<sp/>of<sp/>bits<sp/>we<sp/>are<sp/>going<sp/>to<sp/>send</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_set_buffer(buf,<sp/>ax25_getPacketSize());</highlight></codeline>
<codeline lineno="955"><highlight class="comment"></highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Wait<sp/>until<sp/>all<sp/>characters<sp/>are<sp/>sent</highlight></codeline>
<codeline lineno="957"><highlight class="comment"></highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>OK,<sp/>no<sp/>more<sp/>operations<sp/>until<sp/>this<sp/>is<sp/>done.</highlight></codeline>
<codeline lineno="959"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_start();</highlight></codeline>
<codeline lineno="960"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>(afsk_busy())</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="962"><highlight class="comment"></highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/><sp/><sp/><sp/>logBuffer(buf,<sp/>ax25_getPacketSize(),<sp/>dayOfMonth,<sp/>hour,<sp/>min);</highlight></codeline>
<codeline lineno="964"><highlight class="comment">}</highlight></codeline>
<codeline lineno="965"><highlight class="comment"></highlight></codeline>
<codeline lineno="966"><highlight class="comment">void<sp/>APRS_Send_gpsshort(const<sp/>PathAddress<sp/>*<sp/>const<sp/>paths,<sp/>const<sp/>int<sp/>nPaths,</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint8_t<sp/>dayOfMonth,<sp/>const<sp/>uint8_t<sp/>hour,<sp/>const<sp/>uint8_t<sp/>min,<sp/>const<sp/>uint8_t<sp/>sec,</highlight></codeline>
<codeline lineno="968"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>lat,</highlight></codeline>
<codeline lineno="969"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>lon,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>altitude,<sp/>//<sp/>meters</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint16_t<sp/>heading,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>speed,<sp/>const<sp/>char<sp/>symbolTableIndicator,<sp/>const<sp/>char<sp/>symbol,</highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>char<sp/>*<sp/>const<sp/>comment)</highlight></codeline>
<codeline lineno="974"><highlight class="comment">{</highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>buf[MAXSENDBUFFER];</highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>temp[12];</highlight></codeline>
<codeline lineno="977"><highlight class="comment"></highlight></codeline>
<codeline lineno="978"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_initBuffer(buf,<sp/>sizeof(buf));</highlight></codeline>
<codeline lineno="979"><highlight class="comment"></highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_header(paths,<sp/>nPaths,<sp/>preambleFlags);</highlight></codeline>
<codeline lineno="981"><highlight class="comment"></highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(&apos;!&apos;);<sp/>//<sp/>Report<sp/>w/<sp/>timestamp,<sp/>no<sp/>APRS<sp/>messaging.<sp/>$<sp/>=<sp/>NMEA<sp/>raw<sp/>data</highlight></codeline>
<codeline lineno="983"><highlight class="comment"></highlight></codeline>
<codeline lineno="984"><highlight class="comment"><sp/><sp/><sp/><sp/>latToStr(temp,<sp/>sizeof(temp),<sp/>lat);</highlight></codeline>
<codeline lineno="985"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Lat:</highlight></codeline>
<codeline lineno="986"><highlight class="comment"></highlight></codeline>
<codeline lineno="987"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbolTableIndicator);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Which<sp/>Symbol<sp/>table<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="988"><highlight class="comment"></highlight></codeline>
<codeline lineno="989"><highlight class="comment"><sp/><sp/><sp/><sp/>lonToStr(temp,<sp/>sizeof(temp),<sp/>lon);</highlight></codeline>
<codeline lineno="990"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/>//<sp/>Lon:<sp/>000deg<sp/>and<sp/>25.80<sp/>min</highlight></codeline>
<codeline lineno="991"><highlight class="comment"></highlight></codeline>
<codeline lineno="992"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbol);<sp/><sp/>//<sp/>The<sp/>symbol</highlight></codeline>
<codeline lineno="993"><highlight class="comment"></highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_footer();</highlight></codeline>
<codeline lineno="995"><highlight class="comment"></highlight></codeline>
<codeline lineno="996"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Make<sp/>sure<sp/>all<sp/>Serial<sp/>data<sp/>(which<sp/>is<sp/>based<sp/>on<sp/>interrupts)<sp/>is<sp/>done<sp/>before<sp/>you<sp/>start<sp/>sending.</highlight></codeline>
<codeline lineno="997"><highlight class="comment"></highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>the<sp/>buffer<sp/>of<sp/>bits<sp/>we<sp/>are<sp/>going<sp/>to<sp/>send</highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_set_buffer(buf,<sp/>ax25_getPacketSize());</highlight></codeline>
<codeline lineno="1000"><highlight class="comment"></highlight></codeline>
<codeline lineno="1001"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Wait<sp/>until<sp/>all<sp/>characters<sp/>are<sp/>sent</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"></highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>OK,<sp/>no<sp/>more<sp/>operations<sp/>until<sp/>this<sp/>is<sp/>done.</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_start();</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>(afsk_busy())</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1007"><highlight class="comment"></highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/><sp/><sp/><sp/>logBuffer(buf,<sp/>ax25_getPacketSize(),<sp/>dayOfMonth,<sp/>hour,<sp/>min);</highlight></codeline>
<codeline lineno="1009"><highlight class="comment">}</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"></highlight></codeline>
<codeline lineno="1011"><highlight class="comment"></highlight></codeline>
<codeline lineno="1012"><highlight class="comment">void<sp/>APRS_Send_gpstime(const<sp/>PathAddress<sp/>*<sp/>const<sp/>paths,<sp/>const<sp/>int<sp/>nPaths,</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint8_t<sp/>dayOfMonth,<sp/>const<sp/>uint8_t<sp/>hour,<sp/>const<sp/>uint8_t<sp/>min,<sp/>const<sp/>uint8_t<sp/>sec,</highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>lat,</highlight></codeline>
<codeline lineno="1015"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>lon,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="1016"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>altitude,<sp/>//<sp/>meters</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>uint16_t<sp/>heading,<sp/>//<sp/>degrees</highlight></codeline>
<codeline lineno="1018"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>float<sp/>speed,<sp/>const<sp/>char<sp/>symbolTableIndicator,<sp/>const<sp/>char<sp/>symbol,</highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/><sp/><sp/><sp/>const<sp/>char<sp/>*<sp/>const<sp/>comment)</highlight></codeline>
<codeline lineno="1020"><highlight class="comment">{</highlight></codeline>
<codeline lineno="1021"><highlight class="comment"><sp/><sp/><sp/><sp/>uint8_t<sp/>buf[MAXSENDBUFFER];</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"><sp/><sp/><sp/><sp/>char<sp/>temp[12];</highlight></codeline>
<codeline lineno="1023"><highlight class="comment"></highlight></codeline>
<codeline lineno="1024"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_initBuffer(buf,<sp/>sizeof(buf));</highlight></codeline>
<codeline lineno="1025"><highlight class="comment"></highlight></codeline>
<codeline lineno="1026"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_header(paths,<sp/>nPaths,<sp/>preambleFlags);</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"></highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(&apos;/&apos;);<sp/>//<sp/>Report<sp/>w/<sp/>timestamp,<sp/>no<sp/>APRS<sp/>messaging.<sp/>$<sp/>=<sp/>NMEA<sp/>raw<sp/>data</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/><sp/><sp/><sp/>snprintf(temp,<sp/>sizeof(temp),<sp/>&quot;%02u%02u%02uh&quot;,<sp/>(unsigned<sp/>int)<sp/>hour,</highlight></codeline>
<codeline lineno="1030"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)<sp/>min,</highlight></codeline>
<codeline lineno="1031"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unsigned<sp/>int)<sp/>sec);</highlight></codeline>
<codeline lineno="1032"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);</highlight></codeline>
<codeline lineno="1033"><highlight class="comment"></highlight></codeline>
<codeline lineno="1034"><highlight class="comment"><sp/><sp/><sp/><sp/>latToStr(temp,<sp/>sizeof(temp),<sp/>lat);</highlight></codeline>
<codeline lineno="1035"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Lat:</highlight></codeline>
<codeline lineno="1036"><highlight class="comment"></highlight></codeline>
<codeline lineno="1037"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbolTableIndicator);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Which<sp/>Symbol<sp/>table<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="1038"><highlight class="comment"></highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/><sp/><sp/><sp/>lonToStr(temp,<sp/>sizeof(temp),<sp/>lon);</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_string(temp);<sp/><sp/><sp/><sp/><sp/>//<sp/>Lon:<sp/>000deg<sp/>and<sp/>25.80<sp/>min</highlight></codeline>
<codeline lineno="1041"><highlight class="comment"></highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_byte(symbol);<sp/><sp/>//<sp/>The<sp/>symbol</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"></highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/><sp/><sp/><sp/>ax25_send_footer();</highlight></codeline>
<codeline lineno="1045"><highlight class="comment"></highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Make<sp/>sure<sp/>all<sp/>Serial<sp/>data<sp/>(which<sp/>is<sp/>based<sp/>on<sp/>interrupts)<sp/>is<sp/>done<sp/>before<sp/>you<sp/>start<sp/>sending.</highlight></codeline>
<codeline lineno="1047"><highlight class="comment"></highlight></codeline>
<codeline lineno="1048"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>the<sp/>buffer<sp/>of<sp/>bits<sp/>we<sp/>are<sp/>going<sp/>to<sp/>send</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_set_buffer(buf,<sp/>ax25_getPacketSize());</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"></highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/><sp/><sp/><sp/>Serial.flush();<sp/>//<sp/>Wait<sp/>until<sp/>all<sp/>characters<sp/>are<sp/>sent</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"></highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>OK,<sp/>no<sp/>more<sp/>operations<sp/>until<sp/>this<sp/>is<sp/>done.</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/><sp/><sp/><sp/>afsk_start();</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>(afsk_busy())<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="comment"></highlight></codeline>
<codeline lineno="1058"><highlight class="comment"><sp/><sp/><sp/><sp/>logBuffer(buf,<sp/>ax25_getPacketSize(),<sp/>dayOfMonth,<sp/>hour,<sp/>min);</highlight></codeline>
<codeline lineno="1059"><highlight class="comment">}</highlight></codeline>
<codeline lineno="1060"><highlight class="comment">*/</highlight></codeline>
    </programlisting>
    <location file="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/APRS/APRS.cpp"/>
  </compounddef>
</doxygen>
