<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="RadioHead_2RHHardwareSPI_8cpp" kind="file" language="C++">
    <compoundname>RHHardwareSPI.cpp</compoundname>
    <includes refid="RadioHead_2RHHardwareSPI_8h" local="no">RHHardwareSPI.h</includes>
    <incdepgraph>
      <node id="3">
        <label>RHGenericSPI.h</label>
        <link refid="RadioHead_2RHGenericSPI_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/chris/Documents/farm-sensors/RadioHead/RHHardwareSPI.cpp</label>
        <link refid="RadioHead_2RHHardwareSPI_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>RHHardwareSPI.h</label>
        <link refid="RadioHead_2RHHardwareSPI_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>RadioHead.h</label>
        <link refid="RadioHead_2RadioHead_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="RadioHead_2RHHardwareSPI_8cpp_1a9d4ea215edc388eaacbc289938bb658c" prot="public" static="no" mutable="no">
        <type><ref refid="classRHHardwareSPI" kindref="compound">RHHardwareSPI</ref></type>
        <definition>RHHardwareSPI hardware_spi</definition>
        <argsstring></argsstring>
        <name>hardware_spi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chris/Documents/farm-sensors/RadioHead/RHHardwareSPI.cpp" line="10" column="15" bodyfile="/home/chris/Documents/farm-sensors/RadioHead/RHHardwareSPI.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>RHHardwareSPI.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Mike<sp/>McCauley<sp/>(mikem@airspayce.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2011<sp/>Mike<sp/>McCauley</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Contributed<sp/>by<sp/>Joanna<sp/>Rutkowska</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>$Id:<sp/>RHHardwareSPI.cpp,v<sp/>1.15<sp/>2016/04/04<sp/>01:40:12<sp/>mikem<sp/>Exp<sp/>mikem<sp/>$</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="RadioHead_2RHHardwareSPI_8h" kindref="compound">RHHardwareSPI.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declare<sp/>a<sp/>single<sp/>default<sp/>instance<sp/>of<sp/>the<sp/>hardware<sp/>SPI<sp/>interface<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="classRHHardwareSPI" kindref="compound">RHHardwareSPI</ref><sp/><ref refid="LoRaNodeV4_2RadioHead_2RHHardwareSPI_8cpp_1a9d4ea215edc388eaacbc289938bb658c" kindref="member">hardware_spi</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RH_HAVE_HARDWARE_SPI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_STM32)<sp/></highlight><highlight class="comment">//<sp/>Maple<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declare<sp/>an<sp/>SPI<sp/>interface<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">HardwareSPI<sp/>SPI(1);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_STM32STD)<sp/></highlight><highlight class="comment">//<sp/>STM32F4<sp/>Discovery</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declare<sp/>an<sp/>SPI<sp/>interface<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">HardwareSPI<sp/>SPI(1);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arduino<sp/>Due<sp/>has<sp/>default<sp/>SPI<sp/>pins<sp/>on<sp/>central<sp/>SPI<sp/>headers,<sp/>and<sp/>not<sp/>on<sp/>10,<sp/>11,<sp/>12,<sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>per<sp/>other<sp/>Arduinos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://21stdigitalhome.blogspot.com.au/2013/02/arduino-due-hardware-spi.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__arm__)<sp/>&amp;&amp;<sp/>!defined(CORE_TEENSY)<sp/>&amp;&amp;<sp/>!defined(SPI_CLOCK_DIV16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Arduino<sp/>Due<sp/>in<sp/>1.5.5<sp/>has<sp/>no<sp/>definitions<sp/>for<sp/>SPI<sp/>dividers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>SPI<sp/>clock<sp/>divider<sp/>is<sp/>based<sp/>on<sp/>MCK<sp/>of<sp/>84MHz<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>SPI_CLOCK_DIV16<sp/>(VARIANT_MCK/84000000)<sp/></highlight><highlight class="comment">//<sp/>1MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>SPI_CLOCK_DIV8<sp/><sp/>(VARIANT_MCK/42000000)<sp/></highlight><highlight class="comment">//<sp/>2MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>SPI_CLOCK_DIV4<sp/><sp/>(VARIANT_MCK/21000000)<sp/></highlight><highlight class="comment">//<sp/>4MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>SPI_CLOCK_DIV2<sp/><sp/>(VARIANT_MCK/10500000)<sp/></highlight><highlight class="comment">//<sp/>8MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>SPI_CLOCK_DIV1<sp/><sp/>(VARIANT_MCK/5250000)<sp/><sp/></highlight><highlight class="comment">//<sp/>16MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">RHHardwareSPI::RHHardwareSPI(Frequency<sp/>frequency,<sp/>BitOrder<sp/>bitOrder,<sp/>DataMode<sp/>dataMode)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRHGenericSPI" kindref="compound">RHGenericSPI</ref>(frequency,<sp/>bitOrder,<sp/>dataMode)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">uint8_t<sp/><ref refid="classRHHardwareSPI_1a3bafa40f9fee3c1648df770a8082213a" kindref="member">RHHardwareSPI::transfer</ref>(uint8_t<sp/>data)<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPI.transfer(data);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ad790927c415639388bbe6a5fe99c4e13" kindref="member">RHHardwareSPI::attachInterrupt</ref>()<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_ARDUINO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.attachInterrupt();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1afe5edb725cf6b8110464a72b1e75eddc" kindref="member">RHHardwareSPI::detachInterrupt</ref>()<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_ARDUINO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.detachInterrupt();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRHHardwareSPI_1a15fe95978c03090d7a496aba577137e9" kindref="member">RHHardwareSPI::begin</ref>()<sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sigh:<sp/>there<sp/>are<sp/>no<sp/>common<sp/>symbols<sp/>for<sp/>some<sp/>of<sp/>these<sp/>SPI<sp/>options<sp/>across<sp/>all<sp/>platforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_ARDUINO)<sp/>||<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_UNO32)<sp/>||<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_CHIPKIT_CORE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataMode;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66faf9ff0262993fa50f551c0b042e9a47b5" kindref="member">DataMode0</ref>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fad163c5586916a72c503cbc802278807f" kindref="member">DataMode1</ref>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE1;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fafee3778c48affb675976408e3d703412" kindref="member">DataMode2</ref>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE2;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fa7b94169eadd026d993076e462db5e3fd" kindref="member">DataMode3</ref>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE3;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_ARDUINO)<sp/>&amp;&amp;<sp/>defined(__arm__)<sp/>&amp;&amp;<sp/>defined(CORE_TEENSY)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>work-around<sp/>due<sp/>to<sp/>problem<sp/>where<sp/>avr_emulation.h<sp/>does<sp/>not<sp/>work<sp/>properly<sp/>for<sp/>the<sp/>setDataMode()<sp/>cal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>SPCR<sp/>&amp;=<sp/>~SPI_MODE_MASK;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_ARDUINO)<sp/>&amp;&amp;<sp/>defined<sp/>(__arm__)<sp/>&amp;&amp;<sp/>defined(ARDUINO_ARCH_SAMD)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>requires<sp/>begin()<sp/>before<sp/>anything<sp/>else<sp/>:-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.begin();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setDataMode(dataMode);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_ARDUINO)<sp/>&amp;&amp;<sp/>defined<sp/>(__arm__)<sp/>&amp;&amp;<sp/>(defined(ARDUINO_SAM_DUE)<sp/>||<sp/>defined(ARDUINO_ARCH_SAMD))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arduino<sp/>Due<sp/>in<sp/>1.5.5<sp/>has<sp/>its<sp/>own<sp/>BitOrder<sp/>:-(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>too<sp/>does<sp/>Arduino<sp/>Zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classRHGenericSPI_1a5ab2180e32e8877ceed6e3835ede3380" kindref="member">::BitOrder</ref><sp/>bitOrder;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bitOrder;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1aaf44bdc591031120f4fc90673aedf1c6" kindref="member">_bitOrder</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a5ab2180e32e8877ceed6e3835ede3380a367543a6b63bab953acaa74628657d48" kindref="member">BitOrderLSBFirst</ref>)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>bitOrder<sp/>=<sp/>LSBFIRST;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>bitOrder<sp/>=<sp/>MSBFIRST;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setBitOrder(bitOrder);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>divider;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a0fb8976ef154c748e0d222f824e24ef6" kindref="member">_frequency</ref>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77bad6cd3f326e111ff5189262a5dbd72184" kindref="member">Frequency1MHz</ref>:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>F_CPU<sp/>==<sp/>8000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>SPI_CLOCK_DIV8;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>SPI_CLOCK_DIV16;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba1cf7ded513364cea33b664367559a7ac" kindref="member">Frequency2MHz</ref>:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>F_CPU<sp/>==<sp/>8000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>SPI_CLOCK_DIV4;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>SPI_CLOCK_DIV8;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba3f551d8a71f11a09286f070d6dbbfa16" kindref="member">Frequency4MHz</ref>:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>F_CPU<sp/>==<sp/>8000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>SPI_CLOCK_DIV2;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>SPI_CLOCK_DIV4;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77bac47ec8bfc0d0940c51c953ec6e513a2c" kindref="member">Frequency8MHz</ref>:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>SPI_CLOCK_DIV2;<sp/></highlight><highlight class="comment">//<sp/>4MHz<sp/>on<sp/>an<sp/>8MHz<sp/>Arduino</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba96d32b348eeedee70c3e98e3bec00a64" kindref="member">Frequency16MHz</ref>:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>SPI_CLOCK_DIV2;<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>really<sp/>16MHz,<sp/>only<sp/>8MHz.<sp/>4MHz<sp/>on<sp/>an<sp/>8MHz<sp/>Arduino</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setClockDivider(divider);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.begin();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Teensy<sp/>requires<sp/>it<sp/>to<sp/>be<sp/>set<sp/>_after_<sp/>begin()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setClockDivider(divider);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_STM32)<sp/></highlight><highlight class="comment">//<sp/>Maple<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>spi_mode<sp/>dataMode;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hmmm,<sp/>if<sp/>we<sp/>do<sp/>this<sp/>as<sp/>a<sp/>switch,<sp/>GCC<sp/>on<sp/>maple<sp/>gets<sp/>v<sp/>confused!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66faf9ff0262993fa50f551c0b042e9a47b5" kindref="member">DataMode0</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE_0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fad163c5586916a72c503cbc802278807f" kindref="member">DataMode1</ref>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE_1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fafee3778c48affb675976408e3d703412" kindref="member">DataMode2</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE_2;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fa7b94169eadd026d993076e462db5e3fd" kindref="member">DataMode3</ref>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE_3;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE_0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>bitOrder;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1aaf44bdc591031120f4fc90673aedf1c6" kindref="member">_bitOrder</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a5ab2180e32e8877ceed6e3835ede3380a367543a6b63bab953acaa74628657d48" kindref="member">BitOrderLSBFirst</ref>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>bitOrder<sp/>=<sp/>LSBFIRST;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>bitOrder<sp/>=<sp/>MSBFIRST;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFrequency<sp/>frequency;<sp/></highlight><highlight class="comment">//<sp/>Yes,<sp/>I<sp/>know<sp/>these<sp/>are<sp/>not<sp/>exact<sp/>equivalents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a0fb8976ef154c748e0d222f824e24ef6" kindref="member">_frequency</ref>)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77bad6cd3f326e111ff5189262a5dbd72184" kindref="member">Frequency1MHz</ref>:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>SPI_1_125MHZ;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba1cf7ded513364cea33b664367559a7ac" kindref="member">Frequency2MHz</ref>:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>SPI_2_25MHZ;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba3f551d8a71f11a09286f070d6dbbfa16" kindref="member">Frequency4MHz</ref>:</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>SPI_4_5MHZ;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77bac47ec8bfc0d0940c51c953ec6e513a2c" kindref="member">Frequency8MHz</ref>:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>SPI_9MHZ;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba96d32b348eeedee70c3e98e3bec00a64" kindref="member">Frequency16MHz</ref>:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>SPI_18MHZ;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.begin(frequency,<sp/>bitOrder,<sp/>dataMode);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_STM32STD)<sp/></highlight><highlight class="comment">//<sp/>STM32F4<sp/>discovery</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataMode;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66faf9ff0262993fa50f551c0b042e9a47b5" kindref="member">DataMode0</ref>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fad163c5586916a72c503cbc802278807f" kindref="member">DataMode1</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fafee3778c48affb675976408e3d703412" kindref="member">DataMode2</ref>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE2;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fa7b94169eadd026d993076e462db5e3fd" kindref="member">DataMode3</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE3;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bitOrder;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1aaf44bdc591031120f4fc90673aedf1c6" kindref="member">_bitOrder</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a5ab2180e32e8877ceed6e3835ede3380a367543a6b63bab953acaa74628657d48" kindref="member">BitOrderLSBFirst</ref>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>bitOrder<sp/>=<sp/>LSBFIRST;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>bitOrder<sp/>=<sp/>MSBFIRST;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>SPIFrequency<sp/>frequency;<sp/></highlight><highlight class="comment">//<sp/>Yes,<sp/>I<sp/>know<sp/>these<sp/>are<sp/>not<sp/>exact<sp/>equivalents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a0fb8976ef154c748e0d222f824e24ef6" kindref="member">_frequency</ref>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77bad6cd3f326e111ff5189262a5dbd72184" kindref="member">Frequency1MHz</ref>:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>SPI_1_3125MHZ;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba1cf7ded513364cea33b664367559a7ac" kindref="member">Frequency2MHz</ref>:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>SPI_2_625MHZ;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba3f551d8a71f11a09286f070d6dbbfa16" kindref="member">Frequency4MHz</ref>:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>SPI_5_25MHZ;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77bac47ec8bfc0d0940c51c953ec6e513a2c" kindref="member">Frequency8MHz</ref>:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>SPI_10_5MHZ;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba96d32b348eeedee70c3e98e3bec00a64" kindref="member">Frequency16MHz</ref>:</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frequency<sp/>=<sp/>SPI_21_0MHZ;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.begin(frequency,<sp/>bitOrder,<sp/>dataMode);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_STM32F2)<sp/></highlight><highlight class="comment">//<sp/>Photon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;HERE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>dataMode;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66faf9ff0262993fa50f551c0b042e9a47b5" kindref="member">DataMode0</ref>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fad163c5586916a72c503cbc802278807f" kindref="member">DataMode1</ref>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE1;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fafee3778c48affb675976408e3d703412" kindref="member">DataMode2</ref>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE2;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fa7b94169eadd026d993076e462db5e3fd" kindref="member">DataMode3</ref>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE3;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>SPI_MODE0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setDataMode(dataMode);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1aaf44bdc591031120f4fc90673aedf1c6" kindref="member">_bitOrder</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a5ab2180e32e8877ceed6e3835ede3380a367543a6b63bab953acaa74628657d48" kindref="member">BitOrderLSBFirst</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setBitOrder(LSBFIRST);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>SPI.setBitOrder(MSBFIRST);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a0fb8976ef154c748e0d222f824e24ef6" kindref="member">_frequency</ref>)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77bad6cd3f326e111ff5189262a5dbd72184" kindref="member">Frequency1MHz</ref>:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockSpeed(1,<sp/>MHZ);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba1cf7ded513364cea33b664367559a7ac" kindref="member">Frequency2MHz</ref>:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockSpeed(2,<sp/>MHZ);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba3f551d8a71f11a09286f070d6dbbfa16" kindref="member">Frequency4MHz</ref>:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockSpeed(4,<sp/>MHZ);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77bac47ec8bfc0d0940c51c953ec6e513a2c" kindref="member">Frequency8MHz</ref>:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockSpeed(8,<sp/>MHZ);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba96d32b348eeedee70c3e98e3bec00a64" kindref="member">Frequency16MHz</ref>:</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockSpeed(16,<sp/>MHZ);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockDivider(SPI_CLOCK_DIV4);<sp/><sp/>//<sp/>72MHz<sp/>/<sp/>4MHz<sp/>=<sp/>18MHz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>SPI.setClockSpeed(1,<sp/>MHZ);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SPI.begin();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_ESP8266)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#warn<sp/>&quot;ESP8266<sp/>SPI<sp/>support<sp/>not<sp/>yet<sp/>available.<sp/>Please<sp/>feel<sp/>free<sp/>to<sp/>submit<sp/>a<sp/>patch&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(RH_PLATFORM<sp/>==<sp/>RH_PLATFORM_RASPI)<sp/></highlight><highlight class="comment">//<sp/>Raspberry<sp/>PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>uint8_t<sp/>dataMode;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66faf9ff0262993fa50f551c0b042e9a47b5" kindref="member">DataMode0</ref>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>BCM2835_SPI_MODE0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fad163c5586916a72c503cbc802278807f" kindref="member">DataMode1</ref>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>BCM2835_SPI_MODE1;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fafee3778c48affb675976408e3d703412" kindref="member">DataMode2</ref>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>BCM2835_SPI_MODE2;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a13c2f2a7f75c5563125b2a697ce8b14b" kindref="member">_dataMode</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a1664ba51a3de5e5fc10222feac23e66fa7b94169eadd026d993076e462db5e3fd" kindref="member">DataMode3</ref>)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>dataMode<sp/>=<sp/>BCM2835_SPI_MODE3;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bitOrder;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1aaf44bdc591031120f4fc90673aedf1c6" kindref="member">_bitOrder</ref><sp/>==<sp/><ref refid="classRHGenericSPI_1a5ab2180e32e8877ceed6e3835ede3380a367543a6b63bab953acaa74628657d48" kindref="member">BitOrderLSBFirst</ref>)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>bitOrder<sp/>=<sp/>BCM2835_SPI_BIT_ORDER_LSBFIRST;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>bitOrder<sp/>=<sp/>BCM2835_SPI_BIT_ORDER_MSBFIRST;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>uint32_t<sp/>divider;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classRHGenericSPI_1a0fb8976ef154c748e0d222f824e24ef6" kindref="member">_frequency</ref>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77bad6cd3f326e111ff5189262a5dbd72184" kindref="member">Frequency1MHz</ref>:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>BCM2835_SPI_CLOCK_DIVIDER_256;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba1cf7ded513364cea33b664367559a7ac" kindref="member">Frequency2MHz</ref>:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>BCM2835_SPI_CLOCK_DIVIDER_128;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba3f551d8a71f11a09286f070d6dbbfa16" kindref="member">Frequency4MHz</ref>:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>BCM2835_SPI_CLOCK_DIVIDER_64;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77bac47ec8bfc0d0940c51c953ec6e513a2c" kindref="member">Frequency8MHz</ref>:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>BCM2835_SPI_CLOCK_DIVIDER_32;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classRHGenericSPI_1ae6c02cd54a3a1f1f0356a3f75cf9c77ba96d32b348eeedee70c3e98e3bec00a64" kindref="member">Frequency16MHz</ref>:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>divider<sp/>=<sp/>BCM2835_SPI_CLOCK_DIVIDER_16;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>SPI.begin(divider,<sp/>bitOrder,<sp/>dataMode);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#warning<sp/>RHHardwareSPI<sp/>does<sp/>not<sp/>support<sp/>this<sp/>platform<sp/>yet.<sp/>Consider<sp/>adding<sp/>it<sp/>and<sp/>contributing<sp/>a<sp/>patch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRHHardwareSPI_1ad6e88ca17b63901872825a5e0a362c34" kindref="member">RHHardwareSPI::end</ref>()<sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SPI.end();</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/chris/Documents/farm-sensors/RadioHead/RHHardwareSPI.cpp"/>
  </compounddef>
</doxygen>
