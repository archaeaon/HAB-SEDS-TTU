<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="Pushbutton_8cpp" kind="file" language="C++">
    <compoundname>Pushbutton.cpp</compoundname>
    <includes refid="Pushbutton_8hpp" local="yes">Pushbutton.hpp</includes>
    <incdepgraph>
      <node id="4">
        <label>../../../Config.h</label>
        <link refid="Config_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>../../ProjectConfig.hpp</label>
        <link refid="ProjectConfig_8hpp"/>
      </node>
      <node id="1">
        <label>/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/Pushbutton/Pushbutton.cpp</label>
        <link refid="Pushbutton_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Pushbutton.hpp</label>
        <link refid="Pushbutton_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>HAB_ESP32.hpp</label>
        <link refid="HAB__ESP32_8hpp"/>
      </node>
      <node id="15">
        <label>HAB_Nano.hpp</label>
        <link refid="HAB__Nano_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>HAB_STM32.hpp</label>
        <link refid="HAB__STM32_8hpp"/>
      </node>
      <node id="12">
        <label>HAB_Teensy.hpp</label>
        <link refid="HAB__Teensy_8hpp"/>
      </node>
      <node id="11">
        <label>src/Hardware_Configuration/HardwareConfig.h</label>
        <link refid="HardwareConfig_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>DebugUtilities.h</label>
        <link refid="DebugUtilities_8h"/>
      </node>
      <node id="8">
        <label>HardwareUtilities.h</label>
        <link refid="HardwareUtilities_8h"/>
      </node>
      <node id="10">
        <label>RandNumUtilities.h</label>
        <link refid="RandNumUtilities_8h"/>
      </node>
      <node id="9">
        <label>TimerUtilities.h</label>
        <link refid="TimerUtilities_8h"/>
      </node>
      <node id="5">
        <label>src/Utilities/Utilities.h</label>
        <link refid="Utilities_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Arduino.h</label>
      </node>
      <node id="16">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Debounce</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Each<sp/>time<sp/>the<sp/>input<sp/>pin<sp/>goes<sp/>from<sp/>LOW<sp/>to<sp/>HIGH<sp/>(e.g.<sp/>because<sp/>of<sp/>a<sp/>push-button</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>press),<sp/>the<sp/>output<sp/>pin<sp/>is<sp/>toggled<sp/>from<sp/>LOW<sp/>to<sp/>HIGH<sp/>or<sp/>HIGH<sp/>to<sp/>LOW.<sp/>There&apos;s<sp/>a</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>minimum<sp/>delay<sp/>between<sp/>toggles<sp/>to<sp/>debounce<sp/>the<sp/>circuit<sp/>(i.e.<sp/>to<sp/>ignore<sp/>noise).</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Pushbutton_8hpp" kindref="compound">Pushbutton.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>debouncing<sp/>vars<sp/>moved<sp/>to<sp/>.hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPUSHBUTTON_1a03b012e270f1b1f9c1b4ed215397a42f" kindref="member">PUSHBUTTON::PUSHBUTTON_Setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>pinMode(<ref refid="classPUSHBUTTON_1adc06ef60c59c85b8b621403985c78eb8" kindref="member">buttonPin</ref>,<sp/>INPUT);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPUSHBUTTON_1a5a8cdc321d16cc0c8d952463cb14668b" kindref="member">PUSHBUTTON::PUSHBUTTON_Update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>state<sp/>of<sp/>the<sp/>switch<sp/>into<sp/>a<sp/>local<sp/>variable:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reading<sp/>=<sp/>digitalRead(<ref refid="classPUSHBUTTON_1adc06ef60c59c85b8b621403985c78eb8" kindref="member">buttonPin</ref>);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>to<sp/>see<sp/>if<sp/>you<sp/>just<sp/>pressed<sp/>the<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(i.e.<sp/>the<sp/>input<sp/>went<sp/>from<sp/>LOW<sp/>to<sp/>HIGH),<sp/>and<sp/>you&apos;ve<sp/>waited<sp/>long<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>the<sp/>last<sp/>press<sp/>to<sp/>ignore<sp/>any<sp/>noise:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>switch<sp/>changed,<sp/>due<sp/>to<sp/>noise<sp/>or<sp/>pressing:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(reading<sp/>!=<sp/>lastButtonState)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>reset<sp/>the<sp/>debouncing<sp/>timer</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/>lastDebounceTime<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>((millis()<sp/>-<sp/>lastDebounceTime)<sp/>&gt;<sp/>debounceDelay)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whatever<sp/>the<sp/>reading<sp/>is<sp/>at,<sp/>it&apos;s<sp/>been<sp/>there<sp/>for<sp/>longer<sp/>than<sp/>the<sp/>debounce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delay,<sp/>so<sp/>take<sp/>it<sp/>as<sp/>the<sp/>actual<sp/>current<sp/>state:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>button<sp/>state<sp/>has<sp/>changed:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reading<sp/>!=<sp/><ref refid="classPUSHBUTTON_1afb81808f78a16d48d600bfb2b27de9b2" kindref="member">buttonState</ref>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPUSHBUTTON_1afb81808f78a16d48d600bfb2b27de9b2" kindref="member">buttonState</ref><sp/>=<sp/>reading;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>reading.<sp/>Next<sp/>time<sp/>through<sp/>the<sp/>loop,<sp/>it&apos;ll<sp/>be<sp/>the<sp/>lastButtonState:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classPUSHBUTTON_1a392ba8324ca9b0eae476105827d91872" kindref="member">lastButtonState</ref><sp/>=<sp/>reading;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>//<sp/>code<sp/>from<sp/>ex</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/>newbuttonState<sp/>=<sp/>digitalRead(buttonPin);</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/>if<sp/>(newbuttonState<sp/>==<sp/>HIGH)</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/>digitalWrite(LED,<sp/>HIGH);</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/>else{</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/>digitalWrite(LED,<sp/>LOW);</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/>}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classPUSHBUTTON_1a295e7fa05b69b43c7f0b7bb6073ec831" kindref="member">PUSHBUTTON::GetbuttonState</ref>(){</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classPUSHBUTTON_1afb81808f78a16d48d600bfb2b27de9b2" kindref="member">buttonState</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classPUSHBUTTON_1a62b8222476c427780bce822a23b4fb4c" kindref="member">PUSHBUTTON::GetlastButtonState</ref>(){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classPUSHBUTTON_1a392ba8324ca9b0eae476105827d91872" kindref="member">lastButtonState</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classPUSHBUTTON_1adc6bc72a6da758e0fcf3534aad6e0318" kindref="member">PUSHBUTTON::GetVoltage</ref>(){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classPUSHBUTTON_1a1593dca189cb5867654c44d11075af89" kindref="member">voltage</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/chris/Documents/HAB-SEDS-TTU/src/Drivers/Pushbutton/Pushbutton.cpp"/>
  </compounddef>
</doxygen>
