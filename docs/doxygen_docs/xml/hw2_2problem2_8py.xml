<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="hw2_2problem2_8py" kind="file" language="Python">
    <compoundname>problem2.py</compoundname>
    <innernamespace refid="namespaceproblem2">problem2</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#<sp/>Name:<sp/>Chris<sp/>Swindell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Assignment:<sp/>HW2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>math<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sqrt</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>arange,<sp/>array,<sp/>cos,<sp/>pi</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>functools<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>partial</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">Name:<sp/>basis_k</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">Parameters:<sp/>N<sp/>-&gt;<sp/>An<sp/>integer.<sp/>The<sp/>total<sp/>number<sp/>of<sp/>samples<sp/>and<sp/>basis<sp/>functions.</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>-&gt;<sp/>An<sp/>integer.<sp/>The<sp/>particular<sp/>basis<sp/>function<sp/>being<sp/>used.</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>-&gt;<sp/>A<sp/>NumPy<sp/>array.<sp/>Size<sp/>corresponds<sp/>to<sp/>number<sp/>of<sp/>samples<sp/>taken.<sp/>Values<sp/>range<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>0<sp/>to</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N-1.</highlight></codeline>
<codeline lineno="14"><highlight class="normal">Purpose:<sp/>Calculates<sp/>the<sp/>DCT<sp/>basis<sp/>function<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>N<sp/>samples.<sp/>The<sp/>value<sp/>of<sp/>k<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>used<sp/>to<sp/>determine<sp/>what</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>basis<sp/>function<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>used.<sp/>In<sp/>particular,<sp/>a<sp/>completely<sp/>different<sp/>basis<sp/>function<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>used<sp/>when</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k=0.<sp/>Returns<sp/>a<sp/>NumPy<sp/>array<sp/>of<sp/>results<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>each<sp/>sample<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>a<sp/>size<sp/>equivalent<sp/>to<sp/>n.</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">def<sp/>basis_k<sp/>(N:<sp/>int,<sp/>k:<sp/>int,<sp/>n):</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>array([1.0<sp/>/<sp/>sqrt(N)]*N)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>k<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>sqrt(2.0<sp/>/<sp/>N)<sp/>*<sp/>cos((pi<sp/>/<sp/>N)<sp/>*<sp/>(n<sp/>+<sp/>0.5)<sp/>*<sp/>k)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">Name:<sp/>basis_l</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">Parameters:<sp/>N<sp/>-&gt;<sp/>An<sp/>integer.<sp/>The<sp/>total<sp/>number<sp/>of<sp/>samples<sp/>and<sp/>basis<sp/>functions.</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>-&gt;<sp/>An<sp/>integer.<sp/>The<sp/>particular<sp/>basis<sp/>function<sp/>being<sp/>used.</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>-&gt;<sp/>A<sp/>NumPy<sp/>array.<sp/>Size<sp/>corresponds<sp/>to<sp/>number<sp/>of<sp/>samples<sp/>taken.<sp/>Values<sp/>range<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>0<sp/>to</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N-1.</highlight></codeline>
<codeline lineno="27"><highlight class="normal">Purpose:<sp/>Calculates<sp/>the<sp/>DCT<sp/>basis<sp/>function<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>N<sp/>samples.<sp/>Performs<sp/>an<sp/>underlying<sp/>call<sp/>to<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>returns</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>result<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>basis_k.<sp/>Mainly<sp/>included<sp/>to<sp/>maintain<sp/>naming<sp/>convention<sp/>consistency<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>DCT.</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">def<sp/>basis_l<sp/>(N:<sp/>int,<sp/>l:<sp/>int,<sp/>n):</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceproblem2_1a1aae7c8e9525ecb2b9b24ee97b526a2b" kindref="member">basis_k</ref>(N,<sp/>l,<sp/>n)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">Name:<sp/>DCT</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">Parameters:<sp/>N<sp/>-&gt;<sp/>An<sp/>integer.<sp/>The<sp/>total<sp/>number<sp/>of<sp/>samples<sp/>and<sp/>basis<sp/>functions.</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">Purpose:<sp/>Calculates<sp/>the<sp/>discrete<sp/>cosine<sp/>transform<sp/>for<sp/>N<sp/>samples<sp/>across<sp/>all<sp/>N^2<sp/>combinations<sp/>of<sp/>basis</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functions.<sp/>This<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>done<sp/>to<sp/>numerically<sp/>compute<sp/>the<sp/>orthonormality<sp/>of<sp/>the<sp/>DCT</highlight><highlight class="stringliteral">&apos;s<sp/>basis</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functions.<sp/>Results<sp/>are<sp/>printed<sp/>to<sp/>stdout.</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral">def<sp/>DCT<sp/>(N:<sp/>int):</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Partial<sp/>basis<sp/>functions<sp/>with<sp/>values<sp/>for<sp/>the<sp/>first<sp/>2<sp/>arguments<sp/>are<sp/>stored<sp/>as<sp/>lists<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>later<sp/>inner<sp/>product<sp/>calculations.<sp/>I<sp/>had<sp/>originally<sp/>used<sp/>basic<sp/>lambda<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>have<sp/>a<sp/>less<sp/>obvious<sp/>characteristic<sp/>given<sp/>to<sp/>them<sp/>by<sp/>Python:<sp/>Since<sp/>the<sp/>variables<sp/>for<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>lambda<sp/>function<sp/>are<sp/>evaluated<sp/>after<sp/>the<sp/>for<sp/>loop<sp/>in<sp/>the<sp/>list<sp/>compositions<sp/>have<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>completed,<sp/>the<sp/>odd-looking<sp/>default<sp/>assignments<sp/>of<sp/>&quot;k=k&quot;<sp/>and<sp/>&quot;l=l&quot;<sp/>are<sp/>actually<sp/>required<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>order<sp/>to<sp/>achieve<sp/>the<sp/>desired<sp/>and<sp/>more<sp/>obvious-looking<sp/>result.<sp/>I<sp/>decided<sp/>to<sp/>switched<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>functools.partial<sp/>to<sp/>acheive<sp/>the<sp/>same<sp/>effect<sp/>as<sp/>that<sp/>seems<sp/>to<sp/>be<sp/>the<sp/>more<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>respectable<sp/>method,<sp/>but<sp/>the<sp/>lambda<sp/>function<sp/>method<sp/>has<sp/>been<sp/>left<sp/>posterity<sp/>since<sp/>it<sp/>took<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>me<sp/>long<sp/>enough<sp/>to<sp/>figure<sp/>out<sp/>through<sp/>debugging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#bk<sp/>=<sp/>[lambda<sp/>n,<sp/>k=k:<sp/>basis_k(N,<sp/>k,<sp/>n)<sp/>for<sp/>k<sp/>in<sp/>range(N)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#bl<sp/>=<sp/>[lambda<sp/>n,<sp/>l=l:<sp/>basis_l(N,<sp/>l,<sp/>n)<sp/>for<sp/>l<sp/>in<sp/>range(N)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>bk<sp/>=<sp/>[partial(basis_k,<sp/>N,<sp/>k)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(N)]</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>bl<sp/>=<sp/>[partial(basis_l,<sp/>N,<sp/>l)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(N)]</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Compute<sp/>the<sp/>dot/inner<sp/>product<sp/>of<sp/>each<sp/>combination<sp/>of<sp/>basis<sp/>functions.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;N:<sp/>%d&apos;</highlight><highlight class="normal"><sp/>%N)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>n_arr<sp/>=<sp/>arange(0,<sp/>N)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>n_arr:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>n_arr:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>The<sp/>dot/inner<sp/>product<sp/>is<sp/>saved<sp/>as<sp/>a<sp/>lambda<sp/>function<sp/>to<sp/>make<sp/>the<sp/>output<sp/>line<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>beneath<sp/>it<sp/>easier<sp/>to<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inner_product<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>:<sp/>bk[k](n_arr).dot(bl[l](n_arr))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;k:<sp/>%d,<sp/>l:<sp/>%d,<sp/>inner<sp/>product:&apos;</highlight><highlight class="normal"><sp/>%(k,<sp/>l),<sp/>inner_product())</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>print()</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproblem2_1a5bc68aafe95fc8640efeb5eef2317d68" kindref="member">main</ref><sp/>():</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Calculate<sp/>the<sp/>discrete<sp/>cosine<sp/>transform<sp/>using<sp/>N<sp/>basis<sp/>functions<sp/>across<sp/>N<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>=<sp/>[16,<sp/>64,<sp/>128]</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>N:<sp/><ref refid="namespaceproblem2_1a48ab4faaefc9991a3f58eb2f9953bb09" kindref="member">DCT</ref>(n)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceproblem2_1a5bc68aafe95fc8640efeb5eef2317d68" kindref="member">main</ref>()</highlight></codeline>
    </programlisting>
    <location file="/home/chris/Documents/ece6040/homework/hw2/problem2.py"/>
  </compounddef>
</doxygen>
