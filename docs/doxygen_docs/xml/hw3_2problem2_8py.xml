<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="hw3_2problem2_8py" kind="file" language="Python">
    <compoundname>problem2.py</compoundname>
    <innernamespace refid="namespaceproblem2">problem2</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>arange,<sp/>array,<sp/>complex64,<sp/>where,<sp/>exp,<sp/>pi,<sp/>random,<sp/>convolve,<sp/>vdot,<sp/>asarray</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>math<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sqrt</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>matplotlib.pyplot<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>plot,<sp/>show,<sp/>xlabel,<sp/>ylabel,<sp/>suptitle,<sp/>title</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:<sp/>All<sp/>tuples<sp/>used<sp/>this<sp/>way<sp/>are<sp/>intended<sp/>to<sp/>be<sp/>an<sp/>easy<sp/>way<sp/>of<sp/>associating<sp/>a<sp/>value<sp/>with<sp/>its</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>units.</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">B<sp/>=<sp/>Fs<sp/>=<sp/>(10e6,<sp/>&apos;Hz&apos;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Bandwidth<sp/>and<sp/>sampling<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">T<sp/>=<sp/>(10e-6,<sp/></highlight><highlight class="stringliteral">&apos;sec&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Signal<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">to_linear<sp/>=<sp/></highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>x:<sp/>10**(x/10)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>For<sp/>converting<sp/>from<sp/>dB<sp/>to<sp/>linear<sp/>units<sp/>(assumed<sp/>to<sp/>be<sp/>W)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">SNR<sp/>=<sp/>(-17,<sp/></highlight><highlight class="stringliteral">&apos;dB&apos;</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Signal<sp/>to<sp/>noise<sp/>ratio<sp/>of<sp/>the<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purpose:<sp/>Returns<sp/>an<sp/>LFM<sp/>signal<sp/>applied<sp/>over<sp/>n.</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters:<sp/>n<sp/>&lt;-<sp/>A<sp/>NumPy<sp/>array<sp/>over<sp/>which<sp/>the<sp/>LFM<sp/>signal<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>applied.</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>&lt;-<sp/>A<sp/>tuple<sp/>of<sp/>the<sp/>LFM<sp/>signal<sp/>bandwidth.<sp/>Default<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>10<sp/>MHz.</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fs<sp/>&lt;-<sp/>A<sp/>tuple<sp/>of<sp/>sampling<sp/>frequency<sp/>of<sp/>the<sp/>LFM<sp/>pulse.<sp/>Default<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>10<sp/>MHz.</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>&lt;-<sp/>A<sp/>tuple<sp/>of<sp/>LFM<sp/>signal<sp/>period.<sp/>Default<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>10<sp/>usec.</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">def<sp/>LFMpulse<sp/>(n,<sp/>B:<sp/>tuple<sp/>=<sp/>B,<sp/>Fs:<sp/>tuple<sp/>=<sp/>Fs,<sp/>T:<sp/>tuple<sp/>=<sp/>T):</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Ts<sp/>=<sp/>(1/Fs[0],<sp/>&apos;sec&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>=<sp/>T[0]<sp/>/<sp/>Ts[0]</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Restrict<sp/>n<sp/>to<sp/>the<sp/>range<sp/>-N/2<sp/>to<sp/>N/2<sp/>by<sp/>setting<sp/>values<sp/>outside<sp/>this<sp/>range<sp/>to<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>where(n<sp/>&lt;<sp/>N/2,<sp/>where(n<sp/>&gt;=<sp/>-N/2,<sp/>n,<sp/>0),<sp/>0)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>i_first<sp/>=<sp/>n.nonzero()[0][0]</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>i_last<sp/>=<sp/>n.nonzero()[0][-1]<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:<sp/>This<sp/>will<sp/>only<sp/>apply<sp/>the<sp/>LFM<sp/>pulse<sp/>function<sp/>to<sp/>the<sp/>range<sp/>where<sp/>n<sp/>!=<sp/>0.<sp/>n<sp/>will<sp/>still</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remain<sp/>the<sp/>same<sp/>size<sp/>(i.e.<sp/>it<sp/>will<sp/>retain<sp/>the<sp/>0<sp/>values<sp/>before<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>after).</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>n[i_first:i_last]<sp/>=<sp/>exp(((1j*pi*B[0])/T[0])<sp/>*<sp/>(n[i_first:i_last]*Ts[0])**2)</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n,<sp/>i_first,<sp/>i_last</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purpose:<sp/>Returns<sp/>the<sp/>average<sp/>signal<sp/>power<sp/>of<sp/>signal<sp/>x1.</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters:<sp/>x1<sp/>&lt;-<sp/>A<sp/>NumPy<sp/>array<sp/>of<sp/>the<sp/>input<sp/>signal.</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_first<sp/>&lt;-<sp/>The<sp/>integer<sp/>index<sp/>of<sp/>signal<sp/>x1<sp/>to<sp/>start<sp/>the<sp/>summation.</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_last<sp/>&lt;-<sp/>The<sp/>integer<sp/>index<sp/>of<sp/>signal<sp/>x1<sp/>to<sp/>stop<sp/>the<sp/>summation<sp/>before.</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fs<sp/>&lt;-<sp/>A<sp/>tuple<sp/>of<sp/>sampling<sp/>frequency<sp/>of<sp/>signal<sp/>x1.<sp/>Default<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>10<sp/>MHz.</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral">def<sp/>avg_sig_pwr<sp/>(x1,<sp/>i_first:<sp/>int,<sp/>i_last:<sp/>int,<sp/>Fs:<sp/>tuple<sp/>=<sp/>Fs):</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>N<sp/>=<sp/>T[0]<sp/>/<sp/>(1<sp/>/<sp/>Fs[0])</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(1/N<sp/>*<sp/>sum(abs(x1[i_first:i_last-1])**2),<sp/></highlight><highlight class="stringliteral">&apos;W&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purpose:<sp/>Returns<sp/>a<sp/>NumPy<sp/>array<sp/>representing<sp/>AWGN.</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters:<sp/>SNR<sp/>&lt;-<sp/>A<sp/>tuple<sp/>of<sp/>the<sp/>signal<sp/>to<sp/>noise<sp/>ratio<sp/>of<sp/>the<sp/>system<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dB.</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Px<sp/>&lt;-<sp/>A<sp/>tuple<sp/>of<sp/>the<sp/>signal<sp/>power<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>linear<sp/>units<sp/>(assumed<sp/>to<sp/>be<sp/>W).</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>&lt;-<sp/>An<sp/>integer<sp/>of<sp/>the<sp/>size<sp/>the<sp/>AWGN<sp/>NumPy<sp/>array<sp/>should<sp/>be.<sp/>This<sp/>will<sp/>match<sp/>the</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>of<sp/>n<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>x1<sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>elsewhere.</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproblem2_1a68dfc291e119419633715668a303205e" kindref="member">complexAWGN</ref><sp/>(SNR:<sp/>tuple,<sp/>Px:<sp/>tuple,<sp/>size:<sp/>int):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>N<sp/>=<sp/>T[0]<sp/>/<sp/>(1<sp/>/<sp/>Fs[0])</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>N0<sp/>=<sp/>Px[0]<sp/>/<sp/><ref refid="namespaceproblem2_1a4e0877dcc984e782c3a8915ddb86c498" kindref="member">to_linear</ref>(SNR[0])</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>random.randn(size,<sp/>2).T</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/>sqrt(N0/2)<sp/>*<sp/>(w[0]<sp/>+<sp/>1j*w[1])<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Convert<sp/>w<sp/>to<sp/>be<sp/>complex<sp/>AWGN<sp/>and<sp/>normalized<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrt(N0/2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purpose:<sp/>Returns<sp/>a<sp/>filter<sp/>matched<sp/>to<sp/>an<sp/>LFM<sp/>pulse<sp/>at<sp/>a<sp/>specified<sp/>bandwidth,<sp/>sampling<sp/>frequency,</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>signal<sp/>period.</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters:<sp/>n<sp/>&lt;-<sp/>A<sp/>NumPy<sp/>array<sp/>over<sp/>which<sp/>the<sp/>match<sp/>filtered<sp/>LFM<sp/>signal<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>applied.</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>&lt;-<sp/>A<sp/>tuple<sp/>of<sp/>the<sp/>LFM<sp/>signal<sp/>bandwidth.</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fs<sp/>&lt;-<sp/>A<sp/>tuple<sp/>of<sp/>sampling<sp/>frequency<sp/>of<sp/>the<sp/>LFM<sp/>pulse.</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>&lt;-<sp/>A<sp/>tuple<sp/>of<sp/>LFM<sp/>signal<sp/>period.</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral">def<sp/>h<sp/>(n,<sp/>B:<sp/>tuple,<sp/>Fs:<sp/>tuple,<sp/>T:<sp/>tuple):</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>h1,<sp/>i_first,<sp/>i_last<sp/>=<sp/><ref refid="namespaceproblem2_1acd483334d23ad9844ee14b0297d848b6" kindref="member">LFMpulse</ref>(n[::-1],<sp/>B,<sp/>Fs,<sp/>T)<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Time<sp/>reverse<sp/>the<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h1</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purpose:<sp/>Performs<sp/>a<sp/>match<sp/>filtering<sp/>of<sp/>an<sp/>LFM<sp/>pulse.<sp/>Returns<sp/>1<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>a<sp/>match<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>detected<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherwise.</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters:<sp/>signal_on<sp/>&lt;-<sp/>Boolean<sp/>used<sp/>to<sp/>determine<sp/>whether<sp/>to<sp/>introduce<sp/>an<sp/>actual<sp/>LFM<sp/>pulse<sp/>into</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>system.<sp/>A<sp/>value<sp/>of<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/>would<sp/>only<sp/>introduce<sp/>noise.</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold<sp/>&lt;-<sp/>Value<sp/>compared<sp/>against<sp/>the<sp/>match<sp/>filtered<sp/>signal<sp/>to<sp/>determine<sp/>whether</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>an<sp/>LFM<sp/>signal<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>present.</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproblem2_1a851d24b57586d977e7862d3d24c44c04" kindref="member">match_filter</ref><sp/>(signal_on:<sp/>bool,<sp/>threshold:<sp/>int):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>arange(-100,<sp/>100,<sp/>1,<sp/>dtype=complex64)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>signal_on:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1,<sp/>i_first,<sp/>i_last<sp/>=<sp/><ref refid="namespaceproblem2_1acd483334d23ad9844ee14b0297d848b6" kindref="member">LFMpulse</ref>(n)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Px<sp/>=<sp/><ref refid="namespaceproblem2_1a06720966d5404d843a6f5619b97dbf0e" kindref="member">avg_sig_pwr</ref>(x1,<sp/>i_first,<sp/>i_last)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>array([0]*len(n))</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_first<sp/>=<sp/>int(len(n)/2)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i_last<sp/>=<sp/>int(len(n)*3/4)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Px<sp/>=<sp/>(1,<sp/></highlight><highlight class="stringliteral">&apos;W&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/><ref refid="namespaceproblem2_1a68dfc291e119419633715668a303205e" kindref="member">complexAWGN</ref>(SNR,<sp/>Px,<sp/>len(x1))<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Get<sp/>the<sp/>noisy<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>x1<sp/>+<sp/>w<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Add<sp/>some<sp/>noise<sp/>to<sp/>the<sp/>actual<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>h1<sp/>=<sp/><ref refid="namespaceproblem2_1a5bc50e4b8b37d8185f5d8f9b895c8ede" kindref="member">h</ref>(n,<sp/>B,<sp/>Fs,<sp/>T)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Get<sp/>the<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>When<sp/>doing<sp/>convolution,<sp/>the<sp/>confusion<sp/>matrix<sp/>is<sp/>much<sp/>different<sp/>than<sp/>the<sp/>straight<sp/>inner<sp/>product,<sp/>but<sp/>the<sp/>ROC<sp/>plot<sp/>looks<sp/>pretty<sp/>much<sp/>the<sp/>same.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#filtered<sp/>=<sp/>max(convolve(y,<sp/>h1[i_first:i_last][::-1],<sp/>mode=&apos;same&apos;).real)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:<sp/>These<sp/>conjugations<sp/>are<sp/>here<sp/>in<sp/>case<sp/>the<sp/>vdot<sp/>line<sp/>starts<sp/>acting<sp/>up<sp/>again.<sp/>They</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shouldn&apos;t<sp/>be<sp/>needed<sp/>anyway,<sp/>but<sp/>weird<sp/>stuff<sp/>happens<sp/>sometimes.</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#y<sp/>=<sp/>y.conj()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#h1<sp/>=<sp/>h1.conj()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>filtered<sp/>=<sp/>vdot(y,<sp/>h1[::-1]).real<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>NOTE:<sp/>Filter<sp/>the<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:<sp/>If<sp/>an<sp/>LFM<sp/>pulse<sp/>is<sp/>detected<sp/>using<sp/>the<sp/>filter,<sp/>send<sp/>back<sp/>a<sp/>1<sp/>to<sp/>what&apos;s<sp/>effectively<sp/>an</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulator;<sp/>otherwise,<sp/>send<sp/>a<sp/>0.</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>filtered<sp/>&gt;<sp/>threshold<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purpose:<sp/>Runs<sp/>2000<sp/>trials<sp/>of<sp/>LFM<sp/>match<sp/>filtering:<sp/>1000<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>signal<sp/>+<sp/>noise<sp/>present<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>1000</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>without<sp/>the<sp/>only<sp/>noise<sp/>present.<sp/>This<sp/>information<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>used<sp/>to<sp/>compute<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>display<sp/>the</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>confusion<sp/>matrix,<sp/>TPR,<sp/>FPR,<sp/>FNR,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>TNR<sp/>(true<sp/>positive<sp/>rate,<sp/>false<sp/>positive<sp/>rate,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false<sp/>negative<sp/>rate,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>true<sp/>negative<sp/>rate,<sp/>respectively).</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters:<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproblem2_1aa01db30d1af7a68c5e8730980035b12d" kindref="member">test1</ref><sp/>():</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>iters<sp/>=<sp/>1000</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>th<sp/>=<sp/>50</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>TP<sp/>=<sp/>sum([<ref refid="namespaceproblem2_1a851d24b57586d977e7862d3d24c44c04" kindref="member">match_filter</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>th)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(iters)])</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>FP<sp/>=<sp/>sum([<ref refid="namespaceproblem2_1a851d24b57586d977e7862d3d24c44c04" kindref="member">match_filter</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>th)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(iters)])</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>FN<sp/>=<sp/>iters<sp/>-<sp/>TP</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>TN<sp/>=<sp/>iters<sp/>-<sp/>FP</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;SNR:<sp/>%d<sp/>%s,<sp/>T_detect:<sp/>%d&apos;</highlight><highlight class="normal"><sp/>%(SNR[0],<sp/>SNR[1],<sp/>th))</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceproblem2_1af45c020c2bf953caff11b0acf09cf546" kindref="member">draw_confusion_matrix</ref>(TP,<sp/>FN,<sp/>FP,<sp/>TN)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>TPR<sp/>=<sp/><ref refid="namespaceproblem2_1a9bf4098285ac47949356dfe0f7820cb0" kindref="member">calc_TPR</ref>(TP,<sp/>FN)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>FPR<sp/>=<sp/><ref refid="namespaceproblem2_1a7833a6d5d53d67f750db465147385782" kindref="member">calc_FPR</ref>(FP,<sp/>TN)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>FNR<sp/>=<sp/>1<sp/>-<sp/>TPR</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>TNR<sp/>=<sp/>1<sp/>-<sp/>FPR</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;TPR:<sp/>%.3f&apos;</highlight><highlight class="normal"><sp/>%TPR)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;FPR:<sp/>%.3f&apos;</highlight><highlight class="normal"><sp/>%FPR)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;FNR:<sp/>%.3f&apos;</highlight><highlight class="normal"><sp/>%FNR)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;TNR:<sp/>%.3f&apos;</highlight><highlight class="normal"><sp/>%TNR)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>print()</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purpose:<sp/>Displays<sp/>a<sp/>confusion<sp/>matrix<sp/>based<sp/>on<sp/>the<sp/>given<sp/>true<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>false<sp/>positive<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>negative</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters:<sp/>TP<sp/>&lt;-<sp/>An<sp/>integer<sp/>number<sp/>of<sp/>true<sp/>positives.</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FN<sp/>&lt;-<sp/>An<sp/>integer<sp/>number<sp/>of<sp/>false<sp/>negatives.</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FP<sp/>&lt;-<sp/>An<sp/>integer<sp/>number<sp/>of<sp/>false<sp/>positives.</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TN<sp/>&lt;-<sp/>An<sp/>integer<sp/>number<sp/>of<sp/>true<sp/>negatives.</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproblem2_1af45c020c2bf953caff11b0acf09cf546" kindref="member">draw_confusion_matrix</ref><sp/>(TP:<sp/>int,<sp/>FN:<sp/>int,<sp/>FP:<sp/>int,<sp/>TN:<sp/>int):</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;___________________&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;|<sp/><sp/><sp/>|<sp/><sp/>PP<sp/><sp/>|<sp/><sp/>PN<sp/><sp/>|&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;|---|------|------|&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;|<sp/>P<sp/>|<sp/>%4d<sp/>|<sp/>%4d<sp/>|&apos;</highlight><highlight class="normal"><sp/>%(TP,<sp/>FN))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;|---|------|------|&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;|<sp/>N<sp/>|<sp/>%4d<sp/>|<sp/>%4d<sp/>|&apos;</highlight><highlight class="normal"><sp/>%(FP,<sp/>TN))</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;|___|______|______|&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>print()</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purpose:<sp/>Calculates<sp/>the<sp/>TPR<sp/>(true<sp/>positive<sp/>rate)<sp/>based<sp/>on<sp/>the<sp/>given<sp/>true<sp/>positive<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>false</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negative<sp/>values.</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters:<sp/>TP<sp/>&lt;-<sp/>An<sp/>integer<sp/>number<sp/>of<sp/>true<sp/>positives.</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FN<sp/>&lt;-<sp/>An<sp/>integer<sp/>number<sp/>of<sp/>false<sp/>negatives.</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral">def<sp/>calc_TPR<sp/>(TP,<sp/>FN):</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TP/(TP<sp/>+<sp/>FN)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purpose:<sp/>Calculates<sp/>the<sp/>TPR<sp/>(false<sp/>positive<sp/>rate)<sp/>based<sp/>on<sp/>the<sp/>given<sp/>false<sp/>positive<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>true</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negative<sp/>values.</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters:<sp/>FP<sp/>&lt;-<sp/>An<sp/>integer<sp/>number<sp/>of<sp/>false<sp/>positives.</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TN<sp/>&lt;-<sp/>An<sp/>integer<sp/>number<sp/>of<sp/>true<sp/>negatives.</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral">def<sp/>calc_FPR<sp/>(FP,<sp/>TN):</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FP/(FP<sp/>+<sp/>TN)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>NOTE:</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purpose:<sp/>Runs<sp/>2000<sp/>trials<sp/>of<sp/>LFM<sp/>match<sp/>filtering:<sp/>1000<sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>the<sp/>signal<sp/>+<sp/>noise<sp/>present<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>1000</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>without<sp/>the<sp/>only<sp/>noise<sp/>present<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>each<sp/>threshold<sp/>value<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>the<sp/>range<sp/>[-50,<sp/>150].<sp/>This</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>information<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>used<sp/>to<sp/>compute<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>display<sp/>the<sp/>ROC<sp/>(receiver<sp/>operating<sp/>characteristic)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curve<sp/>of<sp/>the<sp/>LFM<sp/>signal<sp/>detector<sp/>based<sp/>on<sp/>the<sp/>TPR<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>FPR<sp/>(true<sp/>positive<sp/>rate,<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false<sp/>positive<sp/>rate,<sp/>respectively).</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>Parameters:<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral">def<sp/>test2():</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>threshold_range<sp/>=<sp/>range(-50,<sp/>151)</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>iters<sp/>=<sp/>1000</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>TP<sp/>=<sp/>[sum([<ref refid="namespaceproblem2_1a851d24b57586d977e7862d3d24c44c04" kindref="member">match_filter</ref>(</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>th)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(iters)])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>th<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>threshold_range]</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>FP<sp/>=<sp/>[sum([<ref refid="namespaceproblem2_1a851d24b57586d977e7862d3d24c44c04" kindref="member">match_filter</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">,<sp/>th)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(iters)])<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>th<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>threshold_range]</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>FN<sp/>=<sp/>iters<sp/>-<sp/>asarray([TP])</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>TN<sp/>=<sp/>iters<sp/>-<sp/>asarray([FP])</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>TPR<sp/>=<sp/><ref refid="namespaceproblem2_1a9bf4098285ac47949356dfe0f7820cb0" kindref="member">calc_TPR</ref>(TP,<sp/>FN)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>FPR<sp/>=<sp/><ref refid="namespaceproblem2_1a7833a6d5d53d67f750db465147385782" kindref="member">calc_FPR</ref>(FP,<sp/>TN)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&apos;TP:&apos;,<sp/>TP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print(&apos;FP:&apos;,<sp/>FP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>plot(FPR,<sp/>TPR,<sp/></highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>xlabel(</highlight><highlight class="stringliteral">&apos;False<sp/>Positive<sp/>Rate<sp/>(unitless)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ylabel(</highlight><highlight class="stringliteral">&apos;True<sp/>Positive<sp/>Rate<sp/>(unitless)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>suptitle(</highlight><highlight class="stringliteral">&apos;ROC<sp/>Curve<sp/>of<sp/>LFM<sp/>Pulse<sp/>Detector&apos;</highlight><highlight class="normal">,<sp/>fontsize=</highlight><highlight class="stringliteral">&apos;x-large&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>title(</highlight><highlight class="stringliteral">&apos;SNR<sp/>=<sp/>%d<sp/>%s,<sp/>$T_{detect}$<sp/>=<sp/>[%d,<sp/>%d]&apos;</highlight><highlight class="normal"><sp/>%(SNR[0],<sp/>SNR[1],<sp/>threshold_range[0],</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold_range[-1]))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>show()</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproblem2_1a5bc68aafe95fc8640efeb5eef2317d68" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>print()</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceproblem2_1aa01db30d1af7a68c5e8730980035b12d" kindref="member">test1</ref>()</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceproblem2_1ac761d688511e4ccaafe34d5a9beb5a70" kindref="member">test2</ref>()</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceproblem2_1a5bc68aafe95fc8640efeb5eef2317d68" kindref="member">main</ref>()</highlight></codeline>
    </programlisting>
    <location file="/home/chris/Documents/ece6040/homework/hw3/problem2.py"/>
  </compounddef>
</doxygen>
